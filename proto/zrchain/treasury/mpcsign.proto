syntax = "proto3";
package zrchain.treasury;

// import "ibc/applications/interchain_accounts/controller/v1/tx.proto";

import "google/protobuf/any.proto";
import "zrchain/treasury/key.proto";
import "zrchain/treasury/wallet.proto";

option go_package = "github.com/Zenrock-Foundation/zrchain/v5/x/treasury/types";

// SignRequestStatus indicates the status of an MPC signature request.
// A request starts as "pending", waiting to be picked up. Then it can move to
// either "approved" or "rejected", depending on the decision of the MPC nodes.
enum SignRequestStatus {
  // The request is missing the status field.
  SIGN_REQUEST_STATUS_UNSPECIFIED = 0;

  // The request is waiting to be fulfilled. This is the initial state of a
  // request.
  SIGN_REQUEST_STATUS_PENDING = 1;

  // The request is partially fulfilled - at least one more response from
  // a different MPC party is needed to confirm it.
  SIGN_REQUEST_STATUS_PARTIAL = 2;

  // The request was fulfilled. This is a final state for a request.
  SIGN_REQUEST_STATUS_FULFILLED = 3;

  // The request was rejected. This is a final state for a request.
  SIGN_REQUEST_STATUS_REJECTED = 4;
}

// format of a sign request
message SignRequest {
  uint64 id = 1;
  string creator = 2;
  uint64 key_id = 3; // Deprecated
  KeyType key_type = 4;
  repeated bytes data_for_signing = 5;
  SignRequestStatus status = 6;
  repeated SignedDataWithID signed_data = 7;
  repeated bytes keyring_party_signatures = 8;
  string reject_reason = 9;
  google.protobuf.Any metadata = 10;
  uint64 parent_req_id = 11;
  repeated uint64 child_req_ids = 12;
  bytes cache_id = 13;
  repeated uint64 key_ids = 14;
  uint64 mpc_btl = 15;
  uint64 fee = 16;
}

// format of a signed data with an id value used to sort the signed data
message SignedDataWithID {
  uint64 sign_request_id = 1;
  bytes signed_data = 2;
}

// format of a sign transaction request
message SignTransactionRequest {
  uint64 id = 1;
  string creator = 2;
  uint64 key_id = 3;
  WalletType wallet_type = 4;
  bytes unsigned_transaction = 5;
  uint64 sign_request_id = 6;
  bool no_broadcast = 7;
}

// format of a sign request response
message SignReqResponse {
  uint64 id = 1;
  string creator = 2;
  repeated uint64 key_ids = 3;
  string key_type = 4;
  repeated bytes data_for_signing = 5;
  string status = 6;
  repeated SignedDataWithID signed_data = 7;
  repeated bytes keyring_party_signatures = 8;
  string reject_reason = 9;
  google.protobuf.Any metadata = 10;
  uint64 parent_req_id = 11;
  repeated uint64 child_req_ids = 12;
  bytes cache_id = 13;
  uint64 mpc_btl = 14;
  uint64 fee = 15;
}

// format of a sign transaction request response
message SignTxReqResponse {
  uint64 id = 1;
  string creator = 2;
  uint64 key_id = 3;
  string wallet_type = 4;
  bytes unsigned_transaction = 5;
  uint64 sign_request_id = 6;
  bool no_broadcast = 7;
  uint64 mpc_btl = 8;
}

// format of a sign transaction request for an InterChain Account transaction
message ICATransactionRequest {
  uint64 id = 1;
  string creator = 2;
  uint64 key_id = 3;
  KeyType key_type = 4;
  bytes input_msg = 5;
  // ibc.applications.interchain_accounts.v1.MsgSendTx input_msg = 5;
  SignRequestStatus status = 6;
  repeated bytes signed_data = 7;
  repeated bytes keyring_party_signatures = 8;
  string reject_reason = 9;
}
