syntax = "proto3";

package zrchain.zentp;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "zrchain/zentp/params.proto";

option go_package = "github.com/Zenrock-Foundation/zrchain/v5/x/zentp/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams (MsgUpdateParams) returns (MsgUpdateParamsResponse);

  // MintRock defines an operation for creating a mint request of Rock
  // on a destination chain
  rpc MintRock     (MsgMintRock    ) returns (MsgMintRockResponse    );

  // Burn defines an operation for burning Rock for a module account
  rpc Burn         (MsgBurn        ) returns (MsgBurnResponse        );
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                       "authority";
  option           (amino.name) = "zrchain/x/zentp/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgMintRock {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  
  // amount is the amount to mint  on the destination chain
  uint64 amount        = 2;
  uint64 source_key_id = 3;
  
  // destination is the caip identifier for the destination chain
  string destination = 4;
  
  // recipient is the keyID for the destination chain
  uint64 recipient = 5;
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgMintRockResponse {}

// MsgBurn is the Msg/Burn request type and gated through governance
message MsgBurn {
  option (cosmos.msg.v1.signer) =                   "authority";
  option           (amino.name) = "zrchain/x/zentp/MsgMintRock";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  string module_account = 2;
  string denom   = 3;
  int64  amount  = 4;
}

// MsgBurnResponse defines the response structure for executing a
// MsgBurn message.
message MsgBurnResponse {}

