syntax = "proto3";

package zrchain.validation;

import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "tendermint/types/types.proto";
import "zrchain/validation/asset_data.proto";
import "zrchain/validation/staking.proto";

option go_package = "github.com/Zenrock-Foundation/zrchain/v5/x/validation/types";

// HV stands for Hybrid Validation. These types differ from SDK staking types
// as they provide support for multiple token types.

// Validator defines a validator, together with the total amount of the
// Validator's bond shares and their exchange rate to coins. Slashing results in
// a decrease in the exchange rate, allowing correct calculation of future
// undelegations without iterating over delegators. When coins are delegated to
// this validator, the validator is credited with a delegation whose number of
// bond shares is based on the amount of coins delegated divided by the current
// exchange rate. Voting power can be calculated as total bonded shares
// multiplied by exchange rate.
message ValidatorHV {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // operator_address defines the address of the validator's operator; bech
  // encoded in JSON.
  string operator_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // consensus_pubkey is the consensus public key of the validator, as a
  // Protobuf Any.
  google.protobuf.Any consensus_pubkey = 2 [(cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey"];
  // jailed defined whether the validator has been jailed from bonded status or
  // not.
  bool jailed = 3;
  // status is the validator status (bonded/unbonding/unbonded).
  BondStatus status = 4;
  // tokens define the delegated tokens (incl. self-delegation).
  string tokensNative = 5 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  string tokensAVS = 6 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  // delegator_shares defines total shares issued to a validator's delegators.
  string delegator_shares = 7 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
  // description defines the description terms for the validator.
  Description description = 8 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  // unbonding_height defines, if unbonding, the height at which this validator
  // has begun unbonding.
  int64 unbonding_height = 9;
  // unbonding_time defines, if unbonding, the min time for the validator to
  // complete unbonding.
  google.protobuf.Timestamp unbonding_time = 10 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (gogoproto.stdtime) = true
  ];
  // commission defines the commission parameters.
  Commission commission = 11 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  // min_self_delegation is the validator's self declared minimum self
  // delegation.
  string min_self_delegation = 12 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];

  // strictly positive if this validator's unbonding has been stopped by
  // external modules
  int64 unbonding_on_hold_ref_count = 13;

  // list of unbonding ids, each uniquely identifying an unbonding of this
  // validator
  repeated uint64 unbonding_ids = 14;
}

// HistoricalInfo contains header and validator information for a given block.
// It is stored as part of staking module's state, which persists the `n` most
// recent HistoricalInfo
// (`n` is set by the staking module's `historical_entries` parameter).
message HistoricalInfoHV {
  tendermint.types.Header header = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  repeated ValidatorHV valset = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

message SlashEvent {
  int64 blockHeight = 1;
  string validatorAddr = 2;
  string percentageSlashed = 3 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
  string tokensSlashedNative = 4 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  string tokensSlashedAVS = 5 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

message HVParams {
  string AVSRewardsRate = 1 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ]; // % APR
  int64 BlockTime = 2; // seconds
  repeated AssetData stakeableAssets = 3;
  string authority = 4;
}

message ValidationInfo {
  repeated string non_voting_validators = 1;
  repeated string mismatched_vote_extensions = 2;
}
