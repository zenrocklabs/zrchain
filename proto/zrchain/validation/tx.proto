syntax = "proto3";

package zrchain.validation;

import "amino/amino.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "tendermint/abci/types.proto";
import "zrchain/validation/hybrid_validation.proto";
import "zrchain/validation/staking.proto";

option go_package = "github.com/Zenrock-Foundation/zrchain/v6/x/validation/types";

// Msg defines the staking Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // CreateValidator defines a method for creating a new validator.
  rpc CreateValidator(MsgCreateValidator) returns (MsgCreateValidatorResponse);

  // EditValidator defines a method for editing an existing validator.
  rpc EditValidator(MsgEditValidator) returns (MsgEditValidatorResponse);

  // Delegate defines a method for performing a delegation of coins
  // from a delegator to a validator.
  rpc Delegate(MsgDelegate) returns (MsgDelegateResponse);

  // BeginRedelegate defines a method for performing a redelegation
  // of coins from a delegator and source validator to a destination validator.
  rpc BeginRedelegate(MsgBeginRedelegate) returns (MsgBeginRedelegateResponse);

  // Undelegate defines a method for performing an undelegation from a
  // delegate and a validator.
  rpc Undelegate(MsgUndelegate) returns (MsgUndelegateResponse);

  // CancelUnbondingDelegation defines a method for performing canceling the
  // unbonding delegation and delegate back to previous validator.

  // Since: cosmos-sdk 0.46
  rpc CancelUnbondingDelegation(MsgCancelUnbondingDelegation)
      returns (MsgCancelUnbondingDelegationResponse);

  // UpdateParams defines an operation for updating the x/staking module
  // parameters.
  // Since: cosmos-sdk 0.47
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  rpc UpdateHVParams(MsgUpdateHVParams) returns (MsgUpdateHVParamsResponse);
}

// MsgCreateValidator defines a SDK message for creating a new validator.
message MsgCreateValidator {
  option (cosmos.msg.v1.signer) = "validator_address";
  option (amino.name) = "zrchain/MsgCreateValidator";
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  Description description = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
  CommissionRates commission = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
  string min_self_delegation = 3 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];

  // Deprecated: Use of Delegator Address in MsgCreateValidator is deprecated.
  // The validator address bytes and delegator address bytes refer to the same
  // account while creating validator (defer only in bech32 notation).
  string delegator_address = 4
      [ (cosmos_proto.scalar) = "cosmos.AddressString", deprecated = true ];
  string validator_address = 5
      [ (cosmos_proto.scalar) = "cosmos.ValidatorAddressString" ];
  google.protobuf.Any pubkey = 6
      [ (cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey" ];
  cosmos.base.v1beta1.Coin value = 7
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// MsgCreateValidatorResponse defines the Msg/CreateValidator response type.
message MsgCreateValidatorResponse {}

// MsgEditValidator defines a SDK message for editing an existing validator.
message MsgEditValidator {
  option (cosmos.msg.v1.signer) = "validator_address";
  option (amino.name) = "zrchain/MsgEditValidator";
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  Description description = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
  string validator_address = 2
      [ (cosmos_proto.scalar) = "cosmos.ValidatorAddressString" ];

  // We pass a reference to the new commission rate and min self delegation as
  // it's not mandatory to update. If not updated, the deserialized rate will be
  // zero with no way to distinguish if an update was intended.
  // REF: #2373
  string commission_rate = 3 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec"
  ];
  string min_self_delegation = 4 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int"
  ];
}

// MsgEditValidatorResponse defines the Msg/EditValidator response type.
message MsgEditValidatorResponse {}

// MsgDelegate defines a SDK message for performing a delegation of coins
// from a delegator to a validator.
message MsgDelegate {
  option (cosmos.msg.v1.signer) = "delegator_address";
  option (amino.name) = "zrchain/MsgDelegate";
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  string delegator_address = 1
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string validator_address = 2
      [ (cosmos_proto.scalar) = "cosmos.ValidatorAddressString" ];
  cosmos.base.v1beta1.Coin amount = 3
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// MsgDelegateResponse defines the Msg/Delegate response type.
message MsgDelegateResponse {}

// MsgBeginRedelegate defines a SDK message for performing a redelegation
// of coins from a delegator and source validator to a destination validator.
message MsgBeginRedelegate {
  option (cosmos.msg.v1.signer) = "delegator_address";
  option (amino.name) = "zrchain/MsgBeginRedelegate";
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  string delegator_address = 1
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string validator_src_address = 2
      [ (cosmos_proto.scalar) = "cosmos.ValidatorAddressString" ];
  string validator_dst_address = 3
      [ (cosmos_proto.scalar) = "cosmos.ValidatorAddressString" ];
  cosmos.base.v1beta1.Coin amount = 4
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// MsgBeginRedelegateResponse defines the Msg/BeginRedelegate response type.
message MsgBeginRedelegateResponse {
  google.protobuf.Timestamp completion_time = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (gogoproto.stdtime) = true
  ];
}

// MsgUndelegate defines a SDK message for performing an undelegation from a
// delegate and a validator.
message MsgUndelegate {
  option (cosmos.msg.v1.signer) = "delegator_address";
  option (amino.name) = "zrchain/MsgUndelegate";
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  string delegator_address = 1
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string validator_address = 2
      [ (cosmos_proto.scalar) = "cosmos.ValidatorAddressString" ];
  cosmos.base.v1beta1.Coin amount = 3
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// MsgUndelegateResponse defines the Msg/Undelegate response type.
message MsgUndelegateResponse {
  google.protobuf.Timestamp completion_time = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (gogoproto.stdtime) = true
  ];

  // amount returns the amount of undelegated coins

  // Since: cosmos-sdk 0.50
  cosmos.base.v1beta1.Coin amount = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// MsgCancelUnbondingDelegation defines the SDK message for performing a cancel
// unbonding delegation for delegator
//
// Since: cosmos-sdk 0.46
message MsgCancelUnbondingDelegation {
  option (cosmos.msg.v1.signer) = "delegator_address";
  option (amino.name) = "zrchain/MsgCancelUnbondingDelegation";
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  string delegator_address = 1
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string validator_address = 2
      [ (cosmos_proto.scalar) = "cosmos.ValidatorAddressString" ];

  // amount is always less than or equal to unbonding delegation entry balance
  cosmos.base.v1beta1.Coin amount = 3
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];

  // creation_height is the height which the unbonding took place.
  int64 creation_height = 4;
}

// MsgCancelUnbondingDelegationResponse
//
// Since: cosmos-sdk 0.46
message MsgCancelUnbondingDelegationResponse {}

// MsgUpdateParams is the Msg/UpdateParams request type.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "zrchain/x/validation/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless
  // overwritten).
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // params defines the x/validation parameters to update.

  // NOTE: All parameters must be supplied.
  Params Params = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];

  // use MsgUpdateHVParams instead
  HVParams HVParams = 3 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    deprecated = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParamsResponse {}

message MsgUpdateHVParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "zrchain/x/validation/MsgUpdateHVParams";

  // authority is the address that controls the module (defaults to x/gov unless
  // overwritten).
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // NOTE: All parameters must be supplied.
  HVParams HVParams = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

message MsgUpdateHVParamsResponse {}
