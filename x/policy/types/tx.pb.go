// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: zrchain/policy/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	types "github.com/cosmos/cosmos-sdk/codec/types"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgUpdateParams is the Msg/UpdateParams request type.
type MsgUpdateParams struct {
	// authority is the address that controls the module (defaults to x/gov unless
	// overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// NOTE: All parameters must be supplied.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateParams) Reset()         { *m = MsgUpdateParams{} }
func (m *MsgUpdateParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParams) ProtoMessage()    {}
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_7722b46344e0a759, []int{0}
}
func (m *MsgUpdateParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParams.Merge(m, src)
}
func (m *MsgUpdateParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParams proto.InternalMessageInfo

func (m *MsgUpdateParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
type MsgUpdateParamsResponse struct {
}

func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsResponse) ProtoMessage()    {}
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7722b46344e0a759, []int{1}
}
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsResponse proto.InternalMessageInfo

// MsgNewPolicy defines the Msg/NewPolicy request type.
type MsgNewPolicy struct {
	Creator string     `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name    string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Policy  *types.Any `protobuf:"bytes,3,opt,name=policy,proto3" json:"policy,omitempty"`
	Btl     uint64     `protobuf:"varint,4,opt,name=btl,proto3" json:"btl,omitempty"`
}

func (m *MsgNewPolicy) Reset()         { *m = MsgNewPolicy{} }
func (m *MsgNewPolicy) String() string { return proto.CompactTextString(m) }
func (*MsgNewPolicy) ProtoMessage()    {}
func (*MsgNewPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_7722b46344e0a759, []int{2}
}
func (m *MsgNewPolicy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgNewPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgNewPolicy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgNewPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgNewPolicy.Merge(m, src)
}
func (m *MsgNewPolicy) XXX_Size() int {
	return m.Size()
}
func (m *MsgNewPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgNewPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_MsgNewPolicy proto.InternalMessageInfo

func (m *MsgNewPolicy) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgNewPolicy) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgNewPolicy) GetPolicy() *types.Any {
	if m != nil {
		return m.Policy
	}
	return nil
}

func (m *MsgNewPolicy) GetBtl() uint64 {
	if m != nil {
		return m.Btl
	}
	return 0
}

// MsgNewPolicyResponse defines the response structure for executing a
// MsgNewPolicy message.
type MsgNewPolicyResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgNewPolicyResponse) Reset()         { *m = MsgNewPolicyResponse{} }
func (m *MsgNewPolicyResponse) String() string { return proto.CompactTextString(m) }
func (*MsgNewPolicyResponse) ProtoMessage()    {}
func (*MsgNewPolicyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7722b46344e0a759, []int{3}
}
func (m *MsgNewPolicyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgNewPolicyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgNewPolicyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgNewPolicyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgNewPolicyResponse.Merge(m, src)
}
func (m *MsgNewPolicyResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgNewPolicyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgNewPolicyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgNewPolicyResponse proto.InternalMessageInfo

func (m *MsgNewPolicyResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// MsgRevokeAction defines the Msg/RevokeAction request type.
type MsgRevokeAction struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ActionId uint64 `protobuf:"varint,2,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
}

func (m *MsgRevokeAction) Reset()         { *m = MsgRevokeAction{} }
func (m *MsgRevokeAction) String() string { return proto.CompactTextString(m) }
func (*MsgRevokeAction) ProtoMessage()    {}
func (*MsgRevokeAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_7722b46344e0a759, []int{4}
}
func (m *MsgRevokeAction) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRevokeAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRevokeAction.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRevokeAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRevokeAction.Merge(m, src)
}
func (m *MsgRevokeAction) XXX_Size() int {
	return m.Size()
}
func (m *MsgRevokeAction) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRevokeAction.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRevokeAction proto.InternalMessageInfo

func (m *MsgRevokeAction) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRevokeAction) GetActionId() uint64 {
	if m != nil {
		return m.ActionId
	}
	return 0
}

// MsgRevokeActionResponse defines the response structure for executing a
// MsgRevokeAction message.
type MsgRevokeActionResponse struct {
}

func (m *MsgRevokeActionResponse) Reset()         { *m = MsgRevokeActionResponse{} }
func (m *MsgRevokeActionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRevokeActionResponse) ProtoMessage()    {}
func (*MsgRevokeActionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7722b46344e0a759, []int{5}
}
func (m *MsgRevokeActionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRevokeActionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRevokeActionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRevokeActionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRevokeActionResponse.Merge(m, src)
}
func (m *MsgRevokeActionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRevokeActionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRevokeActionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRevokeActionResponse proto.InternalMessageInfo

// MsgApproveAction defines the Msg/ApproveAction request type.
type MsgApproveAction struct {
	Creator              string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ActionType           string       `protobuf:"bytes,2,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`
	ActionId             uint64       `protobuf:"varint,3,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	AdditionalSignatures []*types.Any `protobuf:"bytes,4,rep,name=additional_signatures,json=additionalSignatures,proto3" json:"additional_signatures,omitempty"`
}

func (m *MsgApproveAction) Reset()         { *m = MsgApproveAction{} }
func (m *MsgApproveAction) String() string { return proto.CompactTextString(m) }
func (*MsgApproveAction) ProtoMessage()    {}
func (*MsgApproveAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_7722b46344e0a759, []int{6}
}
func (m *MsgApproveAction) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgApproveAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgApproveAction.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgApproveAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgApproveAction.Merge(m, src)
}
func (m *MsgApproveAction) XXX_Size() int {
	return m.Size()
}
func (m *MsgApproveAction) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgApproveAction.DiscardUnknown(m)
}

var xxx_messageInfo_MsgApproveAction proto.InternalMessageInfo

func (m *MsgApproveAction) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgApproveAction) GetActionType() string {
	if m != nil {
		return m.ActionType
	}
	return ""
}

func (m *MsgApproveAction) GetActionId() uint64 {
	if m != nil {
		return m.ActionId
	}
	return 0
}

func (m *MsgApproveAction) GetAdditionalSignatures() []*types.Any {
	if m != nil {
		return m.AdditionalSignatures
	}
	return nil
}

// MsgApproveActionResponse defines the response structure for executing a
// MsgApproveAction message.
type MsgApproveActionResponse struct {
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (m *MsgApproveActionResponse) Reset()         { *m = MsgApproveActionResponse{} }
func (m *MsgApproveActionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgApproveActionResponse) ProtoMessage()    {}
func (*MsgApproveActionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7722b46344e0a759, []int{7}
}
func (m *MsgApproveActionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgApproveActionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgApproveActionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgApproveActionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgApproveActionResponse.Merge(m, src)
}
func (m *MsgApproveActionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgApproveActionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgApproveActionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgApproveActionResponse proto.InternalMessageInfo

func (m *MsgApproveActionResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

// MsgAddSignMethod defines the Msg/AddSignMethod request type.
type MsgAddSignMethod struct {
	Creator string     `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Config  *types.Any `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (m *MsgAddSignMethod) Reset()         { *m = MsgAddSignMethod{} }
func (m *MsgAddSignMethod) String() string { return proto.CompactTextString(m) }
func (*MsgAddSignMethod) ProtoMessage()    {}
func (*MsgAddSignMethod) Descriptor() ([]byte, []int) {
	return fileDescriptor_7722b46344e0a759, []int{8}
}
func (m *MsgAddSignMethod) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddSignMethod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddSignMethod.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddSignMethod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddSignMethod.Merge(m, src)
}
func (m *MsgAddSignMethod) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddSignMethod) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddSignMethod.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddSignMethod proto.InternalMessageInfo

func (m *MsgAddSignMethod) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddSignMethod) GetConfig() *types.Any {
	if m != nil {
		return m.Config
	}
	return nil
}

// MsgAddSignMethodResponse defines the response structure for executing a
// MsgAddSignMethod message.
type MsgAddSignMethodResponse struct {
}

func (m *MsgAddSignMethodResponse) Reset()         { *m = MsgAddSignMethodResponse{} }
func (m *MsgAddSignMethodResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddSignMethodResponse) ProtoMessage()    {}
func (*MsgAddSignMethodResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7722b46344e0a759, []int{9}
}
func (m *MsgAddSignMethodResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddSignMethodResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddSignMethodResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddSignMethodResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddSignMethodResponse.Merge(m, src)
}
func (m *MsgAddSignMethodResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddSignMethodResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddSignMethodResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddSignMethodResponse proto.InternalMessageInfo

// MsgRemoveSignMethod defines the Msg/RemoveSignMethod request type.
type MsgRemoveSignMethod struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgRemoveSignMethod) Reset()         { *m = MsgRemoveSignMethod{} }
func (m *MsgRemoveSignMethod) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveSignMethod) ProtoMessage()    {}
func (*MsgRemoveSignMethod) Descriptor() ([]byte, []int) {
	return fileDescriptor_7722b46344e0a759, []int{10}
}
func (m *MsgRemoveSignMethod) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveSignMethod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveSignMethod.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveSignMethod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveSignMethod.Merge(m, src)
}
func (m *MsgRemoveSignMethod) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveSignMethod) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveSignMethod.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveSignMethod proto.InternalMessageInfo

func (m *MsgRemoveSignMethod) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRemoveSignMethod) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// MsgRemoveSignMethodResponse defines the response structure for executing a
// MsgRemoveSignMethod message.
type MsgRemoveSignMethodResponse struct {
}

func (m *MsgRemoveSignMethodResponse) Reset()         { *m = MsgRemoveSignMethodResponse{} }
func (m *MsgRemoveSignMethodResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveSignMethodResponse) ProtoMessage()    {}
func (*MsgRemoveSignMethodResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7722b46344e0a759, []int{11}
}
func (m *MsgRemoveSignMethodResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveSignMethodResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveSignMethodResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveSignMethodResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveSignMethodResponse.Merge(m, src)
}
func (m *MsgRemoveSignMethodResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveSignMethodResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveSignMethodResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveSignMethodResponse proto.InternalMessageInfo

// MsgAddMultiGrant defines the Msg/AddMultiGrant request type.
type MsgAddMultiGrant struct {
	Creator string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Grantee string   `protobuf:"bytes,2,opt,name=grantee,proto3" json:"grantee,omitempty"`
	Msgs    []string `protobuf:"bytes,3,rep,name=msgs,proto3" json:"msgs,omitempty"`
}

func (m *MsgAddMultiGrant) Reset()         { *m = MsgAddMultiGrant{} }
func (m *MsgAddMultiGrant) String() string { return proto.CompactTextString(m) }
func (*MsgAddMultiGrant) ProtoMessage()    {}
func (*MsgAddMultiGrant) Descriptor() ([]byte, []int) {
	return fileDescriptor_7722b46344e0a759, []int{12}
}
func (m *MsgAddMultiGrant) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddMultiGrant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddMultiGrant.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddMultiGrant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddMultiGrant.Merge(m, src)
}
func (m *MsgAddMultiGrant) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddMultiGrant) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddMultiGrant.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddMultiGrant proto.InternalMessageInfo

func (m *MsgAddMultiGrant) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddMultiGrant) GetGrantee() string {
	if m != nil {
		return m.Grantee
	}
	return ""
}

func (m *MsgAddMultiGrant) GetMsgs() []string {
	if m != nil {
		return m.Msgs
	}
	return nil
}

// MsgAddMultiGrantResponse defines the response structure for executing a
// MsgAddMultiGrant message.
type MsgAddMultiGrantResponse struct {
}

func (m *MsgAddMultiGrantResponse) Reset()         { *m = MsgAddMultiGrantResponse{} }
func (m *MsgAddMultiGrantResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddMultiGrantResponse) ProtoMessage()    {}
func (*MsgAddMultiGrantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7722b46344e0a759, []int{13}
}
func (m *MsgAddMultiGrantResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddMultiGrantResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddMultiGrantResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddMultiGrantResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddMultiGrantResponse.Merge(m, src)
}
func (m *MsgAddMultiGrantResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddMultiGrantResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddMultiGrantResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddMultiGrantResponse proto.InternalMessageInfo

// MsgRemoveMultiGrant defines the Msg/RemoveMultiGrant request type.
type MsgRemoveMultiGrant struct {
	Creator string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Grantee string   `protobuf:"bytes,2,opt,name=grantee,proto3" json:"grantee,omitempty"`
	Msgs    []string `protobuf:"bytes,3,rep,name=msgs,proto3" json:"msgs,omitempty"`
}

func (m *MsgRemoveMultiGrant) Reset()         { *m = MsgRemoveMultiGrant{} }
func (m *MsgRemoveMultiGrant) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveMultiGrant) ProtoMessage()    {}
func (*MsgRemoveMultiGrant) Descriptor() ([]byte, []int) {
	return fileDescriptor_7722b46344e0a759, []int{14}
}
func (m *MsgRemoveMultiGrant) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveMultiGrant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveMultiGrant.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveMultiGrant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveMultiGrant.Merge(m, src)
}
func (m *MsgRemoveMultiGrant) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveMultiGrant) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveMultiGrant.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveMultiGrant proto.InternalMessageInfo

func (m *MsgRemoveMultiGrant) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRemoveMultiGrant) GetGrantee() string {
	if m != nil {
		return m.Grantee
	}
	return ""
}

func (m *MsgRemoveMultiGrant) GetMsgs() []string {
	if m != nil {
		return m.Msgs
	}
	return nil
}

// MsgRemoveMultiGrantResponse defines the response structure for executing a
// MsgRemoveMultiGrant message.
type MsgRemoveMultiGrantResponse struct {
}

func (m *MsgRemoveMultiGrantResponse) Reset()         { *m = MsgRemoveMultiGrantResponse{} }
func (m *MsgRemoveMultiGrantResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveMultiGrantResponse) ProtoMessage()    {}
func (*MsgRemoveMultiGrantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7722b46344e0a759, []int{15}
}
func (m *MsgRemoveMultiGrantResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveMultiGrantResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveMultiGrantResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveMultiGrantResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveMultiGrantResponse.Merge(m, src)
}
func (m *MsgRemoveMultiGrantResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveMultiGrantResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveMultiGrantResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveMultiGrantResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgUpdateParams)(nil), "zrchain.policy.MsgUpdateParams")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "zrchain.policy.MsgUpdateParamsResponse")
	proto.RegisterType((*MsgNewPolicy)(nil), "zrchain.policy.MsgNewPolicy")
	proto.RegisterType((*MsgNewPolicyResponse)(nil), "zrchain.policy.MsgNewPolicyResponse")
	proto.RegisterType((*MsgRevokeAction)(nil), "zrchain.policy.MsgRevokeAction")
	proto.RegisterType((*MsgRevokeActionResponse)(nil), "zrchain.policy.MsgRevokeActionResponse")
	proto.RegisterType((*MsgApproveAction)(nil), "zrchain.policy.MsgApproveAction")
	proto.RegisterType((*MsgApproveActionResponse)(nil), "zrchain.policy.MsgApproveActionResponse")
	proto.RegisterType((*MsgAddSignMethod)(nil), "zrchain.policy.MsgAddSignMethod")
	proto.RegisterType((*MsgAddSignMethodResponse)(nil), "zrchain.policy.MsgAddSignMethodResponse")
	proto.RegisterType((*MsgRemoveSignMethod)(nil), "zrchain.policy.MsgRemoveSignMethod")
	proto.RegisterType((*MsgRemoveSignMethodResponse)(nil), "zrchain.policy.MsgRemoveSignMethodResponse")
	proto.RegisterType((*MsgAddMultiGrant)(nil), "zrchain.policy.MsgAddMultiGrant")
	proto.RegisterType((*MsgAddMultiGrantResponse)(nil), "zrchain.policy.MsgAddMultiGrantResponse")
	proto.RegisterType((*MsgRemoveMultiGrant)(nil), "zrchain.policy.MsgRemoveMultiGrant")
	proto.RegisterType((*MsgRemoveMultiGrantResponse)(nil), "zrchain.policy.MsgRemoveMultiGrantResponse")
}

func init() { proto.RegisterFile("zrchain/policy/tx.proto", fileDescriptor_7722b46344e0a759) }

var fileDescriptor_7722b46344e0a759 = []byte{
	// 830 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0x3f, 0x53, 0xdb, 0x48,
	0x14, 0xb7, 0x6c, 0x63, 0xce, 0x8b, 0x8f, 0xe3, 0x74, 0x3e, 0x10, 0xe2, 0xce, 0x78, 0x9c, 0x4c,
	0xe2, 0xe1, 0x8f, 0x34, 0x81, 0x19, 0x32, 0xa1, 0x33, 0x45, 0x32, 0x14, 0x4e, 0x88, 0x48, 0x32,
	0x0c, 0x29, 0x98, 0xb5, 0xb4, 0xc8, 0x1a, 0x2c, 0xad, 0x46, 0xbb, 0x76, 0x70, 0xaa, 0x4c, 0x4a,
	0xaa, 0x7c, 0x8c, 0x94, 0x14, 0x69, 0x52, 0xa7, 0xa1, 0x64, 0x52, 0xa5, 0xca, 0x64, 0xa0, 0xe0,
	0x0b, 0xe4, 0x03, 0x64, 0xa4, 0xd5, 0x7f, 0x64, 0x43, 0x93, 0xc6, 0xd6, 0xdb, 0xf7, 0x7b, 0xef,
	0xfd, 0x7e, 0x6f, 0x77, 0xdf, 0x82, 0xb9, 0xb7, 0x8e, 0xda, 0x85, 0x86, 0x25, 0xdb, 0xb8, 0x67,
	0xa8, 0x43, 0x99, 0x1e, 0x4b, 0xb6, 0x83, 0x29, 0xe6, 0xa7, 0x7d, 0x87, 0xc4, 0x1c, 0xe2, 0xdf,
	0xd0, 0x34, 0x2c, 0x2c, 0x7b, 0xbf, 0x0c, 0x22, 0xce, 0xa9, 0x98, 0x98, 0x98, 0xc8, 0x26, 0xd1,
	0xe5, 0xc1, 0x03, 0xf7, 0xcf, 0x77, 0xcc, 0x33, 0xc7, 0x81, 0x67, 0xc9, 0xcc, 0xf0, 0x5d, 0x55,
	0x1d, 0xeb, 0x98, 0xad, 0xbb, 0x5f, 0xfe, 0xea, 0x42, 0x8a, 0x85, 0x0d, 0x1d, 0x68, 0x06, 0x21,
	0xf3, 0x3a, 0xc6, 0x7a, 0x0f, 0xc9, 0x9e, 0xd5, 0xe9, 0x1f, 0xca, 0xd0, 0x1a, 0x32, 0x57, 0xe3,
	0x33, 0x07, 0xfe, 0x6a, 0x13, 0xfd, 0xa5, 0xad, 0x41, 0x8a, 0x76, 0xbc, 0x20, 0x7e, 0x03, 0x94,
	0x61, 0x9f, 0x76, 0xb1, 0x63, 0xd0, 0xa1, 0xc0, 0xd5, 0xb9, 0x66, 0x79, 0x4b, 0xf8, 0xfa, 0x69,
	0xb5, 0xea, 0xd3, 0x68, 0x69, 0x9a, 0x83, 0x08, 0xd9, 0xa5, 0x8e, 0x61, 0xe9, 0x4a, 0x04, 0xe5,
	0x1f, 0x81, 0x12, 0x2b, 0x2b, 0xe4, 0xeb, 0x5c, 0x73, 0x6a, 0x6d, 0x56, 0x4a, 0x76, 0x40, 0x62,
	0xf9, 0xb7, 0xca, 0x67, 0xdf, 0x17, 0x73, 0x1f, 0xaf, 0x4e, 0x97, 0x38, 0xc5, 0x0f, 0xd8, 0x5c,
	0x7f, 0x7f, 0x75, 0xba, 0x14, 0xa5, 0x3a, 0xb9, 0x3a, 0x5d, 0xaa, 0x07, 0x8a, 0x8e, 0x03, 0x4d,
	0x29, 0x9e, 0x8d, 0x79, 0x30, 0x97, 0x5a, 0x52, 0x10, 0xb1, 0xb1, 0x45, 0x50, 0xe3, 0x84, 0x03,
	0x95, 0x36, 0xd1, 0x9f, 0xa2, 0x37, 0x3b, 0x5e, 0x2c, 0x2f, 0x80, 0x49, 0xd5, 0x41, 0x90, 0x62,
	0x87, 0x29, 0x52, 0x02, 0x93, 0xe7, 0x41, 0xd1, 0x82, 0x26, 0xf2, 0x38, 0x97, 0x15, 0xef, 0x9b,
	0x5f, 0x01, 0x25, 0x56, 0x53, 0x28, 0x78, 0x4a, 0xaa, 0x12, 0xeb, 0xa0, 0x14, 0x74, 0x50, 0x6a,
	0x59, 0x43, 0xc5, 0xc7, 0xf0, 0x33, 0xa0, 0xd0, 0xa1, 0x3d, 0xa1, 0x58, 0xe7, 0x9a, 0x45, 0xc5,
	0xfd, 0xdc, 0xac, 0xb8, 0x72, 0x82, 0x0a, 0x8d, 0x7b, 0xa0, 0x1a, 0xe7, 0x12, 0x90, 0xe4, 0xa7,
	0x41, 0xde, 0xd0, 0x3c, 0x3a, 0x45, 0x25, 0x6f, 0x68, 0x8d, 0x57, 0xde, 0x56, 0x28, 0x68, 0x80,
	0x8f, 0x50, 0x4b, 0xa5, 0x06, 0xb6, 0xc6, 0xd0, 0x5e, 0x00, 0x65, 0xe8, 0x61, 0x0e, 0x0c, 0xcd,
	0xe3, 0x5e, 0x54, 0xfe, 0x60, 0x0b, 0xdb, 0x5a, 0xaa, 0x3e, 0xeb, 0x53, 0x3c, 0x6f, 0xd8, 0xa7,
	0x2f, 0x1c, 0x98, 0x69, 0x13, 0xbd, 0x65, 0xdb, 0x0e, 0x1e, 0xdc, 0x5c, 0x74, 0x11, 0x4c, 0xf9,
	0x45, 0xe9, 0xd0, 0x0e, 0x5a, 0x06, 0xd8, 0xd2, 0x8b, 0xa1, 0x8d, 0x92, 0xac, 0x0a, 0x49, 0x56,
	0xfc, 0x36, 0xf8, 0x17, 0x6a, 0x9a, 0xe1, 0x5a, 0xb0, 0x77, 0x40, 0x0c, 0xdd, 0x82, 0xb4, 0xef,
	0x20, 0x22, 0x14, 0xeb, 0x85, 0x91, 0x4d, 0xae, 0x46, 0x21, 0xbb, 0x61, 0x44, 0x4a, 0xe0, 0x1a,
	0x10, 0xd2, 0x22, 0xc2, 0x26, 0xcf, 0x82, 0x12, 0xa1, 0x90, 0xf6, 0x89, 0xaf, 0xc5, 0xb7, 0x1a,
	0x5d, 0x26, 0x5c, 0xd3, 0xdc, 0xac, 0x6d, 0x44, 0xbb, 0x58, 0x1b, 0x23, 0x7c, 0x05, 0x94, 0x54,
	0x6c, 0x1d, 0x1a, 0xba, 0x7f, 0xb4, 0x47, 0x1c, 0x08, 0x86, 0x49, 0xb1, 0x13, 0x19, 0xbb, 0x78,
	0xa5, 0xb0, 0xff, 0x6d, 0xf0, 0x8f, 0xb7, 0x35, 0x26, 0x1e, 0xa0, 0x5b, 0x11, 0x61, 0x67, 0x86,
	0x35, 0x3e, 0x6f, 0xa4, 0x77, 0xfa, 0x7f, 0xb0, 0x90, 0x91, 0x2e, 0xac, 0x16, 0x6a, 0x6e, 0xf7,
	0x7b, 0xd4, 0x78, 0xe2, 0x40, 0x8b, 0x8e, 0x29, 0x25, 0x80, 0x49, 0xdd, 0x85, 0xa0, 0x60, 0xa3,
	0x03, 0xd3, 0xbd, 0x32, 0x26, 0xd1, 0x89, 0x50, 0xa8, 0x17, 0xdc, 0x2b, 0xe3, 0x7e, 0x8f, 0xd2,
	0x1c, 0x55, 0x0a, 0x59, 0x1c, 0xc5, 0x34, 0xff, 0x76, 0x22, 0xf1, 0x8e, 0x5c, 0xe7, 0xb2, 0xf6,
	0x73, 0x02, 0x14, 0xda, 0x44, 0xe7, 0xf7, 0x40, 0x25, 0x31, 0x02, 0x17, 0xd3, 0xa3, 0x2b, 0x35,
	0x68, 0xc4, 0xfb, 0x37, 0x00, 0xc2, 0xf3, 0xf7, 0x0c, 0x94, 0xa3, 0x29, 0xf4, 0x5f, 0x46, 0x54,
	0xe8, 0x15, 0xef, 0x8e, 0xf3, 0x86, 0x09, 0xf7, 0x40, 0x25, 0x31, 0x22, 0xb2, 0xa8, 0xc6, 0x01,
	0x99, 0x54, 0xb3, 0x86, 0x01, 0xff, 0x1a, 0xfc, 0x99, 0x1c, 0x04, 0xf5, 0x8c, 0xc8, 0x04, 0x42,
	0x6c, 0xde, 0x84, 0x48, 0x24, 0x4f, 0x5c, 0xb6, 0xcc, 0xe4, 0x71, 0x44, 0x76, 0xf2, 0xac, 0x6b,
	0xc4, 0x6b, 0x60, 0xe6, 0xda, 0x1d, 0xba, 0x93, 0x29, 0x3b, 0x09, 0x12, 0x97, 0x6f, 0x01, 0x4a,
	0x49, 0x88, 0x1d, 0xd9, 0x11, 0x12, 0x22, 0xc4, 0x28, 0x09, 0xd7, 0x4f, 0x62, 0x24, 0x21, 0x96,
	0x7f, 0xb4, 0x84, 0x58, 0x89, 0xe5, 0x5b, 0x80, 0x82, 0x2a, 0xe2, 0xc4, 0x3b, 0xf7, 0xd9, 0xdd,
	0x7a, 0x7e, 0x76, 0x51, 0xe3, 0xce, 0x2f, 0x6a, 0xdc, 0x8f, 0x8b, 0x1a, 0xf7, 0xe1, 0xb2, 0x96,
	0x3b, 0xbf, 0xac, 0xe5, 0xbe, 0x5d, 0xd6, 0x72, 0xfb, 0x0f, 0x75, 0x83, 0x76, 0xfb, 0x1d, 0x49,
	0xc5, 0xa6, 0xbc, 0x8f, 0x2c, 0x07, 0xab, 0x47, 0xab, 0x8f, 0x71, 0xdf, 0xd2, 0xa0, 0xbb, 0x9b,
	0x72, 0xf0, 0x26, 0x0f, 0x36, 0xa2, 0x67, 0xd9, 0x7d, 0x0a, 0x48, 0xa7, 0xe4, 0x4d, 0xc2, 0xf5,
	0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa9, 0xc6, 0x18, 0xd5, 0x0f, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// UpdateParams defines the operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
	// NewPolicy defines the operation for creating a new policy.
	NewPolicy(ctx context.Context, in *MsgNewPolicy, opts ...grpc.CallOption) (*MsgNewPolicyResponse, error)
	// RevokeAction defines the operation for revoking an action.
	RevokeAction(ctx context.Context, in *MsgRevokeAction, opts ...grpc.CallOption) (*MsgRevokeActionResponse, error)
	// ApproveAction defines the operation for approving an action.
	ApproveAction(ctx context.Context, in *MsgApproveAction, opts ...grpc.CallOption) (*MsgApproveActionResponse, error)
	// AddSignMethod defines the operation for adding a sign method.
	AddSignMethod(ctx context.Context, in *MsgAddSignMethod, opts ...grpc.CallOption) (*MsgAddSignMethodResponse, error)
	// RemoveSignMethod defines the operation for removing a sign method.
	RemoveSignMethod(ctx context.Context, in *MsgRemoveSignMethod, opts ...grpc.CallOption) (*MsgRemoveSignMethodResponse, error)
	// AddMultiGrant defines the operation for adding multiple grants
	AddMultiGrant(ctx context.Context, in *MsgAddMultiGrant, opts ...grpc.CallOption) (*MsgAddMultiGrantResponse, error)
	// RemoveMultiGrant defines the operation for removing multiple grants
	RemoveMultiGrant(ctx context.Context, in *MsgRemoveMultiGrant, opts ...grpc.CallOption) (*MsgRemoveMultiGrantResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/zrchain.policy.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) NewPolicy(ctx context.Context, in *MsgNewPolicy, opts ...grpc.CallOption) (*MsgNewPolicyResponse, error) {
	out := new(MsgNewPolicyResponse)
	err := c.cc.Invoke(ctx, "/zrchain.policy.Msg/NewPolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RevokeAction(ctx context.Context, in *MsgRevokeAction, opts ...grpc.CallOption) (*MsgRevokeActionResponse, error) {
	out := new(MsgRevokeActionResponse)
	err := c.cc.Invoke(ctx, "/zrchain.policy.Msg/RevokeAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ApproveAction(ctx context.Context, in *MsgApproveAction, opts ...grpc.CallOption) (*MsgApproveActionResponse, error) {
	out := new(MsgApproveActionResponse)
	err := c.cc.Invoke(ctx, "/zrchain.policy.Msg/ApproveAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddSignMethod(ctx context.Context, in *MsgAddSignMethod, opts ...grpc.CallOption) (*MsgAddSignMethodResponse, error) {
	out := new(MsgAddSignMethodResponse)
	err := c.cc.Invoke(ctx, "/zrchain.policy.Msg/AddSignMethod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveSignMethod(ctx context.Context, in *MsgRemoveSignMethod, opts ...grpc.CallOption) (*MsgRemoveSignMethodResponse, error) {
	out := new(MsgRemoveSignMethodResponse)
	err := c.cc.Invoke(ctx, "/zrchain.policy.Msg/RemoveSignMethod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddMultiGrant(ctx context.Context, in *MsgAddMultiGrant, opts ...grpc.CallOption) (*MsgAddMultiGrantResponse, error) {
	out := new(MsgAddMultiGrantResponse)
	err := c.cc.Invoke(ctx, "/zrchain.policy.Msg/AddMultiGrant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveMultiGrant(ctx context.Context, in *MsgRemoveMultiGrant, opts ...grpc.CallOption) (*MsgRemoveMultiGrantResponse, error) {
	out := new(MsgRemoveMultiGrantResponse)
	err := c.cc.Invoke(ctx, "/zrchain.policy.Msg/RemoveMultiGrant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// UpdateParams defines the operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
	// NewPolicy defines the operation for creating a new policy.
	NewPolicy(context.Context, *MsgNewPolicy) (*MsgNewPolicyResponse, error)
	// RevokeAction defines the operation for revoking an action.
	RevokeAction(context.Context, *MsgRevokeAction) (*MsgRevokeActionResponse, error)
	// ApproveAction defines the operation for approving an action.
	ApproveAction(context.Context, *MsgApproveAction) (*MsgApproveActionResponse, error)
	// AddSignMethod defines the operation for adding a sign method.
	AddSignMethod(context.Context, *MsgAddSignMethod) (*MsgAddSignMethodResponse, error)
	// RemoveSignMethod defines the operation for removing a sign method.
	RemoveSignMethod(context.Context, *MsgRemoveSignMethod) (*MsgRemoveSignMethodResponse, error)
	// AddMultiGrant defines the operation for adding multiple grants
	AddMultiGrant(context.Context, *MsgAddMultiGrant) (*MsgAddMultiGrantResponse, error)
	// RemoveMultiGrant defines the operation for removing multiple grants
	RemoveMultiGrant(context.Context, *MsgRemoveMultiGrant) (*MsgRemoveMultiGrantResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}
func (*UnimplementedMsgServer) NewPolicy(ctx context.Context, req *MsgNewPolicy) (*MsgNewPolicyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewPolicy not implemented")
}
func (*UnimplementedMsgServer) RevokeAction(ctx context.Context, req *MsgRevokeAction) (*MsgRevokeActionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevokeAction not implemented")
}
func (*UnimplementedMsgServer) ApproveAction(ctx context.Context, req *MsgApproveAction) (*MsgApproveActionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApproveAction not implemented")
}
func (*UnimplementedMsgServer) AddSignMethod(ctx context.Context, req *MsgAddSignMethod) (*MsgAddSignMethodResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddSignMethod not implemented")
}
func (*UnimplementedMsgServer) RemoveSignMethod(ctx context.Context, req *MsgRemoveSignMethod) (*MsgRemoveSignMethodResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveSignMethod not implemented")
}
func (*UnimplementedMsgServer) AddMultiGrant(ctx context.Context, req *MsgAddMultiGrant) (*MsgAddMultiGrantResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddMultiGrant not implemented")
}
func (*UnimplementedMsgServer) RemoveMultiGrant(ctx context.Context, req *MsgRemoveMultiGrant) (*MsgRemoveMultiGrantResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveMultiGrant not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zrchain.policy.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_NewPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgNewPolicy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).NewPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zrchain.policy.Msg/NewPolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).NewPolicy(ctx, req.(*MsgNewPolicy))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RevokeAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRevokeAction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RevokeAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zrchain.policy.Msg/RevokeAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RevokeAction(ctx, req.(*MsgRevokeAction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ApproveAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgApproveAction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ApproveAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zrchain.policy.Msg/ApproveAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ApproveAction(ctx, req.(*MsgApproveAction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddSignMethod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddSignMethod)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddSignMethod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zrchain.policy.Msg/AddSignMethod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddSignMethod(ctx, req.(*MsgAddSignMethod))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveSignMethod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveSignMethod)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveSignMethod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zrchain.policy.Msg/RemoveSignMethod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveSignMethod(ctx, req.(*MsgRemoveSignMethod))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddMultiGrant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddMultiGrant)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddMultiGrant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zrchain.policy.Msg/AddMultiGrant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddMultiGrant(ctx, req.(*MsgAddMultiGrant))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveMultiGrant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveMultiGrant)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveMultiGrant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zrchain.policy.Msg/RemoveMultiGrant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveMultiGrant(ctx, req.(*MsgRemoveMultiGrant))
	}
	return interceptor(ctx, in, info, handler)
}

var Msg_serviceDesc = _Msg_serviceDesc
var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zrchain.policy.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
		{
			MethodName: "NewPolicy",
			Handler:    _Msg_NewPolicy_Handler,
		},
		{
			MethodName: "RevokeAction",
			Handler:    _Msg_RevokeAction_Handler,
		},
		{
			MethodName: "ApproveAction",
			Handler:    _Msg_ApproveAction_Handler,
		},
		{
			MethodName: "AddSignMethod",
			Handler:    _Msg_AddSignMethod_Handler,
		},
		{
			MethodName: "RemoveSignMethod",
			Handler:    _Msg_RemoveSignMethod_Handler,
		},
		{
			MethodName: "AddMultiGrant",
			Handler:    _Msg_AddMultiGrant_Handler,
		},
		{
			MethodName: "RemoveMultiGrant",
			Handler:    _Msg_RemoveMultiGrant_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "zrchain/policy/tx.proto",
}

func (m *MsgUpdateParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgNewPolicy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgNewPolicy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgNewPolicy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Btl != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Btl))
		i--
		dAtA[i] = 0x20
	}
	if m.Policy != nil {
		{
			size, err := m.Policy.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgNewPolicyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgNewPolicyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgNewPolicyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgRevokeAction) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRevokeAction) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRevokeAction) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ActionId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ActionId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRevokeActionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRevokeActionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRevokeActionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgApproveAction) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgApproveAction) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgApproveAction) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AdditionalSignatures) > 0 {
		for iNdEx := len(m.AdditionalSignatures) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AdditionalSignatures[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.ActionId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ActionId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ActionType) > 0 {
		i -= len(m.ActionType)
		copy(dAtA[i:], m.ActionType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ActionType)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgApproveActionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgApproveActionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgApproveActionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddSignMethod) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddSignMethod) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddSignMethod) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Config != nil {
		{
			size, err := m.Config.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddSignMethodResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddSignMethodResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddSignMethodResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveSignMethod) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveSignMethod) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveSignMethod) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveSignMethodResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveSignMethodResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveSignMethodResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddMultiGrant) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddMultiGrant) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddMultiGrant) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Msgs) > 0 {
		for iNdEx := len(m.Msgs) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Msgs[iNdEx])
			copy(dAtA[i:], m.Msgs[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Msgs[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Grantee) > 0 {
		i -= len(m.Grantee)
		copy(dAtA[i:], m.Grantee)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Grantee)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddMultiGrantResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddMultiGrantResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddMultiGrantResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveMultiGrant) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveMultiGrant) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveMultiGrant) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Msgs) > 0 {
		for iNdEx := len(m.Msgs) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Msgs[iNdEx])
			copy(dAtA[i:], m.Msgs[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Msgs[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Grantee) > 0 {
		i -= len(m.Grantee)
		copy(dAtA[i:], m.Grantee)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Grantee)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveMultiGrantResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveMultiGrantResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveMultiGrantResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgUpdateParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgNewPolicy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Policy != nil {
		l = m.Policy.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Btl != 0 {
		n += 1 + sovTx(uint64(m.Btl))
	}
	return n
}

func (m *MsgNewPolicyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgRevokeAction) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ActionId != 0 {
		n += 1 + sovTx(uint64(m.ActionId))
	}
	return n
}

func (m *MsgRevokeActionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgApproveAction) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ActionType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ActionId != 0 {
		n += 1 + sovTx(uint64(m.ActionId))
	}
	if len(m.AdditionalSignatures) > 0 {
		for _, e := range m.AdditionalSignatures {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgApproveActionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddSignMethod) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Config != nil {
		l = m.Config.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddSignMethodResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveSignMethod) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveSignMethodResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddMultiGrant) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Grantee)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Msgs) > 0 {
		for _, s := range m.Msgs {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgAddMultiGrantResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveMultiGrant) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Grantee)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Msgs) > 0 {
		for _, s := range m.Msgs {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgRemoveMultiGrantResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgUpdateParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgNewPolicy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgNewPolicy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgNewPolicy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Policy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Policy == nil {
				m.Policy = &types.Any{}
			}
			if err := m.Policy.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Btl", wireType)
			}
			m.Btl = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Btl |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgNewPolicyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgNewPolicyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgNewPolicyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRevokeAction) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRevokeAction: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRevokeAction: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActionId", wireType)
			}
			m.ActionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActionId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRevokeActionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRevokeActionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRevokeActionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgApproveAction) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgApproveAction: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgApproveAction: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActionType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ActionType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActionId", wireType)
			}
			m.ActionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActionId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdditionalSignatures", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdditionalSignatures = append(m.AdditionalSignatures, &types.Any{})
			if err := m.AdditionalSignatures[len(m.AdditionalSignatures)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgApproveActionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgApproveActionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgApproveActionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddSignMethod) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddSignMethod: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddSignMethod: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Config", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Config == nil {
				m.Config = &types.Any{}
			}
			if err := m.Config.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddSignMethodResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddSignMethodResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddSignMethodResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveSignMethod) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveSignMethod: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveSignMethod: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveSignMethodResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveSignMethodResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveSignMethodResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddMultiGrant) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddMultiGrant: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddMultiGrant: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Grantee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Grantee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msgs", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msgs = append(m.Msgs, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddMultiGrantResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddMultiGrantResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddMultiGrantResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveMultiGrant) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveMultiGrant: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveMultiGrant: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Grantee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Grantee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msgs", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msgs = append(m.Msgs, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveMultiGrantResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveMultiGrantResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveMultiGrantResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
