---
name: test

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - edited
      - synchronize

permissions:
  contents: read

jobs:
  unit-test-default:
    if: github.repository == 'Zenrock-Foundation/zrchain'
    name: Unit Tests (GitHub-hosted)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23.2'
          cache-dependency-path: "**/*.sum"
      - name: Build
        run: go build -v ./...
      - name: Test
        run: go test -race -v -skip "Test_ProxyFunctions" $(go list ./... | grep -v '/tests/integration')

  unit-test-self-hosted:
    if: github.repository == 'zenrocklabs/zrchainn'
    name: Unit Tests (zenrocklabs-hosted)
    runs-on: zrchain
    defaults:
      run:
        working-directory: ./
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23.2'
          cache-dependency-path: "**/*.sum"
      - name: Build
        run: go build -v ./...
      - name: Test
        run: go test -race -v -skip "Test_ProxyFunctions" $(go list ./... | grep -v '/tests/integration')

  integration-test:
    if: github.repository == 'zenrocklabs/zrchain'
    name: integration-test
    runs-on: zrchain
    defaults:
      run:
        working-directory: ./
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-west-1
      - uses: aws-actions/amazon-ecr-login@v2
        id: ecr
        with:
          registries: ${{ secrets.ECR_REGISTRY }}
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.3'
          cache-dependency-path: "**/*.sum"
      - name: Install ginkgo CLI
        run: go install github.com/onsi/ginkgo/v2/ginkgo@latest
      - name: Add Go bin to PATH
        run: echo "$HOME/go/bin" >> $GITHUB_PATH
      - name: ginkgo version
        run: ginkgo version
      - name: Start zenrock stack services
        run: |
          rm -rf zenrock-stack
          git clone git@github.com:zenrocklabs/zenrock-stack.git
          cd zenrock-stack
          docker compose up -d --force-recreate --build
      - name: Wait for 50 seconds
        run: sleep 50
      - name: Run integration tests
        run: ginkgo --focus="ZenBTC ETH mint:" -v tests/integration
      # - name: Stop Docker Compose stack
      #   if: always()
      #   run: |
      #     cd zenrock-stack
      #     docker compose -f docker-compose.yaml down --remove-orphans -v
