---
name: test

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - edited
      - synchronize

permissions:
  contents: read

jobs:
  unit-test-default:
    name: Unit Tests (GitHub-hosted)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    steps:
      - uses: actions/checkout@v4
      - name: Inspect Environment
        run: |
          echo "=== System Information ==="
          uname -a
          echo "=== Environment Variables ==="
          env | sort
          echo "=== Memory Info ==="
          free -h
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.3'
          cache-dependency-path: "**/*.sum"
      - name: Build
        run: go build -v ./...
      - name: Test
        run: go test -race -v -skip "Test_ProxyFunctions" $(go list ./... | grep -v 'tests/integration')

  integration-test:
    if: github.repository == 'zenrocklabs/zrchain'
    name: integration-test
    runs-on: zrchain
    defaults:
      run:
        working-directory: ./
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.3'
          cache-dependency-path: "**/*.sum"
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-west-1
      - uses: aws-actions/amazon-ecr-login@v2
        id: ecr
        with:
          registries: ${{ secrets.ECR_REGISTRY }}
      - name: Go mod tidy
        run: |
          go clean -cache -modcache -i -r
          go mod tidy
      # - name: Start Docker Compose stack
      #   run: docker compose up -d --force-recreate --build
      # - name: Run integration tests
      #   run: ./scripts/integration-test.sh
      - name: Run integration tests
        run: |
          wget -O $(go env GOPATH)/pkg/mod/github.com/!cosm!wasm/wasmvm/v2@v2.1.5/internal/api/libwasmvm.x86_64.a https://github.com/CosmWasm/wasmvm/releases/download/v2.1.5/libwasmvm_muslc.x86_64.a
          rm /go/pkg/mod/github.com/!cosm!wasm/wasmvm/v2@v2.1.5/internal/api/libwasmvm.x86_64.so
          CGO_ENABLED=1 go test -v --tags=integration ./tests/integration/...
      # - name: Stop Docker Compose stack
      #   if: always()
      #   run: docker compose -f docker-compose.yml down
