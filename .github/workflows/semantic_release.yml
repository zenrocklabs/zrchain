---
name: semantic_release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: zenrock-devops
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Generate a token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.RELEASE_APP_ID }}
          private-key: ${{ secrets.RELEASE_APP_PRIVATE_KEY }}
      - name: Install dependencies
        run: npm clean-install
      - name: Set tags
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          GIT_AUTHOR_EMAIL: 'semanticrelease@zenrocklabs.io'
          GIT_COMMITTER_EMAIL: 'semanticrelease@zenrocklabs.io'
          GIT_AUTHOR_NAME: '@semanticrelease'
          GIT_COMMITTER_NAME: '@semanticrelease'
        run: |
          VERSION_SPACES=$(npx semantic-release --dryRun | grep -oP 'Published release \K.*? ')
          VERSION="${VERSION_SPACES// /}"
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "BUILD_DATE=$(git show -s --format=%ci ${{ env.COMMIT_SHA }})" >> $GITHUB_ENV
          echo "TAG=${VERSION}" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build binary
        id: image_zenrockd
        run: |
          docker build -f ./Dockerfile \
          --build-arg SERVICE=zenrockd \
          --build-arg GIT_SHA=${{ env.COMMIT_SHA }} \
          --build-arg BUILD_DATE="${{ env.BUILD_DATE }}" \
          --build-arg VERSION=${{ env.TAG }} \
          -t zenrockd:${{ env.TAG }} .

          docker run --entrypoint=/bin/cp --rm \
            -v $(pwd):/workspace \
            -v ~/.aws:/root/.aws \
            zenrockd:${TAG} \
            "/zenrockd" "/workspace/zenrockd"
      - name: Semantic release
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          GIT_AUTHOR_EMAIL: 'semanticrelease@zenrocklabs.io'
          GIT_COMMITTER_EMAIL: 'semanticrelease@zenrocklabs.io'
          GIT_AUTHOR_NAME: '@semanticrelease'
          GIT_COMMITTER_NAME: '@semanticrelease'
        run: npx semantic-release
