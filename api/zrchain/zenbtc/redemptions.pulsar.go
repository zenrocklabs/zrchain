// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package zenbtc

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_Redemption        protoreflect.MessageDescriptor
	fd_Redemption_data   protoreflect.FieldDescriptor
	fd_Redemption_status protoreflect.FieldDescriptor
)

func init() {
	file_zrchain_zenbtc_redemptions_proto_init()
	md_Redemption = File_zrchain_zenbtc_redemptions_proto.Messages().ByName("Redemption")
	fd_Redemption_data = md_Redemption.Fields().ByName("data")
	fd_Redemption_status = md_Redemption.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_Redemption)(nil)

type fastReflection_Redemption Redemption

func (x *Redemption) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Redemption)(x)
}

func (x *Redemption) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_zenbtc_redemptions_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Redemption_messageType fastReflection_Redemption_messageType
var _ protoreflect.MessageType = fastReflection_Redemption_messageType{}

type fastReflection_Redemption_messageType struct{}

func (x fastReflection_Redemption_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Redemption)(nil)
}
func (x fastReflection_Redemption_messageType) New() protoreflect.Message {
	return new(fastReflection_Redemption)
}
func (x fastReflection_Redemption_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Redemption
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Redemption) Descriptor() protoreflect.MessageDescriptor {
	return md_Redemption
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Redemption) Type() protoreflect.MessageType {
	return _fastReflection_Redemption_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Redemption) New() protoreflect.Message {
	return new(fastReflection_Redemption)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Redemption) Interface() protoreflect.ProtoMessage {
	return (*Redemption)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Redemption) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Data != nil {
		value := protoreflect.ValueOfMessage(x.Data.ProtoReflect())
		if !f(fd_Redemption_data, value) {
			return
		}
	}
	if x.Status != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Status))
		if !f(fd_Redemption_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Redemption) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "zrchain.zenbtc.Redemption.data":
		return x.Data != nil
	case "zrchain.zenbtc.Redemption.status":
		return x.Status != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.zenbtc.Redemption"))
		}
		panic(fmt.Errorf("message zrchain.zenbtc.Redemption does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Redemption) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "zrchain.zenbtc.Redemption.data":
		x.Data = nil
	case "zrchain.zenbtc.Redemption.status":
		x.Status = 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.zenbtc.Redemption"))
		}
		panic(fmt.Errorf("message zrchain.zenbtc.Redemption does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Redemption) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "zrchain.zenbtc.Redemption.data":
		value := x.Data
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "zrchain.zenbtc.Redemption.status":
		value := x.Status
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.zenbtc.Redemption"))
		}
		panic(fmt.Errorf("message zrchain.zenbtc.Redemption does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Redemption) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "zrchain.zenbtc.Redemption.data":
		x.Data = value.Message().Interface().(*RedemptionData)
	case "zrchain.zenbtc.Redemption.status":
		x.Status = (RedemptionStatus)(value.Enum())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.zenbtc.Redemption"))
		}
		panic(fmt.Errorf("message zrchain.zenbtc.Redemption does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Redemption) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.zenbtc.Redemption.data":
		if x.Data == nil {
			x.Data = new(RedemptionData)
		}
		return protoreflect.ValueOfMessage(x.Data.ProtoReflect())
	case "zrchain.zenbtc.Redemption.status":
		panic(fmt.Errorf("field status of message zrchain.zenbtc.Redemption is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.zenbtc.Redemption"))
		}
		panic(fmt.Errorf("message zrchain.zenbtc.Redemption does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Redemption) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.zenbtc.Redemption.data":
		m := new(RedemptionData)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "zrchain.zenbtc.Redemption.status":
		return protoreflect.ValueOfEnum(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.zenbtc.Redemption"))
		}
		panic(fmt.Errorf("message zrchain.zenbtc.Redemption does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Redemption) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.zenbtc.Redemption", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Redemption) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Redemption) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Redemption) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Redemption) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Redemption)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Data != nil {
			l = options.Size(x.Data)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Status != 0 {
			n += 1 + runtime.Sov(uint64(x.Status))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Redemption)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Status))
			i--
			dAtA[i] = 0x10
		}
		if x.Data != nil {
			encoded, err := options.Marshal(x.Data)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Redemption)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Redemption: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Redemption: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Data == nil {
					x.Data = &RedemptionData{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Data); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				x.Status = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Status |= RedemptionStatus(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_RedemptionData                     protoreflect.MessageDescriptor
	fd_RedemptionData_id                  protoreflect.FieldDescriptor
	fd_RedemptionData_destination_address protoreflect.FieldDescriptor
	fd_RedemptionData_amount              protoreflect.FieldDescriptor
	fd_RedemptionData_sign_req_id         protoreflect.FieldDescriptor
)

func init() {
	file_zrchain_zenbtc_redemptions_proto_init()
	md_RedemptionData = File_zrchain_zenbtc_redemptions_proto.Messages().ByName("RedemptionData")
	fd_RedemptionData_id = md_RedemptionData.Fields().ByName("id")
	fd_RedemptionData_destination_address = md_RedemptionData.Fields().ByName("destination_address")
	fd_RedemptionData_amount = md_RedemptionData.Fields().ByName("amount")
	fd_RedemptionData_sign_req_id = md_RedemptionData.Fields().ByName("sign_req_id")
}

var _ protoreflect.Message = (*fastReflection_RedemptionData)(nil)

type fastReflection_RedemptionData RedemptionData

func (x *RedemptionData) ProtoReflect() protoreflect.Message {
	return (*fastReflection_RedemptionData)(x)
}

func (x *RedemptionData) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_zenbtc_redemptions_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_RedemptionData_messageType fastReflection_RedemptionData_messageType
var _ protoreflect.MessageType = fastReflection_RedemptionData_messageType{}

type fastReflection_RedemptionData_messageType struct{}

func (x fastReflection_RedemptionData_messageType) Zero() protoreflect.Message {
	return (*fastReflection_RedemptionData)(nil)
}
func (x fastReflection_RedemptionData_messageType) New() protoreflect.Message {
	return new(fastReflection_RedemptionData)
}
func (x fastReflection_RedemptionData_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_RedemptionData
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_RedemptionData) Descriptor() protoreflect.MessageDescriptor {
	return md_RedemptionData
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_RedemptionData) Type() protoreflect.MessageType {
	return _fastReflection_RedemptionData_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_RedemptionData) New() protoreflect.Message {
	return new(fastReflection_RedemptionData)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_RedemptionData) Interface() protoreflect.ProtoMessage {
	return (*RedemptionData)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_RedemptionData) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_RedemptionData_id, value) {
			return
		}
	}
	if len(x.DestinationAddress) != 0 {
		value := protoreflect.ValueOfBytes(x.DestinationAddress)
		if !f(fd_RedemptionData_destination_address, value) {
			return
		}
	}
	if x.Amount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Amount)
		if !f(fd_RedemptionData_amount, value) {
			return
		}
	}
	if x.SignReqId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.SignReqId)
		if !f(fd_RedemptionData_sign_req_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_RedemptionData) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "zrchain.zenbtc.RedemptionData.id":
		return x.Id != uint64(0)
	case "zrchain.zenbtc.RedemptionData.destination_address":
		return len(x.DestinationAddress) != 0
	case "zrchain.zenbtc.RedemptionData.amount":
		return x.Amount != uint64(0)
	case "zrchain.zenbtc.RedemptionData.sign_req_id":
		return x.SignReqId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.zenbtc.RedemptionData"))
		}
		panic(fmt.Errorf("message zrchain.zenbtc.RedemptionData does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RedemptionData) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "zrchain.zenbtc.RedemptionData.id":
		x.Id = uint64(0)
	case "zrchain.zenbtc.RedemptionData.destination_address":
		x.DestinationAddress = nil
	case "zrchain.zenbtc.RedemptionData.amount":
		x.Amount = uint64(0)
	case "zrchain.zenbtc.RedemptionData.sign_req_id":
		x.SignReqId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.zenbtc.RedemptionData"))
		}
		panic(fmt.Errorf("message zrchain.zenbtc.RedemptionData does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_RedemptionData) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "zrchain.zenbtc.RedemptionData.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "zrchain.zenbtc.RedemptionData.destination_address":
		value := x.DestinationAddress
		return protoreflect.ValueOfBytes(value)
	case "zrchain.zenbtc.RedemptionData.amount":
		value := x.Amount
		return protoreflect.ValueOfUint64(value)
	case "zrchain.zenbtc.RedemptionData.sign_req_id":
		value := x.SignReqId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.zenbtc.RedemptionData"))
		}
		panic(fmt.Errorf("message zrchain.zenbtc.RedemptionData does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RedemptionData) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "zrchain.zenbtc.RedemptionData.id":
		x.Id = value.Uint()
	case "zrchain.zenbtc.RedemptionData.destination_address":
		x.DestinationAddress = value.Bytes()
	case "zrchain.zenbtc.RedemptionData.amount":
		x.Amount = value.Uint()
	case "zrchain.zenbtc.RedemptionData.sign_req_id":
		x.SignReqId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.zenbtc.RedemptionData"))
		}
		panic(fmt.Errorf("message zrchain.zenbtc.RedemptionData does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RedemptionData) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.zenbtc.RedemptionData.id":
		panic(fmt.Errorf("field id of message zrchain.zenbtc.RedemptionData is not mutable"))
	case "zrchain.zenbtc.RedemptionData.destination_address":
		panic(fmt.Errorf("field destination_address of message zrchain.zenbtc.RedemptionData is not mutable"))
	case "zrchain.zenbtc.RedemptionData.amount":
		panic(fmt.Errorf("field amount of message zrchain.zenbtc.RedemptionData is not mutable"))
	case "zrchain.zenbtc.RedemptionData.sign_req_id":
		panic(fmt.Errorf("field sign_req_id of message zrchain.zenbtc.RedemptionData is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.zenbtc.RedemptionData"))
		}
		panic(fmt.Errorf("message zrchain.zenbtc.RedemptionData does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_RedemptionData) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.zenbtc.RedemptionData.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "zrchain.zenbtc.RedemptionData.destination_address":
		return protoreflect.ValueOfBytes(nil)
	case "zrchain.zenbtc.RedemptionData.amount":
		return protoreflect.ValueOfUint64(uint64(0))
	case "zrchain.zenbtc.RedemptionData.sign_req_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.zenbtc.RedemptionData"))
		}
		panic(fmt.Errorf("message zrchain.zenbtc.RedemptionData does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_RedemptionData) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.zenbtc.RedemptionData", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_RedemptionData) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RedemptionData) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_RedemptionData) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_RedemptionData) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*RedemptionData)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		l = len(x.DestinationAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Amount != 0 {
			n += 1 + runtime.Sov(uint64(x.Amount))
		}
		if x.SignReqId != 0 {
			n += 1 + runtime.Sov(uint64(x.SignReqId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*RedemptionData)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.SignReqId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SignReqId))
			i--
			dAtA[i] = 0x20
		}
		if x.Amount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Amount))
			i--
			dAtA[i] = 0x18
		}
		if len(x.DestinationAddress) > 0 {
			i -= len(x.DestinationAddress)
			copy(dAtA[i:], x.DestinationAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DestinationAddress)))
			i--
			dAtA[i] = 0x12
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*RedemptionData)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RedemptionData: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RedemptionData: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DestinationAddress", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DestinationAddress = append(x.DestinationAddress[:0], dAtA[iNdEx:postIndex]...)
				if x.DestinationAddress == nil {
					x.DestinationAddress = []byte{}
				}
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				x.Amount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Amount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SignReqId", wireType)
				}
				x.SignReqId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SignReqId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_BurnEvent                 protoreflect.MessageDescriptor
	fd_BurnEvent_id              protoreflect.FieldDescriptor
	fd_BurnEvent_txID            protoreflect.FieldDescriptor
	fd_BurnEvent_logIndex        protoreflect.FieldDescriptor
	fd_BurnEvent_chainID         protoreflect.FieldDescriptor
	fd_BurnEvent_destinationAddr protoreflect.FieldDescriptor
	fd_BurnEvent_amount          protoreflect.FieldDescriptor
	fd_BurnEvent_status          protoreflect.FieldDescriptor
	fd_BurnEvent_maturity_height protoreflect.FieldDescriptor
)

func init() {
	file_zrchain_zenbtc_redemptions_proto_init()
	md_BurnEvent = File_zrchain_zenbtc_redemptions_proto.Messages().ByName("BurnEvent")
	fd_BurnEvent_id = md_BurnEvent.Fields().ByName("id")
	fd_BurnEvent_txID = md_BurnEvent.Fields().ByName("txID")
	fd_BurnEvent_logIndex = md_BurnEvent.Fields().ByName("logIndex")
	fd_BurnEvent_chainID = md_BurnEvent.Fields().ByName("chainID")
	fd_BurnEvent_destinationAddr = md_BurnEvent.Fields().ByName("destinationAddr")
	fd_BurnEvent_amount = md_BurnEvent.Fields().ByName("amount")
	fd_BurnEvent_status = md_BurnEvent.Fields().ByName("status")
	fd_BurnEvent_maturity_height = md_BurnEvent.Fields().ByName("maturity_height")
}

var _ protoreflect.Message = (*fastReflection_BurnEvent)(nil)

type fastReflection_BurnEvent BurnEvent

func (x *BurnEvent) ProtoReflect() protoreflect.Message {
	return (*fastReflection_BurnEvent)(x)
}

func (x *BurnEvent) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_zenbtc_redemptions_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_BurnEvent_messageType fastReflection_BurnEvent_messageType
var _ protoreflect.MessageType = fastReflection_BurnEvent_messageType{}

type fastReflection_BurnEvent_messageType struct{}

func (x fastReflection_BurnEvent_messageType) Zero() protoreflect.Message {
	return (*fastReflection_BurnEvent)(nil)
}
func (x fastReflection_BurnEvent_messageType) New() protoreflect.Message {
	return new(fastReflection_BurnEvent)
}
func (x fastReflection_BurnEvent_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_BurnEvent
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_BurnEvent) Descriptor() protoreflect.MessageDescriptor {
	return md_BurnEvent
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_BurnEvent) Type() protoreflect.MessageType {
	return _fastReflection_BurnEvent_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_BurnEvent) New() protoreflect.Message {
	return new(fastReflection_BurnEvent)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_BurnEvent) Interface() protoreflect.ProtoMessage {
	return (*BurnEvent)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_BurnEvent) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_BurnEvent_id, value) {
			return
		}
	}
	if x.TxID != "" {
		value := protoreflect.ValueOfString(x.TxID)
		if !f(fd_BurnEvent_txID, value) {
			return
		}
	}
	if x.LogIndex != uint64(0) {
		value := protoreflect.ValueOfUint64(x.LogIndex)
		if !f(fd_BurnEvent_logIndex, value) {
			return
		}
	}
	if x.ChainID != "" {
		value := protoreflect.ValueOfString(x.ChainID)
		if !f(fd_BurnEvent_chainID, value) {
			return
		}
	}
	if len(x.DestinationAddr) != 0 {
		value := protoreflect.ValueOfBytes(x.DestinationAddr)
		if !f(fd_BurnEvent_destinationAddr, value) {
			return
		}
	}
	if x.Amount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Amount)
		if !f(fd_BurnEvent_amount, value) {
			return
		}
	}
	if x.Status != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Status))
		if !f(fd_BurnEvent_status, value) {
			return
		}
	}
	if x.MaturityHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.MaturityHeight)
		if !f(fd_BurnEvent_maturity_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_BurnEvent) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "zrchain.zenbtc.BurnEvent.id":
		return x.Id != uint64(0)
	case "zrchain.zenbtc.BurnEvent.txID":
		return x.TxID != ""
	case "zrchain.zenbtc.BurnEvent.logIndex":
		return x.LogIndex != uint64(0)
	case "zrchain.zenbtc.BurnEvent.chainID":
		return x.ChainID != ""
	case "zrchain.zenbtc.BurnEvent.destinationAddr":
		return len(x.DestinationAddr) != 0
	case "zrchain.zenbtc.BurnEvent.amount":
		return x.Amount != uint64(0)
	case "zrchain.zenbtc.BurnEvent.status":
		return x.Status != 0
	case "zrchain.zenbtc.BurnEvent.maturity_height":
		return x.MaturityHeight != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.zenbtc.BurnEvent"))
		}
		panic(fmt.Errorf("message zrchain.zenbtc.BurnEvent does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BurnEvent) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "zrchain.zenbtc.BurnEvent.id":
		x.Id = uint64(0)
	case "zrchain.zenbtc.BurnEvent.txID":
		x.TxID = ""
	case "zrchain.zenbtc.BurnEvent.logIndex":
		x.LogIndex = uint64(0)
	case "zrchain.zenbtc.BurnEvent.chainID":
		x.ChainID = ""
	case "zrchain.zenbtc.BurnEvent.destinationAddr":
		x.DestinationAddr = nil
	case "zrchain.zenbtc.BurnEvent.amount":
		x.Amount = uint64(0)
	case "zrchain.zenbtc.BurnEvent.status":
		x.Status = 0
	case "zrchain.zenbtc.BurnEvent.maturity_height":
		x.MaturityHeight = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.zenbtc.BurnEvent"))
		}
		panic(fmt.Errorf("message zrchain.zenbtc.BurnEvent does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_BurnEvent) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "zrchain.zenbtc.BurnEvent.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "zrchain.zenbtc.BurnEvent.txID":
		value := x.TxID
		return protoreflect.ValueOfString(value)
	case "zrchain.zenbtc.BurnEvent.logIndex":
		value := x.LogIndex
		return protoreflect.ValueOfUint64(value)
	case "zrchain.zenbtc.BurnEvent.chainID":
		value := x.ChainID
		return protoreflect.ValueOfString(value)
	case "zrchain.zenbtc.BurnEvent.destinationAddr":
		value := x.DestinationAddr
		return protoreflect.ValueOfBytes(value)
	case "zrchain.zenbtc.BurnEvent.amount":
		value := x.Amount
		return protoreflect.ValueOfUint64(value)
	case "zrchain.zenbtc.BurnEvent.status":
		value := x.Status
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "zrchain.zenbtc.BurnEvent.maturity_height":
		value := x.MaturityHeight
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.zenbtc.BurnEvent"))
		}
		panic(fmt.Errorf("message zrchain.zenbtc.BurnEvent does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BurnEvent) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "zrchain.zenbtc.BurnEvent.id":
		x.Id = value.Uint()
	case "zrchain.zenbtc.BurnEvent.txID":
		x.TxID = value.Interface().(string)
	case "zrchain.zenbtc.BurnEvent.logIndex":
		x.LogIndex = value.Uint()
	case "zrchain.zenbtc.BurnEvent.chainID":
		x.ChainID = value.Interface().(string)
	case "zrchain.zenbtc.BurnEvent.destinationAddr":
		x.DestinationAddr = value.Bytes()
	case "zrchain.zenbtc.BurnEvent.amount":
		x.Amount = value.Uint()
	case "zrchain.zenbtc.BurnEvent.status":
		x.Status = (BurnStatus)(value.Enum())
	case "zrchain.zenbtc.BurnEvent.maturity_height":
		x.MaturityHeight = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.zenbtc.BurnEvent"))
		}
		panic(fmt.Errorf("message zrchain.zenbtc.BurnEvent does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BurnEvent) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.zenbtc.BurnEvent.id":
		panic(fmt.Errorf("field id of message zrchain.zenbtc.BurnEvent is not mutable"))
	case "zrchain.zenbtc.BurnEvent.txID":
		panic(fmt.Errorf("field txID of message zrchain.zenbtc.BurnEvent is not mutable"))
	case "zrchain.zenbtc.BurnEvent.logIndex":
		panic(fmt.Errorf("field logIndex of message zrchain.zenbtc.BurnEvent is not mutable"))
	case "zrchain.zenbtc.BurnEvent.chainID":
		panic(fmt.Errorf("field chainID of message zrchain.zenbtc.BurnEvent is not mutable"))
	case "zrchain.zenbtc.BurnEvent.destinationAddr":
		panic(fmt.Errorf("field destinationAddr of message zrchain.zenbtc.BurnEvent is not mutable"))
	case "zrchain.zenbtc.BurnEvent.amount":
		panic(fmt.Errorf("field amount of message zrchain.zenbtc.BurnEvent is not mutable"))
	case "zrchain.zenbtc.BurnEvent.status":
		panic(fmt.Errorf("field status of message zrchain.zenbtc.BurnEvent is not mutable"))
	case "zrchain.zenbtc.BurnEvent.maturity_height":
		panic(fmt.Errorf("field maturity_height of message zrchain.zenbtc.BurnEvent is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.zenbtc.BurnEvent"))
		}
		panic(fmt.Errorf("message zrchain.zenbtc.BurnEvent does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_BurnEvent) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.zenbtc.BurnEvent.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "zrchain.zenbtc.BurnEvent.txID":
		return protoreflect.ValueOfString("")
	case "zrchain.zenbtc.BurnEvent.logIndex":
		return protoreflect.ValueOfUint64(uint64(0))
	case "zrchain.zenbtc.BurnEvent.chainID":
		return protoreflect.ValueOfString("")
	case "zrchain.zenbtc.BurnEvent.destinationAddr":
		return protoreflect.ValueOfBytes(nil)
	case "zrchain.zenbtc.BurnEvent.amount":
		return protoreflect.ValueOfUint64(uint64(0))
	case "zrchain.zenbtc.BurnEvent.status":
		return protoreflect.ValueOfEnum(0)
	case "zrchain.zenbtc.BurnEvent.maturity_height":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.zenbtc.BurnEvent"))
		}
		panic(fmt.Errorf("message zrchain.zenbtc.BurnEvent does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_BurnEvent) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.zenbtc.BurnEvent", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_BurnEvent) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BurnEvent) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_BurnEvent) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_BurnEvent) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*BurnEvent)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		l = len(x.TxID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.LogIndex != 0 {
			n += 1 + runtime.Sov(uint64(x.LogIndex))
		}
		l = len(x.ChainID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.DestinationAddr)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Amount != 0 {
			n += 1 + runtime.Sov(uint64(x.Amount))
		}
		if x.Status != 0 {
			n += 1 + runtime.Sov(uint64(x.Status))
		}
		if x.MaturityHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.MaturityHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*BurnEvent)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.MaturityHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.MaturityHeight))
			i--
			dAtA[i] = 0x40
		}
		if x.Status != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Status))
			i--
			dAtA[i] = 0x38
		}
		if x.Amount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Amount))
			i--
			dAtA[i] = 0x30
		}
		if len(x.DestinationAddr) > 0 {
			i -= len(x.DestinationAddr)
			copy(dAtA[i:], x.DestinationAddr)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DestinationAddr)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.ChainID) > 0 {
			i -= len(x.ChainID)
			copy(dAtA[i:], x.ChainID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainID)))
			i--
			dAtA[i] = 0x22
		}
		if x.LogIndex != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.LogIndex))
			i--
			dAtA[i] = 0x18
		}
		if len(x.TxID) > 0 {
			i -= len(x.TxID)
			copy(dAtA[i:], x.TxID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TxID)))
			i--
			dAtA[i] = 0x12
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*BurnEvent)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BurnEvent: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BurnEvent: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TxID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TxID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LogIndex", wireType)
				}
				x.LogIndex = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.LogIndex |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DestinationAddr", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DestinationAddr = append(x.DestinationAddr[:0], dAtA[iNdEx:postIndex]...)
				if x.DestinationAddr == nil {
					x.DestinationAddr = []byte{}
				}
				iNdEx = postIndex
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				x.Amount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Amount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				x.Status = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Status |= BurnStatus(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MaturityHeight", wireType)
				}
				x.MaturityHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.MaturityHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: zrchain/zenbtc/redemptions.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RedemptionStatus int32

const (
	RedemptionStatus_UNSPECIFIED RedemptionStatus = 0
	RedemptionStatus_INITIATED   RedemptionStatus = 1 // after BurnStatus.UNSTAKING phase is completed (7 days)
	RedemptionStatus_UNSTAKED    RedemptionStatus = 2 // after calling unstakeComplete
	// Deprecated: Do not use.
	RedemptionStatus_BURNED        RedemptionStatus = 3
	RedemptionStatus_COMPLETED     RedemptionStatus = 4
	RedemptionStatus_AWAITING_SIGN RedemptionStatus = 5
)

// Enum value maps for RedemptionStatus.
var (
	RedemptionStatus_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "INITIATED",
		2: "UNSTAKED",
		3: "BURNED",
		4: "COMPLETED",
		5: "AWAITING_SIGN",
	}
	RedemptionStatus_value = map[string]int32{
		"UNSPECIFIED":   0,
		"INITIATED":     1,
		"UNSTAKED":      2,
		"BURNED":        3,
		"COMPLETED":     4,
		"AWAITING_SIGN": 5,
	}
)

func (x RedemptionStatus) Enum() *RedemptionStatus {
	p := new(RedemptionStatus)
	*p = x
	return p
}

func (x RedemptionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RedemptionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_zrchain_zenbtc_redemptions_proto_enumTypes[0].Descriptor()
}

func (RedemptionStatus) Type() protoreflect.EnumType {
	return &file_zrchain_zenbtc_redemptions_proto_enumTypes[0]
}

func (x RedemptionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RedemptionStatus.Descriptor instead.
func (RedemptionStatus) EnumDescriptor() ([]byte, []int) {
	return file_zrchain_zenbtc_redemptions_proto_rawDescGZIP(), []int{0}
}

type BurnStatus int32

const (
	BurnStatus_BURN_STATUS_UNSPECIFIED BurnStatus = 0
	BurnStatus_BURN_STATUS_UNSTAKING   BurnStatus = 1
	BurnStatus_BURN_STATUS_UNSTAKED    BurnStatus = 2
)

// Enum value maps for BurnStatus.
var (
	BurnStatus_name = map[int32]string{
		0: "BURN_STATUS_UNSPECIFIED",
		1: "BURN_STATUS_UNSTAKING",
		2: "BURN_STATUS_UNSTAKED",
	}
	BurnStatus_value = map[string]int32{
		"BURN_STATUS_UNSPECIFIED": 0,
		"BURN_STATUS_UNSTAKING":   1,
		"BURN_STATUS_UNSTAKED":    2,
	}
)

func (x BurnStatus) Enum() *BurnStatus {
	p := new(BurnStatus)
	*p = x
	return p
}

func (x BurnStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BurnStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_zrchain_zenbtc_redemptions_proto_enumTypes[1].Descriptor()
}

func (BurnStatus) Type() protoreflect.EnumType {
	return &file_zrchain_zenbtc_redemptions_proto_enumTypes[1]
}

func (x BurnStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BurnStatus.Descriptor instead.
func (BurnStatus) EnumDescriptor() ([]byte, []int) {
	return file_zrchain_zenbtc_redemptions_proto_rawDescGZIP(), []int{1}
}

// Redemption contains the data for a redemption transaction.
type Redemption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *RedemptionData  `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Status RedemptionStatus `protobuf:"varint,2,opt,name=status,proto3,enum=zrchain.zenbtc.RedemptionStatus" json:"status,omitempty"`
}

func (x *Redemption) Reset() {
	*x = Redemption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_zenbtc_redemptions_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Redemption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Redemption) ProtoMessage() {}

// Deprecated: Use Redemption.ProtoReflect.Descriptor instead.
func (*Redemption) Descriptor() ([]byte, []int) {
	return file_zrchain_zenbtc_redemptions_proto_rawDescGZIP(), []int{0}
}

func (x *Redemption) GetData() *RedemptionData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Redemption) GetStatus() RedemptionStatus {
	if x != nil {
		return x.Status
	}
	return RedemptionStatus_UNSPECIFIED
}

type RedemptionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DestinationAddress []byte `protobuf:"bytes,2,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
	Amount             uint64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	SignReqId          uint64 `protobuf:"varint,4,opt,name=sign_req_id,json=signReqId,proto3" json:"sign_req_id,omitempty"`
}

func (x *RedemptionData) Reset() {
	*x = RedemptionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_zenbtc_redemptions_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedemptionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedemptionData) ProtoMessage() {}

// Deprecated: Use RedemptionData.ProtoReflect.Descriptor instead.
func (*RedemptionData) Descriptor() ([]byte, []int) {
	return file_zrchain_zenbtc_redemptions_proto_rawDescGZIP(), []int{1}
}

func (x *RedemptionData) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RedemptionData) GetDestinationAddress() []byte {
	if x != nil {
		return x.DestinationAddress
	}
	return nil
}

func (x *RedemptionData) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *RedemptionData) GetSignReqId() uint64 {
	if x != nil {
		return x.SignReqId
	}
	return 0
}

type BurnEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TxID            string     `protobuf:"bytes,2,opt,name=txID,proto3" json:"txID,omitempty"`
	LogIndex        uint64     `protobuf:"varint,3,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	ChainID         string     `protobuf:"bytes,4,opt,name=chainID,proto3" json:"chainID,omitempty"`
	DestinationAddr []byte     `protobuf:"bytes,5,opt,name=destinationAddr,proto3" json:"destinationAddr,omitempty"`
	Amount          uint64     `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Status          BurnStatus `protobuf:"varint,7,opt,name=status,proto3,enum=zrchain.zenbtc.BurnStatus" json:"status,omitempty"`
	MaturityHeight  int64      `protobuf:"varint,8,opt,name=maturity_height,json=maturityHeight,proto3" json:"maturity_height,omitempty"`
}

func (x *BurnEvent) Reset() {
	*x = BurnEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_zenbtc_redemptions_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BurnEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BurnEvent) ProtoMessage() {}

// Deprecated: Use BurnEvent.ProtoReflect.Descriptor instead.
func (*BurnEvent) Descriptor() ([]byte, []int) {
	return file_zrchain_zenbtc_redemptions_proto_rawDescGZIP(), []int{2}
}

func (x *BurnEvent) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BurnEvent) GetTxID() string {
	if x != nil {
		return x.TxID
	}
	return ""
}

func (x *BurnEvent) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *BurnEvent) GetChainID() string {
	if x != nil {
		return x.ChainID
	}
	return ""
}

func (x *BurnEvent) GetDestinationAddr() []byte {
	if x != nil {
		return x.DestinationAddr
	}
	return nil
}

func (x *BurnEvent) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *BurnEvent) GetStatus() BurnStatus {
	if x != nil {
		return x.Status
	}
	return BurnStatus_BURN_STATUS_UNSPECIFIED
}

func (x *BurnEvent) GetMaturityHeight() int64 {
	if x != nil {
		return x.MaturityHeight
	}
	return 0
}

var File_zrchain_zenbtc_redemptions_proto protoreflect.FileDescriptor

var file_zrchain_zenbtc_redemptions_proto_rawDesc = []byte{
	0x0a, 0x20, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x7a, 0x65, 0x6e, 0x62, 0x74, 0x63,
	0x2f, 0x72, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0e, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x7a, 0x65, 0x6e, 0x62,
	0x74, 0x63, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x80, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x64,
	0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e,
	0x7a, 0x65, 0x6e, 0x62, 0x74, 0x63, 0x2e, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x20, 0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x7a, 0x65, 0x6e, 0x62,
	0x74, 0x63, 0x2e, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x0e,
	0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2f,
	0x0a, 0x13, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x64, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x5f,
	0x72, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x52, 0x65, 0x71, 0x49, 0x64, 0x22, 0x84, 0x02, 0x0a, 0x09, 0x42, 0x75, 0x72, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x67,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x12,
	0x28, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64,
	0x64, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x7a, 0x65, 0x6e, 0x62,
	0x74, 0x63, 0x2e, 0x42, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x6d, 0x61, 0x74, 0x75, 0x72, 0x69, 0x74, 0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2a, 0x72,
	0x0a, 0x10, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x54, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x4e, 0x53, 0x54, 0x41, 0x4b, 0x45, 0x44, 0x10, 0x02,
	0x12, 0x0e, 0x0a, 0x06, 0x42, 0x55, 0x52, 0x4e, 0x45, 0x44, 0x10, 0x03, 0x1a, 0x02, 0x08, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12,
	0x11, 0x0a, 0x0d, 0x41, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49, 0x47, 0x4e,
	0x10, 0x05, 0x2a, 0x5e, 0x0a, 0x0a, 0x42, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1b, 0x0a, 0x17, 0x42, 0x55, 0x52, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a,
	0x15, 0x42, 0x55, 0x52, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53,
	0x54, 0x41, 0x4b, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x55, 0x52, 0x4e,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x54, 0x41, 0x4b, 0x45, 0x44,
	0x10, 0x02, 0x42, 0xbc, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2e, 0x7a, 0x65, 0x6e, 0x62, 0x74, 0x63, 0x42, 0x10, 0x52, 0x65, 0x64, 0x65, 0x6d,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3b, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x5a, 0x65, 0x6e, 0x72, 0x6f, 0x63,
	0x6b, 0x2d, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7a, 0x72, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2f, 0x76, 0x36, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x7a, 0x72, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x2f, 0x7a, 0x65, 0x6e, 0x62, 0x74, 0x63, 0xa2, 0x02, 0x03, 0x5a, 0x5a, 0x58,
	0xaa, 0x02, 0x0e, 0x5a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x5a, 0x65, 0x6e, 0x62, 0x74,
	0x63, 0xca, 0x02, 0x0e, 0x5a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5c, 0x5a, 0x65, 0x6e, 0x62,
	0x74, 0x63, 0xe2, 0x02, 0x1a, 0x5a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5c, 0x5a, 0x65, 0x6e,
	0x62, 0x74, 0x63, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x0f, 0x5a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x3a, 0x3a, 0x5a, 0x65, 0x6e, 0x62, 0x74,
	0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_zrchain_zenbtc_redemptions_proto_rawDescOnce sync.Once
	file_zrchain_zenbtc_redemptions_proto_rawDescData = file_zrchain_zenbtc_redemptions_proto_rawDesc
)

func file_zrchain_zenbtc_redemptions_proto_rawDescGZIP() []byte {
	file_zrchain_zenbtc_redemptions_proto_rawDescOnce.Do(func() {
		file_zrchain_zenbtc_redemptions_proto_rawDescData = protoimpl.X.CompressGZIP(file_zrchain_zenbtc_redemptions_proto_rawDescData)
	})
	return file_zrchain_zenbtc_redemptions_proto_rawDescData
}

var file_zrchain_zenbtc_redemptions_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_zrchain_zenbtc_redemptions_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_zrchain_zenbtc_redemptions_proto_goTypes = []interface{}{
	(RedemptionStatus)(0),  // 0: zrchain.zenbtc.RedemptionStatus
	(BurnStatus)(0),        // 1: zrchain.zenbtc.BurnStatus
	(*Redemption)(nil),     // 2: zrchain.zenbtc.Redemption
	(*RedemptionData)(nil), // 3: zrchain.zenbtc.RedemptionData
	(*BurnEvent)(nil),      // 4: zrchain.zenbtc.BurnEvent
}
var file_zrchain_zenbtc_redemptions_proto_depIdxs = []int32{
	3, // 0: zrchain.zenbtc.Redemption.data:type_name -> zrchain.zenbtc.RedemptionData
	0, // 1: zrchain.zenbtc.Redemption.status:type_name -> zrchain.zenbtc.RedemptionStatus
	1, // 2: zrchain.zenbtc.BurnEvent.status:type_name -> zrchain.zenbtc.BurnStatus
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_zrchain_zenbtc_redemptions_proto_init() }
func file_zrchain_zenbtc_redemptions_proto_init() {
	if File_zrchain_zenbtc_redemptions_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_zrchain_zenbtc_redemptions_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Redemption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zrchain_zenbtc_redemptions_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedemptionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zrchain_zenbtc_redemptions_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BurnEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zrchain_zenbtc_redemptions_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_zrchain_zenbtc_redemptions_proto_goTypes,
		DependencyIndexes: file_zrchain_zenbtc_redemptions_proto_depIdxs,
		EnumInfos:         file_zrchain_zenbtc_redemptions_proto_enumTypes,
		MessageInfos:      file_zrchain_zenbtc_redemptions_proto_msgTypes,
	}.Build()
	File_zrchain_zenbtc_redemptions_proto = out.File
	file_zrchain_zenbtc_redemptions_proto_rawDesc = nil
	file_zrchain_zenbtc_redemptions_proto_goTypes = nil
	file_zrchain_zenbtc_redemptions_proto_depIdxs = nil
}
