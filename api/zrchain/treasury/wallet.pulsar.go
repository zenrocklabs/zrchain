// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package treasury

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: zrchain/treasury/wallet.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// WalletType specifies the Layer 1 blockchain that this wallet will be used
// for.
type WalletType int32

const (
	// The wallet type is missing (all wallets will be derived)
	WalletType_WALLET_TYPE_UNSPECIFIED WalletType = 0
	// The wallet type for native cosmos accounts
	WalletType_WALLET_TYPE_NATIVE WalletType = 1
	// The wallet type for mainnet ETH and its ERC-20 tokens
	WalletType_WALLET_TYPE_EVM WalletType = 2
	// The Wallet type for Testnet BTC
	WalletType_WALLET_TYPE_BTC_TESTNET WalletType = 3
	// The Wallet type for Mainnet BTC
	WalletType_WALLET_TYPE_BTC_MAINNET WalletType = 4
	// The Wallet type for RegNet - Local Test Network
	WalletType_WALLET_TYPE_BTC_REGNET WalletType = 5
	// Wallet type for Solana
	WalletType_WALLET_TYPE_SOLANA WalletType = 6
	// The Wallet type for Mainnet ZCash
	WalletType_WALLET_TYPE_ZCASH_MAINNET WalletType = 7
	// The Wallet type for Testnet ZCash
	WalletType_WALLET_TYPE_ZCASH_TESTNET WalletType = 8
	// The Wallet type for RegNet ZCash - Local Test Network
	WalletType_WALLET_TYPE_ZCASH_REGNET WalletType = 9
)

// Enum value maps for WalletType.
var (
	WalletType_name = map[int32]string{
		0: "WALLET_TYPE_UNSPECIFIED",
		1: "WALLET_TYPE_NATIVE",
		2: "WALLET_TYPE_EVM",
		3: "WALLET_TYPE_BTC_TESTNET",
		4: "WALLET_TYPE_BTC_MAINNET",
		5: "WALLET_TYPE_BTC_REGNET",
		6: "WALLET_TYPE_SOLANA",
		7: "WALLET_TYPE_ZCASH_MAINNET",
		8: "WALLET_TYPE_ZCASH_TESTNET",
		9: "WALLET_TYPE_ZCASH_REGNET",
	}
	WalletType_value = map[string]int32{
		"WALLET_TYPE_UNSPECIFIED":   0,
		"WALLET_TYPE_NATIVE":        1,
		"WALLET_TYPE_EVM":           2,
		"WALLET_TYPE_BTC_TESTNET":   3,
		"WALLET_TYPE_BTC_MAINNET":   4,
		"WALLET_TYPE_BTC_REGNET":    5,
		"WALLET_TYPE_SOLANA":        6,
		"WALLET_TYPE_ZCASH_MAINNET": 7,
		"WALLET_TYPE_ZCASH_TESTNET": 8,
		"WALLET_TYPE_ZCASH_REGNET":  9,
	}
)

func (x WalletType) Enum() *WalletType {
	p := new(WalletType)
	*p = x
	return p
}

func (x WalletType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WalletType) Descriptor() protoreflect.EnumDescriptor {
	return file_zrchain_treasury_wallet_proto_enumTypes[0].Descriptor()
}

func (WalletType) Type() protoreflect.EnumType {
	return &file_zrchain_treasury_wallet_proto_enumTypes[0]
}

func (x WalletType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WalletType.Descriptor instead.
func (WalletType) EnumDescriptor() ([]byte, []int) {
	return file_zrchain_treasury_wallet_proto_rawDescGZIP(), []int{0}
}

var File_zrchain_treasury_wallet_proto protoreflect.FileDescriptor

var file_zrchain_treasury_wallet_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x79, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x10, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x79, 0x2a, 0xa0, 0x02, 0x0a, 0x0a, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x17, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a,
	0x12, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x41, 0x54,
	0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x56, 0x4d, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x57, 0x41,
	0x4c, 0x4c, 0x45, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x54, 0x43, 0x5f, 0x54, 0x45,
	0x53, 0x54, 0x4e, 0x45, 0x54, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x57, 0x41, 0x4c, 0x4c, 0x45,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x54, 0x43, 0x5f, 0x4d, 0x41, 0x49, 0x4e, 0x4e,
	0x45, 0x54, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x42, 0x54, 0x43, 0x5f, 0x52, 0x45, 0x47, 0x4e, 0x45, 0x54, 0x10, 0x05,
	0x12, 0x16, 0x0a, 0x12, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x53, 0x4f, 0x4c, 0x41, 0x4e, 0x41, 0x10, 0x06, 0x12, 0x1d, 0x0a, 0x19, 0x57, 0x41, 0x4c, 0x4c,
	0x45, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x5a, 0x43, 0x41, 0x53, 0x48, 0x5f, 0x4d, 0x41,
	0x49, 0x4e, 0x4e, 0x45, 0x54, 0x10, 0x07, 0x12, 0x1d, 0x0a, 0x19, 0x57, 0x41, 0x4c, 0x4c, 0x45,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x5a, 0x43, 0x41, 0x53, 0x48, 0x5f, 0x54, 0x45, 0x53,
	0x54, 0x4e, 0x45, 0x54, 0x10, 0x08, 0x12, 0x1c, 0x0a, 0x18, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x5a, 0x43, 0x41, 0x53, 0x48, 0x5f, 0x52, 0x45, 0x47, 0x4e,
	0x45, 0x54, 0x10, 0x09, 0x42, 0xc3, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x72, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x42, 0x0b, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3d, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x5a, 0x65, 0x6e, 0x72, 0x6f, 0x63, 0x6b,
	0x2d, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7a, 0x72, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x2f, 0x76, 0x36, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x7a, 0x72, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2f, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0xa2, 0x02, 0x03, 0x5a, 0x54,
	0x58, 0xaa, 0x02, 0x10, 0x5a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x72, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x79, 0xca, 0x02, 0x10, 0x5a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5c, 0x54,
	0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0xe2, 0x02, 0x1c, 0x5a, 0x72, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x5c, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x11, 0x5a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x3a, 0x3a, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_zrchain_treasury_wallet_proto_rawDescOnce sync.Once
	file_zrchain_treasury_wallet_proto_rawDescData = file_zrchain_treasury_wallet_proto_rawDesc
)

func file_zrchain_treasury_wallet_proto_rawDescGZIP() []byte {
	file_zrchain_treasury_wallet_proto_rawDescOnce.Do(func() {
		file_zrchain_treasury_wallet_proto_rawDescData = protoimpl.X.CompressGZIP(file_zrchain_treasury_wallet_proto_rawDescData)
	})
	return file_zrchain_treasury_wallet_proto_rawDescData
}

var file_zrchain_treasury_wallet_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_zrchain_treasury_wallet_proto_goTypes = []interface{}{
	(WalletType)(0), // 0: zrchain.treasury.WalletType
}
var file_zrchain_treasury_wallet_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_zrchain_treasury_wallet_proto_init() }
func file_zrchain_treasury_wallet_proto_init() {
	if File_zrchain_treasury_wallet_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zrchain_treasury_wallet_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_zrchain_treasury_wallet_proto_goTypes,
		DependencyIndexes: file_zrchain_treasury_wallet_proto_depIdxs,
		EnumInfos:         file_zrchain_treasury_wallet_proto_enumTypes,
	}.Build()
	File_zrchain_treasury_wallet_proto = out.File
	file_zrchain_treasury_wallet_proto_rawDesc = nil
	file_zrchain_treasury_wallet_proto_goTypes = nil
	file_zrchain_treasury_wallet_proto_depIdxs = nil
}
