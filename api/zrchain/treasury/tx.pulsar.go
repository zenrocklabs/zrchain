// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package treasury

import (
	_ "cosmossdk.io/api/amino"
	_ "cosmossdk.io/api/cosmos/msg/v1"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_MsgUpdateParams           protoreflect.MessageDescriptor
	fd_MsgUpdateParams_authority protoreflect.FieldDescriptor
	fd_MsgUpdateParams_params    protoreflect.FieldDescriptor
)

func init() {
	file_zrchain_treasury_tx_proto_init()
	md_MsgUpdateParams = File_zrchain_treasury_tx_proto.Messages().ByName("MsgUpdateParams")
	fd_MsgUpdateParams_authority = md_MsgUpdateParams.Fields().ByName("authority")
	fd_MsgUpdateParams_params = md_MsgUpdateParams.Fields().ByName("params")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateParams)(nil)

type fastReflection_MsgUpdateParams MsgUpdateParams

func (x *MsgUpdateParams) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateParams)(x)
}

func (x *MsgUpdateParams) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_treasury_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateParams_messageType fastReflection_MsgUpdateParams_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateParams_messageType{}

type fastReflection_MsgUpdateParams_messageType struct{}

func (x fastReflection_MsgUpdateParams_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateParams)(nil)
}
func (x fastReflection_MsgUpdateParams_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateParams)
}
func (x fastReflection_MsgUpdateParams_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateParams
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateParams) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateParams
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateParams) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateParams_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateParams) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateParams)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateParams) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateParams)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateParams) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Authority != "" {
		value := protoreflect.ValueOfString(x.Authority)
		if !f(fd_MsgUpdateParams_authority, value) {
			return
		}
	}
	if x.Params != nil {
		value := protoreflect.ValueOfMessage(x.Params.ProtoReflect())
		if !f(fd_MsgUpdateParams_params, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateParams) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "zrchain.treasury.MsgUpdateParams.authority":
		return x.Authority != ""
	case "zrchain.treasury.MsgUpdateParams.params":
		return x.Params != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParams) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgUpdateParams.authority":
		x.Authority = ""
	case "zrchain.treasury.MsgUpdateParams.params":
		x.Params = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateParams) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "zrchain.treasury.MsgUpdateParams.authority":
		value := x.Authority
		return protoreflect.ValueOfString(value)
	case "zrchain.treasury.MsgUpdateParams.params":
		value := x.Params
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgUpdateParams does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParams) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgUpdateParams.authority":
		x.Authority = value.Interface().(string)
	case "zrchain.treasury.MsgUpdateParams.params":
		x.Params = value.Message().Interface().(*Params)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParams) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgUpdateParams.params":
		if x.Params == nil {
			x.Params = new(Params)
		}
		return protoreflect.ValueOfMessage(x.Params.ProtoReflect())
	case "zrchain.treasury.MsgUpdateParams.authority":
		panic(fmt.Errorf("field authority of message zrchain.treasury.MsgUpdateParams is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateParams) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgUpdateParams.authority":
		return protoreflect.ValueOfString("")
	case "zrchain.treasury.MsgUpdateParams.params":
		m := new(Params)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateParams) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.treasury.MsgUpdateParams", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateParams) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParams) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateParams) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateParams) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateParams)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Authority)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Params != nil {
			l = options.Size(x.Params)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateParams)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Params != nil {
			encoded, err := options.Marshal(x.Params)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Authority) > 0 {
			i -= len(x.Authority)
			copy(dAtA[i:], x.Authority)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Authority)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateParams)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Authority = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Params == nil {
					x.Params = &Params{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Params); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpdateParamsResponse protoreflect.MessageDescriptor
)

func init() {
	file_zrchain_treasury_tx_proto_init()
	md_MsgUpdateParamsResponse = File_zrchain_treasury_tx_proto.Messages().ByName("MsgUpdateParamsResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateParamsResponse)(nil)

type fastReflection_MsgUpdateParamsResponse MsgUpdateParamsResponse

func (x *MsgUpdateParamsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateParamsResponse)(x)
}

func (x *MsgUpdateParamsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_treasury_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateParamsResponse_messageType fastReflection_MsgUpdateParamsResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateParamsResponse_messageType{}

type fastReflection_MsgUpdateParamsResponse_messageType struct{}

func (x fastReflection_MsgUpdateParamsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateParamsResponse)(nil)
}
func (x fastReflection_MsgUpdateParamsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateParamsResponse)
}
func (x fastReflection_MsgUpdateParamsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateParamsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateParamsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateParamsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateParamsResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateParamsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateParamsResponse) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateParamsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateParamsResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateParamsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateParamsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateParamsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParamsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateParamsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgUpdateParamsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParamsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParamsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateParamsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateParamsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.treasury.MsgUpdateParamsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateParamsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParamsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateParamsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateParamsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateParamsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateParamsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateParamsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgNewKeyRequest                 protoreflect.MessageDescriptor
	fd_MsgNewKeyRequest_creator         protoreflect.FieldDescriptor
	fd_MsgNewKeyRequest_workspace_addr  protoreflect.FieldDescriptor
	fd_MsgNewKeyRequest_keyring_addr    protoreflect.FieldDescriptor
	fd_MsgNewKeyRequest_key_type        protoreflect.FieldDescriptor
	fd_MsgNewKeyRequest_btl             protoreflect.FieldDescriptor
	fd_MsgNewKeyRequest_index           protoreflect.FieldDescriptor
	fd_MsgNewKeyRequest_ext_requester   protoreflect.FieldDescriptor
	fd_MsgNewKeyRequest_ext_key_type    protoreflect.FieldDescriptor
	fd_MsgNewKeyRequest_sign_policy_id  protoreflect.FieldDescriptor
	fd_MsgNewKeyRequest_zenbtc_metadata protoreflect.FieldDescriptor
)

func init() {
	file_zrchain_treasury_tx_proto_init()
	md_MsgNewKeyRequest = File_zrchain_treasury_tx_proto.Messages().ByName("MsgNewKeyRequest")
	fd_MsgNewKeyRequest_creator = md_MsgNewKeyRequest.Fields().ByName("creator")
	fd_MsgNewKeyRequest_workspace_addr = md_MsgNewKeyRequest.Fields().ByName("workspace_addr")
	fd_MsgNewKeyRequest_keyring_addr = md_MsgNewKeyRequest.Fields().ByName("keyring_addr")
	fd_MsgNewKeyRequest_key_type = md_MsgNewKeyRequest.Fields().ByName("key_type")
	fd_MsgNewKeyRequest_btl = md_MsgNewKeyRequest.Fields().ByName("btl")
	fd_MsgNewKeyRequest_index = md_MsgNewKeyRequest.Fields().ByName("index")
	fd_MsgNewKeyRequest_ext_requester = md_MsgNewKeyRequest.Fields().ByName("ext_requester")
	fd_MsgNewKeyRequest_ext_key_type = md_MsgNewKeyRequest.Fields().ByName("ext_key_type")
	fd_MsgNewKeyRequest_sign_policy_id = md_MsgNewKeyRequest.Fields().ByName("sign_policy_id")
	fd_MsgNewKeyRequest_zenbtc_metadata = md_MsgNewKeyRequest.Fields().ByName("zenbtc_metadata")
}

var _ protoreflect.Message = (*fastReflection_MsgNewKeyRequest)(nil)

type fastReflection_MsgNewKeyRequest MsgNewKeyRequest

func (x *MsgNewKeyRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgNewKeyRequest)(x)
}

func (x *MsgNewKeyRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_treasury_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgNewKeyRequest_messageType fastReflection_MsgNewKeyRequest_messageType
var _ protoreflect.MessageType = fastReflection_MsgNewKeyRequest_messageType{}

type fastReflection_MsgNewKeyRequest_messageType struct{}

func (x fastReflection_MsgNewKeyRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgNewKeyRequest)(nil)
}
func (x fastReflection_MsgNewKeyRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgNewKeyRequest)
}
func (x fastReflection_MsgNewKeyRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNewKeyRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgNewKeyRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNewKeyRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgNewKeyRequest) Type() protoreflect.MessageType {
	return _fastReflection_MsgNewKeyRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgNewKeyRequest) New() protoreflect.Message {
	return new(fastReflection_MsgNewKeyRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgNewKeyRequest) Interface() protoreflect.ProtoMessage {
	return (*MsgNewKeyRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgNewKeyRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgNewKeyRequest_creator, value) {
			return
		}
	}
	if x.WorkspaceAddr != "" {
		value := protoreflect.ValueOfString(x.WorkspaceAddr)
		if !f(fd_MsgNewKeyRequest_workspace_addr, value) {
			return
		}
	}
	if x.KeyringAddr != "" {
		value := protoreflect.ValueOfString(x.KeyringAddr)
		if !f(fd_MsgNewKeyRequest_keyring_addr, value) {
			return
		}
	}
	if x.KeyType != "" {
		value := protoreflect.ValueOfString(x.KeyType)
		if !f(fd_MsgNewKeyRequest_key_type, value) {
			return
		}
	}
	if x.Btl != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Btl)
		if !f(fd_MsgNewKeyRequest_btl, value) {
			return
		}
	}
	if x.Index != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Index)
		if !f(fd_MsgNewKeyRequest_index, value) {
			return
		}
	}
	if x.ExtRequester != "" {
		value := protoreflect.ValueOfString(x.ExtRequester)
		if !f(fd_MsgNewKeyRequest_ext_requester, value) {
			return
		}
	}
	if x.ExtKeyType != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ExtKeyType)
		if !f(fd_MsgNewKeyRequest_ext_key_type, value) {
			return
		}
	}
	if x.SignPolicyId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.SignPolicyId)
		if !f(fd_MsgNewKeyRequest_sign_policy_id, value) {
			return
		}
	}
	if x.ZenbtcMetadata != nil {
		value := protoreflect.ValueOfMessage(x.ZenbtcMetadata.ProtoReflect())
		if !f(fd_MsgNewKeyRequest_zenbtc_metadata, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgNewKeyRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewKeyRequest.creator":
		return x.Creator != ""
	case "zrchain.treasury.MsgNewKeyRequest.workspace_addr":
		return x.WorkspaceAddr != ""
	case "zrchain.treasury.MsgNewKeyRequest.keyring_addr":
		return x.KeyringAddr != ""
	case "zrchain.treasury.MsgNewKeyRequest.key_type":
		return x.KeyType != ""
	case "zrchain.treasury.MsgNewKeyRequest.btl":
		return x.Btl != uint64(0)
	case "zrchain.treasury.MsgNewKeyRequest.index":
		return x.Index != uint64(0)
	case "zrchain.treasury.MsgNewKeyRequest.ext_requester":
		return x.ExtRequester != ""
	case "zrchain.treasury.MsgNewKeyRequest.ext_key_type":
		return x.ExtKeyType != uint64(0)
	case "zrchain.treasury.MsgNewKeyRequest.sign_policy_id":
		return x.SignPolicyId != uint64(0)
	case "zrchain.treasury.MsgNewKeyRequest.zenbtc_metadata":
		return x.ZenbtcMetadata != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewKeyRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewKeyRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewKeyRequest.creator":
		x.Creator = ""
	case "zrchain.treasury.MsgNewKeyRequest.workspace_addr":
		x.WorkspaceAddr = ""
	case "zrchain.treasury.MsgNewKeyRequest.keyring_addr":
		x.KeyringAddr = ""
	case "zrchain.treasury.MsgNewKeyRequest.key_type":
		x.KeyType = ""
	case "zrchain.treasury.MsgNewKeyRequest.btl":
		x.Btl = uint64(0)
	case "zrchain.treasury.MsgNewKeyRequest.index":
		x.Index = uint64(0)
	case "zrchain.treasury.MsgNewKeyRequest.ext_requester":
		x.ExtRequester = ""
	case "zrchain.treasury.MsgNewKeyRequest.ext_key_type":
		x.ExtKeyType = uint64(0)
	case "zrchain.treasury.MsgNewKeyRequest.sign_policy_id":
		x.SignPolicyId = uint64(0)
	case "zrchain.treasury.MsgNewKeyRequest.zenbtc_metadata":
		x.ZenbtcMetadata = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewKeyRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgNewKeyRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "zrchain.treasury.MsgNewKeyRequest.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "zrchain.treasury.MsgNewKeyRequest.workspace_addr":
		value := x.WorkspaceAddr
		return protoreflect.ValueOfString(value)
	case "zrchain.treasury.MsgNewKeyRequest.keyring_addr":
		value := x.KeyringAddr
		return protoreflect.ValueOfString(value)
	case "zrchain.treasury.MsgNewKeyRequest.key_type":
		value := x.KeyType
		return protoreflect.ValueOfString(value)
	case "zrchain.treasury.MsgNewKeyRequest.btl":
		value := x.Btl
		return protoreflect.ValueOfUint64(value)
	case "zrchain.treasury.MsgNewKeyRequest.index":
		value := x.Index
		return protoreflect.ValueOfUint64(value)
	case "zrchain.treasury.MsgNewKeyRequest.ext_requester":
		value := x.ExtRequester
		return protoreflect.ValueOfString(value)
	case "zrchain.treasury.MsgNewKeyRequest.ext_key_type":
		value := x.ExtKeyType
		return protoreflect.ValueOfUint64(value)
	case "zrchain.treasury.MsgNewKeyRequest.sign_policy_id":
		value := x.SignPolicyId
		return protoreflect.ValueOfUint64(value)
	case "zrchain.treasury.MsgNewKeyRequest.zenbtc_metadata":
		value := x.ZenbtcMetadata
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewKeyRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewKeyRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewKeyRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewKeyRequest.creator":
		x.Creator = value.Interface().(string)
	case "zrchain.treasury.MsgNewKeyRequest.workspace_addr":
		x.WorkspaceAddr = value.Interface().(string)
	case "zrchain.treasury.MsgNewKeyRequest.keyring_addr":
		x.KeyringAddr = value.Interface().(string)
	case "zrchain.treasury.MsgNewKeyRequest.key_type":
		x.KeyType = value.Interface().(string)
	case "zrchain.treasury.MsgNewKeyRequest.btl":
		x.Btl = value.Uint()
	case "zrchain.treasury.MsgNewKeyRequest.index":
		x.Index = value.Uint()
	case "zrchain.treasury.MsgNewKeyRequest.ext_requester":
		x.ExtRequester = value.Interface().(string)
	case "zrchain.treasury.MsgNewKeyRequest.ext_key_type":
		x.ExtKeyType = value.Uint()
	case "zrchain.treasury.MsgNewKeyRequest.sign_policy_id":
		x.SignPolicyId = value.Uint()
	case "zrchain.treasury.MsgNewKeyRequest.zenbtc_metadata":
		x.ZenbtcMetadata = value.Message().Interface().(*ZenBTCMetadata)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewKeyRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewKeyRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewKeyRequest.zenbtc_metadata":
		if x.ZenbtcMetadata == nil {
			x.ZenbtcMetadata = new(ZenBTCMetadata)
		}
		return protoreflect.ValueOfMessage(x.ZenbtcMetadata.ProtoReflect())
	case "zrchain.treasury.MsgNewKeyRequest.creator":
		panic(fmt.Errorf("field creator of message zrchain.treasury.MsgNewKeyRequest is not mutable"))
	case "zrchain.treasury.MsgNewKeyRequest.workspace_addr":
		panic(fmt.Errorf("field workspace_addr of message zrchain.treasury.MsgNewKeyRequest is not mutable"))
	case "zrchain.treasury.MsgNewKeyRequest.keyring_addr":
		panic(fmt.Errorf("field keyring_addr of message zrchain.treasury.MsgNewKeyRequest is not mutable"))
	case "zrchain.treasury.MsgNewKeyRequest.key_type":
		panic(fmt.Errorf("field key_type of message zrchain.treasury.MsgNewKeyRequest is not mutable"))
	case "zrchain.treasury.MsgNewKeyRequest.btl":
		panic(fmt.Errorf("field btl of message zrchain.treasury.MsgNewKeyRequest is not mutable"))
	case "zrchain.treasury.MsgNewKeyRequest.index":
		panic(fmt.Errorf("field index of message zrchain.treasury.MsgNewKeyRequest is not mutable"))
	case "zrchain.treasury.MsgNewKeyRequest.ext_requester":
		panic(fmt.Errorf("field ext_requester of message zrchain.treasury.MsgNewKeyRequest is not mutable"))
	case "zrchain.treasury.MsgNewKeyRequest.ext_key_type":
		panic(fmt.Errorf("field ext_key_type of message zrchain.treasury.MsgNewKeyRequest is not mutable"))
	case "zrchain.treasury.MsgNewKeyRequest.sign_policy_id":
		panic(fmt.Errorf("field sign_policy_id of message zrchain.treasury.MsgNewKeyRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewKeyRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewKeyRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgNewKeyRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewKeyRequest.creator":
		return protoreflect.ValueOfString("")
	case "zrchain.treasury.MsgNewKeyRequest.workspace_addr":
		return protoreflect.ValueOfString("")
	case "zrchain.treasury.MsgNewKeyRequest.keyring_addr":
		return protoreflect.ValueOfString("")
	case "zrchain.treasury.MsgNewKeyRequest.key_type":
		return protoreflect.ValueOfString("")
	case "zrchain.treasury.MsgNewKeyRequest.btl":
		return protoreflect.ValueOfUint64(uint64(0))
	case "zrchain.treasury.MsgNewKeyRequest.index":
		return protoreflect.ValueOfUint64(uint64(0))
	case "zrchain.treasury.MsgNewKeyRequest.ext_requester":
		return protoreflect.ValueOfString("")
	case "zrchain.treasury.MsgNewKeyRequest.ext_key_type":
		return protoreflect.ValueOfUint64(uint64(0))
	case "zrchain.treasury.MsgNewKeyRequest.sign_policy_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "zrchain.treasury.MsgNewKeyRequest.zenbtc_metadata":
		m := new(ZenBTCMetadata)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewKeyRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewKeyRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgNewKeyRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.treasury.MsgNewKeyRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgNewKeyRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewKeyRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgNewKeyRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgNewKeyRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgNewKeyRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.WorkspaceAddr)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.KeyringAddr)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.KeyType)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Btl != 0 {
			n += 1 + runtime.Sov(uint64(x.Btl))
		}
		if x.Index != 0 {
			n += 1 + runtime.Sov(uint64(x.Index))
		}
		l = len(x.ExtRequester)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ExtKeyType != 0 {
			n += 1 + runtime.Sov(uint64(x.ExtKeyType))
		}
		if x.SignPolicyId != 0 {
			n += 1 + runtime.Sov(uint64(x.SignPolicyId))
		}
		if x.ZenbtcMetadata != nil {
			l = options.Size(x.ZenbtcMetadata)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgNewKeyRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.ZenbtcMetadata != nil {
			encoded, err := options.Marshal(x.ZenbtcMetadata)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x52
		}
		if x.SignPolicyId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SignPolicyId))
			i--
			dAtA[i] = 0x48
		}
		if x.ExtKeyType != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ExtKeyType))
			i--
			dAtA[i] = 0x40
		}
		if len(x.ExtRequester) > 0 {
			i -= len(x.ExtRequester)
			copy(dAtA[i:], x.ExtRequester)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExtRequester)))
			i--
			dAtA[i] = 0x3a
		}
		if x.Index != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Index))
			i--
			dAtA[i] = 0x30
		}
		if x.Btl != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Btl))
			i--
			dAtA[i] = 0x28
		}
		if len(x.KeyType) > 0 {
			i -= len(x.KeyType)
			copy(dAtA[i:], x.KeyType)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.KeyType)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.KeyringAddr) > 0 {
			i -= len(x.KeyringAddr)
			copy(dAtA[i:], x.KeyringAddr)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.KeyringAddr)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.WorkspaceAddr) > 0 {
			i -= len(x.WorkspaceAddr)
			copy(dAtA[i:], x.WorkspaceAddr)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.WorkspaceAddr)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgNewKeyRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNewKeyRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNewKeyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field WorkspaceAddr", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.WorkspaceAddr = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KeyringAddr", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.KeyringAddr = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KeyType", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.KeyType = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Btl", wireType)
				}
				x.Btl = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Btl |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
				}
				x.Index = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Index |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExtRequester", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExtRequester = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExtKeyType", wireType)
				}
				x.ExtKeyType = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ExtKeyType |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SignPolicyId", wireType)
				}
				x.SignPolicyId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SignPolicyId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ZenbtcMetadata", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ZenbtcMetadata == nil {
					x.ZenbtcMetadata = &ZenBTCMetadata{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ZenbtcMetadata); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgNewKeyRequestResponse            protoreflect.MessageDescriptor
	fd_MsgNewKeyRequestResponse_key_req_id protoreflect.FieldDescriptor
)

func init() {
	file_zrchain_treasury_tx_proto_init()
	md_MsgNewKeyRequestResponse = File_zrchain_treasury_tx_proto.Messages().ByName("MsgNewKeyRequestResponse")
	fd_MsgNewKeyRequestResponse_key_req_id = md_MsgNewKeyRequestResponse.Fields().ByName("key_req_id")
}

var _ protoreflect.Message = (*fastReflection_MsgNewKeyRequestResponse)(nil)

type fastReflection_MsgNewKeyRequestResponse MsgNewKeyRequestResponse

func (x *MsgNewKeyRequestResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgNewKeyRequestResponse)(x)
}

func (x *MsgNewKeyRequestResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_treasury_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgNewKeyRequestResponse_messageType fastReflection_MsgNewKeyRequestResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgNewKeyRequestResponse_messageType{}

type fastReflection_MsgNewKeyRequestResponse_messageType struct{}

func (x fastReflection_MsgNewKeyRequestResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgNewKeyRequestResponse)(nil)
}
func (x fastReflection_MsgNewKeyRequestResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgNewKeyRequestResponse)
}
func (x fastReflection_MsgNewKeyRequestResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNewKeyRequestResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgNewKeyRequestResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNewKeyRequestResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgNewKeyRequestResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgNewKeyRequestResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgNewKeyRequestResponse) New() protoreflect.Message {
	return new(fastReflection_MsgNewKeyRequestResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgNewKeyRequestResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgNewKeyRequestResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgNewKeyRequestResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.KeyReqId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.KeyReqId)
		if !f(fd_MsgNewKeyRequestResponse_key_req_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgNewKeyRequestResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewKeyRequestResponse.key_req_id":
		return x.KeyReqId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewKeyRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewKeyRequestResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewKeyRequestResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewKeyRequestResponse.key_req_id":
		x.KeyReqId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewKeyRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewKeyRequestResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgNewKeyRequestResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "zrchain.treasury.MsgNewKeyRequestResponse.key_req_id":
		value := x.KeyReqId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewKeyRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewKeyRequestResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewKeyRequestResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewKeyRequestResponse.key_req_id":
		x.KeyReqId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewKeyRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewKeyRequestResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewKeyRequestResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewKeyRequestResponse.key_req_id":
		panic(fmt.Errorf("field key_req_id of message zrchain.treasury.MsgNewKeyRequestResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewKeyRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewKeyRequestResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgNewKeyRequestResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewKeyRequestResponse.key_req_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewKeyRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewKeyRequestResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgNewKeyRequestResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.treasury.MsgNewKeyRequestResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgNewKeyRequestResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewKeyRequestResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgNewKeyRequestResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgNewKeyRequestResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgNewKeyRequestResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.KeyReqId != 0 {
			n += 1 + runtime.Sov(uint64(x.KeyReqId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgNewKeyRequestResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.KeyReqId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.KeyReqId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgNewKeyRequestResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNewKeyRequestResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNewKeyRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KeyReqId", wireType)
				}
				x.KeyReqId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.KeyReqId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgFulfilKeyRequest                         protoreflect.MessageDescriptor
	fd_MsgFulfilKeyRequest_creator                 protoreflect.FieldDescriptor
	fd_MsgFulfilKeyRequest_request_id              protoreflect.FieldDescriptor
	fd_MsgFulfilKeyRequest_status                  protoreflect.FieldDescriptor
	fd_MsgFulfilKeyRequest_key                     protoreflect.FieldDescriptor
	fd_MsgFulfilKeyRequest_reject_reason           protoreflect.FieldDescriptor
	fd_MsgFulfilKeyRequest_keyring_party_signature protoreflect.FieldDescriptor
)

func init() {
	file_zrchain_treasury_tx_proto_init()
	md_MsgFulfilKeyRequest = File_zrchain_treasury_tx_proto.Messages().ByName("MsgFulfilKeyRequest")
	fd_MsgFulfilKeyRequest_creator = md_MsgFulfilKeyRequest.Fields().ByName("creator")
	fd_MsgFulfilKeyRequest_request_id = md_MsgFulfilKeyRequest.Fields().ByName("request_id")
	fd_MsgFulfilKeyRequest_status = md_MsgFulfilKeyRequest.Fields().ByName("status")
	fd_MsgFulfilKeyRequest_key = md_MsgFulfilKeyRequest.Fields().ByName("key")
	fd_MsgFulfilKeyRequest_reject_reason = md_MsgFulfilKeyRequest.Fields().ByName("reject_reason")
	fd_MsgFulfilKeyRequest_keyring_party_signature = md_MsgFulfilKeyRequest.Fields().ByName("keyring_party_signature")
}

var _ protoreflect.Message = (*fastReflection_MsgFulfilKeyRequest)(nil)

type fastReflection_MsgFulfilKeyRequest MsgFulfilKeyRequest

func (x *MsgFulfilKeyRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgFulfilKeyRequest)(x)
}

func (x *MsgFulfilKeyRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_treasury_tx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgFulfilKeyRequest_messageType fastReflection_MsgFulfilKeyRequest_messageType
var _ protoreflect.MessageType = fastReflection_MsgFulfilKeyRequest_messageType{}

type fastReflection_MsgFulfilKeyRequest_messageType struct{}

func (x fastReflection_MsgFulfilKeyRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgFulfilKeyRequest)(nil)
}
func (x fastReflection_MsgFulfilKeyRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgFulfilKeyRequest)
}
func (x fastReflection_MsgFulfilKeyRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgFulfilKeyRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgFulfilKeyRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgFulfilKeyRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgFulfilKeyRequest) Type() protoreflect.MessageType {
	return _fastReflection_MsgFulfilKeyRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgFulfilKeyRequest) New() protoreflect.Message {
	return new(fastReflection_MsgFulfilKeyRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgFulfilKeyRequest) Interface() protoreflect.ProtoMessage {
	return (*MsgFulfilKeyRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgFulfilKeyRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgFulfilKeyRequest_creator, value) {
			return
		}
	}
	if x.RequestId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.RequestId)
		if !f(fd_MsgFulfilKeyRequest_request_id, value) {
			return
		}
	}
	if x.Status != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Status))
		if !f(fd_MsgFulfilKeyRequest_status, value) {
			return
		}
	}
	if x.Result != nil {
		switch o := x.Result.(type) {
		case *MsgFulfilKeyRequest_Key:
			v := o.Key
			value := protoreflect.ValueOfMessage(v.ProtoReflect())
			if !f(fd_MsgFulfilKeyRequest_key, value) {
				return
			}
		case *MsgFulfilKeyRequest_RejectReason:
			v := o.RejectReason
			value := protoreflect.ValueOfString(v)
			if !f(fd_MsgFulfilKeyRequest_reject_reason, value) {
				return
			}
		}
	}
	if len(x.KeyringPartySignature) != 0 {
		value := protoreflect.ValueOfBytes(x.KeyringPartySignature)
		if !f(fd_MsgFulfilKeyRequest_keyring_party_signature, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgFulfilKeyRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "zrchain.treasury.MsgFulfilKeyRequest.creator":
		return x.Creator != ""
	case "zrchain.treasury.MsgFulfilKeyRequest.request_id":
		return x.RequestId != uint64(0)
	case "zrchain.treasury.MsgFulfilKeyRequest.status":
		return x.Status != 0
	case "zrchain.treasury.MsgFulfilKeyRequest.key":
		if x.Result == nil {
			return false
		} else if _, ok := x.Result.(*MsgFulfilKeyRequest_Key); ok {
			return true
		} else {
			return false
		}
	case "zrchain.treasury.MsgFulfilKeyRequest.reject_reason":
		if x.Result == nil {
			return false
		} else if _, ok := x.Result.(*MsgFulfilKeyRequest_RejectReason); ok {
			return true
		} else {
			return false
		}
	case "zrchain.treasury.MsgFulfilKeyRequest.keyring_party_signature":
		return len(x.KeyringPartySignature) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilKeyRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFulfilKeyRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgFulfilKeyRequest.creator":
		x.Creator = ""
	case "zrchain.treasury.MsgFulfilKeyRequest.request_id":
		x.RequestId = uint64(0)
	case "zrchain.treasury.MsgFulfilKeyRequest.status":
		x.Status = 0
	case "zrchain.treasury.MsgFulfilKeyRequest.key":
		x.Result = nil
	case "zrchain.treasury.MsgFulfilKeyRequest.reject_reason":
		x.Result = nil
	case "zrchain.treasury.MsgFulfilKeyRequest.keyring_party_signature":
		x.KeyringPartySignature = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilKeyRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgFulfilKeyRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "zrchain.treasury.MsgFulfilKeyRequest.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "zrchain.treasury.MsgFulfilKeyRequest.request_id":
		value := x.RequestId
		return protoreflect.ValueOfUint64(value)
	case "zrchain.treasury.MsgFulfilKeyRequest.status":
		value := x.Status
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "zrchain.treasury.MsgFulfilKeyRequest.key":
		if x.Result == nil {
			return protoreflect.ValueOfMessage((*MsgNewKey)(nil).ProtoReflect())
		} else if v, ok := x.Result.(*MsgFulfilKeyRequest_Key); ok {
			return protoreflect.ValueOfMessage(v.Key.ProtoReflect())
		} else {
			return protoreflect.ValueOfMessage((*MsgNewKey)(nil).ProtoReflect())
		}
	case "zrchain.treasury.MsgFulfilKeyRequest.reject_reason":
		if x.Result == nil {
			return protoreflect.ValueOfString("")
		} else if v, ok := x.Result.(*MsgFulfilKeyRequest_RejectReason); ok {
			return protoreflect.ValueOfString(v.RejectReason)
		} else {
			return protoreflect.ValueOfString("")
		}
	case "zrchain.treasury.MsgFulfilKeyRequest.keyring_party_signature":
		value := x.KeyringPartySignature
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilKeyRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilKeyRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFulfilKeyRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgFulfilKeyRequest.creator":
		x.Creator = value.Interface().(string)
	case "zrchain.treasury.MsgFulfilKeyRequest.request_id":
		x.RequestId = value.Uint()
	case "zrchain.treasury.MsgFulfilKeyRequest.status":
		x.Status = (KeyRequestStatus)(value.Enum())
	case "zrchain.treasury.MsgFulfilKeyRequest.key":
		cv := value.Message().Interface().(*MsgNewKey)
		x.Result = &MsgFulfilKeyRequest_Key{Key: cv}
	case "zrchain.treasury.MsgFulfilKeyRequest.reject_reason":
		cv := value.Interface().(string)
		x.Result = &MsgFulfilKeyRequest_RejectReason{RejectReason: cv}
	case "zrchain.treasury.MsgFulfilKeyRequest.keyring_party_signature":
		x.KeyringPartySignature = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilKeyRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFulfilKeyRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgFulfilKeyRequest.key":
		if x.Result == nil {
			value := &MsgNewKey{}
			oneofValue := &MsgFulfilKeyRequest_Key{Key: value}
			x.Result = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
		switch m := x.Result.(type) {
		case *MsgFulfilKeyRequest_Key:
			return protoreflect.ValueOfMessage(m.Key.ProtoReflect())
		default:
			value := &MsgNewKey{}
			oneofValue := &MsgFulfilKeyRequest_Key{Key: value}
			x.Result = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
	case "zrchain.treasury.MsgFulfilKeyRequest.creator":
		panic(fmt.Errorf("field creator of message zrchain.treasury.MsgFulfilKeyRequest is not mutable"))
	case "zrchain.treasury.MsgFulfilKeyRequest.request_id":
		panic(fmt.Errorf("field request_id of message zrchain.treasury.MsgFulfilKeyRequest is not mutable"))
	case "zrchain.treasury.MsgFulfilKeyRequest.status":
		panic(fmt.Errorf("field status of message zrchain.treasury.MsgFulfilKeyRequest is not mutable"))
	case "zrchain.treasury.MsgFulfilKeyRequest.reject_reason":
		panic(fmt.Errorf("field reject_reason of message zrchain.treasury.MsgFulfilKeyRequest is not mutable"))
	case "zrchain.treasury.MsgFulfilKeyRequest.keyring_party_signature":
		panic(fmt.Errorf("field keyring_party_signature of message zrchain.treasury.MsgFulfilKeyRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilKeyRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilKeyRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgFulfilKeyRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgFulfilKeyRequest.creator":
		return protoreflect.ValueOfString("")
	case "zrchain.treasury.MsgFulfilKeyRequest.request_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "zrchain.treasury.MsgFulfilKeyRequest.status":
		return protoreflect.ValueOfEnum(0)
	case "zrchain.treasury.MsgFulfilKeyRequest.key":
		value := &MsgNewKey{}
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "zrchain.treasury.MsgFulfilKeyRequest.reject_reason":
		return protoreflect.ValueOfString("")
	case "zrchain.treasury.MsgFulfilKeyRequest.keyring_party_signature":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilKeyRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilKeyRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgFulfilKeyRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	case "zrchain.treasury.MsgFulfilKeyRequest.result":
		if x.Result == nil {
			return nil
		}
		switch x.Result.(type) {
		case *MsgFulfilKeyRequest_Key:
			return x.Descriptor().Fields().ByName("key")
		case *MsgFulfilKeyRequest_RejectReason:
			return x.Descriptor().Fields().ByName("reject_reason")
		}
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.treasury.MsgFulfilKeyRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgFulfilKeyRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFulfilKeyRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgFulfilKeyRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgFulfilKeyRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgFulfilKeyRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.RequestId != 0 {
			n += 1 + runtime.Sov(uint64(x.RequestId))
		}
		if x.Status != 0 {
			n += 1 + runtime.Sov(uint64(x.Status))
		}
		switch x := x.Result.(type) {
		case *MsgFulfilKeyRequest_Key:
			if x == nil {
				break
			}
			l = options.Size(x.Key)
			n += 1 + l + runtime.Sov(uint64(l))
		case *MsgFulfilKeyRequest_RejectReason:
			if x == nil {
				break
			}
			l = len(x.RejectReason)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.KeyringPartySignature)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgFulfilKeyRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		switch x := x.Result.(type) {
		case *MsgFulfilKeyRequest_Key:
			encoded, err := options.Marshal(x.Key)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		case *MsgFulfilKeyRequest_RejectReason:
			i -= len(x.RejectReason)
			copy(dAtA[i:], x.RejectReason)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RejectReason)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.KeyringPartySignature) > 0 {
			i -= len(x.KeyringPartySignature)
			copy(dAtA[i:], x.KeyringPartySignature)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.KeyringPartySignature)))
			i--
			dAtA[i] = 0x32
		}
		if x.Status != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Status))
			i--
			dAtA[i] = 0x18
		}
		if x.RequestId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RequestId))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgFulfilKeyRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgFulfilKeyRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgFulfilKeyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RequestId", wireType)
				}
				x.RequestId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RequestId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				x.Status = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Status |= KeyRequestStatus(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := &MsgNewKey{}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], v); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				x.Result = &MsgFulfilKeyRequest_Key{v}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RejectReason", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Result = &MsgFulfilKeyRequest_RejectReason{string(dAtA[iNdEx:postIndex])}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KeyringPartySignature", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.KeyringPartySignature = append(x.KeyringPartySignature[:0], dAtA[iNdEx:postIndex]...)
				if x.KeyringPartySignature == nil {
					x.KeyringPartySignature = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgNewKey            protoreflect.MessageDescriptor
	fd_MsgNewKey_public_key protoreflect.FieldDescriptor
)

func init() {
	file_zrchain_treasury_tx_proto_init()
	md_MsgNewKey = File_zrchain_treasury_tx_proto.Messages().ByName("MsgNewKey")
	fd_MsgNewKey_public_key = md_MsgNewKey.Fields().ByName("public_key")
}

var _ protoreflect.Message = (*fastReflection_MsgNewKey)(nil)

type fastReflection_MsgNewKey MsgNewKey

func (x *MsgNewKey) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgNewKey)(x)
}

func (x *MsgNewKey) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_treasury_tx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgNewKey_messageType fastReflection_MsgNewKey_messageType
var _ protoreflect.MessageType = fastReflection_MsgNewKey_messageType{}

type fastReflection_MsgNewKey_messageType struct{}

func (x fastReflection_MsgNewKey_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgNewKey)(nil)
}
func (x fastReflection_MsgNewKey_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgNewKey)
}
func (x fastReflection_MsgNewKey_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNewKey
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgNewKey) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNewKey
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgNewKey) Type() protoreflect.MessageType {
	return _fastReflection_MsgNewKey_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgNewKey) New() protoreflect.Message {
	return new(fastReflection_MsgNewKey)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgNewKey) Interface() protoreflect.ProtoMessage {
	return (*MsgNewKey)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgNewKey) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.PublicKey) != 0 {
		value := protoreflect.ValueOfBytes(x.PublicKey)
		if !f(fd_MsgNewKey_public_key, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgNewKey) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewKey.public_key":
		return len(x.PublicKey) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewKey"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewKey does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewKey) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewKey.public_key":
		x.PublicKey = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewKey"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewKey does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgNewKey) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "zrchain.treasury.MsgNewKey.public_key":
		value := x.PublicKey
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewKey"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewKey does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewKey) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewKey.public_key":
		x.PublicKey = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewKey"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewKey does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewKey) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewKey.public_key":
		panic(fmt.Errorf("field public_key of message zrchain.treasury.MsgNewKey is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewKey"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewKey does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgNewKey) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewKey.public_key":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewKey"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewKey does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgNewKey) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.treasury.MsgNewKey", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgNewKey) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewKey) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgNewKey) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgNewKey) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgNewKey)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PublicKey)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgNewKey)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.PublicKey) > 0 {
			i -= len(x.PublicKey)
			copy(dAtA[i:], x.PublicKey)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PublicKey)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgNewKey)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNewKey: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNewKey: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PublicKey", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PublicKey = append(x.PublicKey[:0], dAtA[iNdEx:postIndex]...)
				if x.PublicKey == nil {
					x.PublicKey = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgFulfilKeyRequestResponse protoreflect.MessageDescriptor
)

func init() {
	file_zrchain_treasury_tx_proto_init()
	md_MsgFulfilKeyRequestResponse = File_zrchain_treasury_tx_proto.Messages().ByName("MsgFulfilKeyRequestResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgFulfilKeyRequestResponse)(nil)

type fastReflection_MsgFulfilKeyRequestResponse MsgFulfilKeyRequestResponse

func (x *MsgFulfilKeyRequestResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgFulfilKeyRequestResponse)(x)
}

func (x *MsgFulfilKeyRequestResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_treasury_tx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgFulfilKeyRequestResponse_messageType fastReflection_MsgFulfilKeyRequestResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgFulfilKeyRequestResponse_messageType{}

type fastReflection_MsgFulfilKeyRequestResponse_messageType struct{}

func (x fastReflection_MsgFulfilKeyRequestResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgFulfilKeyRequestResponse)(nil)
}
func (x fastReflection_MsgFulfilKeyRequestResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgFulfilKeyRequestResponse)
}
func (x fastReflection_MsgFulfilKeyRequestResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgFulfilKeyRequestResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgFulfilKeyRequestResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgFulfilKeyRequestResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgFulfilKeyRequestResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgFulfilKeyRequestResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgFulfilKeyRequestResponse) New() protoreflect.Message {
	return new(fastReflection_MsgFulfilKeyRequestResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgFulfilKeyRequestResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgFulfilKeyRequestResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgFulfilKeyRequestResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgFulfilKeyRequestResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilKeyRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilKeyRequestResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFulfilKeyRequestResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilKeyRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilKeyRequestResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgFulfilKeyRequestResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilKeyRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilKeyRequestResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFulfilKeyRequestResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilKeyRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilKeyRequestResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFulfilKeyRequestResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilKeyRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilKeyRequestResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgFulfilKeyRequestResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilKeyRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilKeyRequestResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgFulfilKeyRequestResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.treasury.MsgFulfilKeyRequestResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgFulfilKeyRequestResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFulfilKeyRequestResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgFulfilKeyRequestResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgFulfilKeyRequestResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgFulfilKeyRequestResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgFulfilKeyRequestResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgFulfilKeyRequestResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgFulfilKeyRequestResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgFulfilKeyRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgNewSignatureRequest_2_list)(nil)

type _MsgNewSignatureRequest_2_list struct {
	list *[]uint64
}

func (x *_MsgNewSignatureRequest_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgNewSignatureRequest_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfUint64((*x.list)[i])
}

func (x *_MsgNewSignatureRequest_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgNewSignatureRequest_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgNewSignatureRequest_2_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgNewSignatureRequest at list field KeyIds as it is not of Message kind"))
}

func (x *_MsgNewSignatureRequest_2_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgNewSignatureRequest_2_list) NewElement() protoreflect.Value {
	v := uint64(0)
	return protoreflect.ValueOfUint64(v)
}

func (x *_MsgNewSignatureRequest_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgNewSignatureRequest                             protoreflect.MessageDescriptor
	fd_MsgNewSignatureRequest_creator                     protoreflect.FieldDescriptor
	fd_MsgNewSignatureRequest_key_ids                     protoreflect.FieldDescriptor
	fd_MsgNewSignatureRequest_data_for_signing            protoreflect.FieldDescriptor
	fd_MsgNewSignatureRequest_btl                         protoreflect.FieldDescriptor
	fd_MsgNewSignatureRequest_cache_id                    protoreflect.FieldDescriptor
	fd_MsgNewSignatureRequest_verify_signing_data         protoreflect.FieldDescriptor
	fd_MsgNewSignatureRequest_verify_signing_data_version protoreflect.FieldDescriptor
)

func init() {
	file_zrchain_treasury_tx_proto_init()
	md_MsgNewSignatureRequest = File_zrchain_treasury_tx_proto.Messages().ByName("MsgNewSignatureRequest")
	fd_MsgNewSignatureRequest_creator = md_MsgNewSignatureRequest.Fields().ByName("creator")
	fd_MsgNewSignatureRequest_key_ids = md_MsgNewSignatureRequest.Fields().ByName("key_ids")
	fd_MsgNewSignatureRequest_data_for_signing = md_MsgNewSignatureRequest.Fields().ByName("data_for_signing")
	fd_MsgNewSignatureRequest_btl = md_MsgNewSignatureRequest.Fields().ByName("btl")
	fd_MsgNewSignatureRequest_cache_id = md_MsgNewSignatureRequest.Fields().ByName("cache_id")
	fd_MsgNewSignatureRequest_verify_signing_data = md_MsgNewSignatureRequest.Fields().ByName("verify_signing_data")
	fd_MsgNewSignatureRequest_verify_signing_data_version = md_MsgNewSignatureRequest.Fields().ByName("verify_signing_data_version")
}

var _ protoreflect.Message = (*fastReflection_MsgNewSignatureRequest)(nil)

type fastReflection_MsgNewSignatureRequest MsgNewSignatureRequest

func (x *MsgNewSignatureRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgNewSignatureRequest)(x)
}

func (x *MsgNewSignatureRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_treasury_tx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgNewSignatureRequest_messageType fastReflection_MsgNewSignatureRequest_messageType
var _ protoreflect.MessageType = fastReflection_MsgNewSignatureRequest_messageType{}

type fastReflection_MsgNewSignatureRequest_messageType struct{}

func (x fastReflection_MsgNewSignatureRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgNewSignatureRequest)(nil)
}
func (x fastReflection_MsgNewSignatureRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgNewSignatureRequest)
}
func (x fastReflection_MsgNewSignatureRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNewSignatureRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgNewSignatureRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNewSignatureRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgNewSignatureRequest) Type() protoreflect.MessageType {
	return _fastReflection_MsgNewSignatureRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgNewSignatureRequest) New() protoreflect.Message {
	return new(fastReflection_MsgNewSignatureRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgNewSignatureRequest) Interface() protoreflect.ProtoMessage {
	return (*MsgNewSignatureRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgNewSignatureRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgNewSignatureRequest_creator, value) {
			return
		}
	}
	if len(x.KeyIds) != 0 {
		value := protoreflect.ValueOfList(&_MsgNewSignatureRequest_2_list{list: &x.KeyIds})
		if !f(fd_MsgNewSignatureRequest_key_ids, value) {
			return
		}
	}
	if x.DataForSigning != "" {
		value := protoreflect.ValueOfString(x.DataForSigning)
		if !f(fd_MsgNewSignatureRequest_data_for_signing, value) {
			return
		}
	}
	if x.Btl != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Btl)
		if !f(fd_MsgNewSignatureRequest_btl, value) {
			return
		}
	}
	if len(x.CacheId) != 0 {
		value := protoreflect.ValueOfBytes(x.CacheId)
		if !f(fd_MsgNewSignatureRequest_cache_id, value) {
			return
		}
	}
	if len(x.VerifySigningData) != 0 {
		value := protoreflect.ValueOfBytes(x.VerifySigningData)
		if !f(fd_MsgNewSignatureRequest_verify_signing_data, value) {
			return
		}
	}
	if x.VerifySigningDataVersion != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.VerifySigningDataVersion))
		if !f(fd_MsgNewSignatureRequest_verify_signing_data_version, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgNewSignatureRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewSignatureRequest.creator":
		return x.Creator != ""
	case "zrchain.treasury.MsgNewSignatureRequest.key_ids":
		return len(x.KeyIds) != 0
	case "zrchain.treasury.MsgNewSignatureRequest.data_for_signing":
		return x.DataForSigning != ""
	case "zrchain.treasury.MsgNewSignatureRequest.btl":
		return x.Btl != uint64(0)
	case "zrchain.treasury.MsgNewSignatureRequest.cache_id":
		return len(x.CacheId) != 0
	case "zrchain.treasury.MsgNewSignatureRequest.verify_signing_data":
		return len(x.VerifySigningData) != 0
	case "zrchain.treasury.MsgNewSignatureRequest.verify_signing_data_version":
		return x.VerifySigningDataVersion != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewSignatureRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewSignatureRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewSignatureRequest.creator":
		x.Creator = ""
	case "zrchain.treasury.MsgNewSignatureRequest.key_ids":
		x.KeyIds = nil
	case "zrchain.treasury.MsgNewSignatureRequest.data_for_signing":
		x.DataForSigning = ""
	case "zrchain.treasury.MsgNewSignatureRequest.btl":
		x.Btl = uint64(0)
	case "zrchain.treasury.MsgNewSignatureRequest.cache_id":
		x.CacheId = nil
	case "zrchain.treasury.MsgNewSignatureRequest.verify_signing_data":
		x.VerifySigningData = nil
	case "zrchain.treasury.MsgNewSignatureRequest.verify_signing_data_version":
		x.VerifySigningDataVersion = 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewSignatureRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgNewSignatureRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "zrchain.treasury.MsgNewSignatureRequest.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "zrchain.treasury.MsgNewSignatureRequest.key_ids":
		if len(x.KeyIds) == 0 {
			return protoreflect.ValueOfList(&_MsgNewSignatureRequest_2_list{})
		}
		listValue := &_MsgNewSignatureRequest_2_list{list: &x.KeyIds}
		return protoreflect.ValueOfList(listValue)
	case "zrchain.treasury.MsgNewSignatureRequest.data_for_signing":
		value := x.DataForSigning
		return protoreflect.ValueOfString(value)
	case "zrchain.treasury.MsgNewSignatureRequest.btl":
		value := x.Btl
		return protoreflect.ValueOfUint64(value)
	case "zrchain.treasury.MsgNewSignatureRequest.cache_id":
		value := x.CacheId
		return protoreflect.ValueOfBytes(value)
	case "zrchain.treasury.MsgNewSignatureRequest.verify_signing_data":
		value := x.VerifySigningData
		return protoreflect.ValueOfBytes(value)
	case "zrchain.treasury.MsgNewSignatureRequest.verify_signing_data_version":
		value := x.VerifySigningDataVersion
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewSignatureRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewSignatureRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewSignatureRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewSignatureRequest.creator":
		x.Creator = value.Interface().(string)
	case "zrchain.treasury.MsgNewSignatureRequest.key_ids":
		lv := value.List()
		clv := lv.(*_MsgNewSignatureRequest_2_list)
		x.KeyIds = *clv.list
	case "zrchain.treasury.MsgNewSignatureRequest.data_for_signing":
		x.DataForSigning = value.Interface().(string)
	case "zrchain.treasury.MsgNewSignatureRequest.btl":
		x.Btl = value.Uint()
	case "zrchain.treasury.MsgNewSignatureRequest.cache_id":
		x.CacheId = value.Bytes()
	case "zrchain.treasury.MsgNewSignatureRequest.verify_signing_data":
		x.VerifySigningData = value.Bytes()
	case "zrchain.treasury.MsgNewSignatureRequest.verify_signing_data_version":
		x.VerifySigningDataVersion = (VerificationVersion)(value.Enum())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewSignatureRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewSignatureRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewSignatureRequest.key_ids":
		if x.KeyIds == nil {
			x.KeyIds = []uint64{}
		}
		value := &_MsgNewSignatureRequest_2_list{list: &x.KeyIds}
		return protoreflect.ValueOfList(value)
	case "zrchain.treasury.MsgNewSignatureRequest.creator":
		panic(fmt.Errorf("field creator of message zrchain.treasury.MsgNewSignatureRequest is not mutable"))
	case "zrchain.treasury.MsgNewSignatureRequest.data_for_signing":
		panic(fmt.Errorf("field data_for_signing of message zrchain.treasury.MsgNewSignatureRequest is not mutable"))
	case "zrchain.treasury.MsgNewSignatureRequest.btl":
		panic(fmt.Errorf("field btl of message zrchain.treasury.MsgNewSignatureRequest is not mutable"))
	case "zrchain.treasury.MsgNewSignatureRequest.cache_id":
		panic(fmt.Errorf("field cache_id of message zrchain.treasury.MsgNewSignatureRequest is not mutable"))
	case "zrchain.treasury.MsgNewSignatureRequest.verify_signing_data":
		panic(fmt.Errorf("field verify_signing_data of message zrchain.treasury.MsgNewSignatureRequest is not mutable"))
	case "zrchain.treasury.MsgNewSignatureRequest.verify_signing_data_version":
		panic(fmt.Errorf("field verify_signing_data_version of message zrchain.treasury.MsgNewSignatureRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewSignatureRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgNewSignatureRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewSignatureRequest.creator":
		return protoreflect.ValueOfString("")
	case "zrchain.treasury.MsgNewSignatureRequest.key_ids":
		list := []uint64{}
		return protoreflect.ValueOfList(&_MsgNewSignatureRequest_2_list{list: &list})
	case "zrchain.treasury.MsgNewSignatureRequest.data_for_signing":
		return protoreflect.ValueOfString("")
	case "zrchain.treasury.MsgNewSignatureRequest.btl":
		return protoreflect.ValueOfUint64(uint64(0))
	case "zrchain.treasury.MsgNewSignatureRequest.cache_id":
		return protoreflect.ValueOfBytes(nil)
	case "zrchain.treasury.MsgNewSignatureRequest.verify_signing_data":
		return protoreflect.ValueOfBytes(nil)
	case "zrchain.treasury.MsgNewSignatureRequest.verify_signing_data_version":
		return protoreflect.ValueOfEnum(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewSignatureRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgNewSignatureRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.treasury.MsgNewSignatureRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgNewSignatureRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewSignatureRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgNewSignatureRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgNewSignatureRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgNewSignatureRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.KeyIds) > 0 {
			l = 0
			for _, e := range x.KeyIds {
				l += runtime.Sov(uint64(e))
			}
			n += 1 + runtime.Sov(uint64(l)) + l
		}
		l = len(x.DataForSigning)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Btl != 0 {
			n += 1 + runtime.Sov(uint64(x.Btl))
		}
		l = len(x.CacheId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.VerifySigningData)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.VerifySigningDataVersion != 0 {
			n += 1 + runtime.Sov(uint64(x.VerifySigningDataVersion))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgNewSignatureRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.VerifySigningDataVersion != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.VerifySigningDataVersion))
			i--
			dAtA[i] = 0x38
		}
		if len(x.VerifySigningData) > 0 {
			i -= len(x.VerifySigningData)
			copy(dAtA[i:], x.VerifySigningData)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.VerifySigningData)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.CacheId) > 0 {
			i -= len(x.CacheId)
			copy(dAtA[i:], x.CacheId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CacheId)))
			i--
			dAtA[i] = 0x2a
		}
		if x.Btl != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Btl))
			i--
			dAtA[i] = 0x20
		}
		if len(x.DataForSigning) > 0 {
			i -= len(x.DataForSigning)
			copy(dAtA[i:], x.DataForSigning)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DataForSigning)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.KeyIds) > 0 {
			var pksize2 int
			for _, num := range x.KeyIds {
				pksize2 += runtime.Sov(uint64(num))
			}
			i -= pksize2
			j1 := i
			for _, num := range x.KeyIds {
				for num >= 1<<7 {
					dAtA[j1] = uint8(uint64(num)&0x7f | 0x80)
					num >>= 7
					j1++
				}
				dAtA[j1] = uint8(num)
				j1++
			}
			i = runtime.EncodeVarint(dAtA, i, uint64(pksize2))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgNewSignatureRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNewSignatureRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNewSignatureRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType == 0 {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					x.KeyIds = append(x.KeyIds, v)
				} else if wireType == 2 {
					var packedLen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						packedLen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if packedLen < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					postIndex := iNdEx + packedLen
					if postIndex < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					if postIndex > l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					var elementCount int
					var count int
					for _, integer := range dAtA[iNdEx:postIndex] {
						if integer < 128 {
							count++
						}
					}
					elementCount = count
					if elementCount != 0 && len(x.KeyIds) == 0 {
						x.KeyIds = make([]uint64, 0, elementCount)
					}
					for iNdEx < postIndex {
						var v uint64
						for shift := uint(0); ; shift += 7 {
							if shift >= 64 {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
							}
							if iNdEx >= l {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
							}
							b := dAtA[iNdEx]
							iNdEx++
							v |= uint64(b&0x7F) << shift
							if b < 0x80 {
								break
							}
						}
						x.KeyIds = append(x.KeyIds, v)
					}
				} else {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KeyIds", wireType)
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DataForSigning", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DataForSigning = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Btl", wireType)
				}
				x.Btl = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Btl |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CacheId", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CacheId = append(x.CacheId[:0], dAtA[iNdEx:postIndex]...)
				if x.CacheId == nil {
					x.CacheId = []byte{}
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VerifySigningData", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.VerifySigningData = append(x.VerifySigningData[:0], dAtA[iNdEx:postIndex]...)
				if x.VerifySigningData == nil {
					x.VerifySigningData = []byte{}
				}
				iNdEx = postIndex
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VerifySigningDataVersion", wireType)
				}
				x.VerifySigningDataVersion = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.VerifySigningDataVersion |= VerificationVersion(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgNewSignatureRequestResponse            protoreflect.MessageDescriptor
	fd_MsgNewSignatureRequestResponse_sig_req_id protoreflect.FieldDescriptor
)

func init() {
	file_zrchain_treasury_tx_proto_init()
	md_MsgNewSignatureRequestResponse = File_zrchain_treasury_tx_proto.Messages().ByName("MsgNewSignatureRequestResponse")
	fd_MsgNewSignatureRequestResponse_sig_req_id = md_MsgNewSignatureRequestResponse.Fields().ByName("sig_req_id")
}

var _ protoreflect.Message = (*fastReflection_MsgNewSignatureRequestResponse)(nil)

type fastReflection_MsgNewSignatureRequestResponse MsgNewSignatureRequestResponse

func (x *MsgNewSignatureRequestResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgNewSignatureRequestResponse)(x)
}

func (x *MsgNewSignatureRequestResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_treasury_tx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgNewSignatureRequestResponse_messageType fastReflection_MsgNewSignatureRequestResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgNewSignatureRequestResponse_messageType{}

type fastReflection_MsgNewSignatureRequestResponse_messageType struct{}

func (x fastReflection_MsgNewSignatureRequestResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgNewSignatureRequestResponse)(nil)
}
func (x fastReflection_MsgNewSignatureRequestResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgNewSignatureRequestResponse)
}
func (x fastReflection_MsgNewSignatureRequestResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNewSignatureRequestResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgNewSignatureRequestResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNewSignatureRequestResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgNewSignatureRequestResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgNewSignatureRequestResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgNewSignatureRequestResponse) New() protoreflect.Message {
	return new(fastReflection_MsgNewSignatureRequestResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgNewSignatureRequestResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgNewSignatureRequestResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgNewSignatureRequestResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.SigReqId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.SigReqId)
		if !f(fd_MsgNewSignatureRequestResponse_sig_req_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgNewSignatureRequestResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewSignatureRequestResponse.sig_req_id":
		return x.SigReqId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewSignatureRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewSignatureRequestResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewSignatureRequestResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewSignatureRequestResponse.sig_req_id":
		x.SigReqId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewSignatureRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewSignatureRequestResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgNewSignatureRequestResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "zrchain.treasury.MsgNewSignatureRequestResponse.sig_req_id":
		value := x.SigReqId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewSignatureRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewSignatureRequestResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewSignatureRequestResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewSignatureRequestResponse.sig_req_id":
		x.SigReqId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewSignatureRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewSignatureRequestResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewSignatureRequestResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewSignatureRequestResponse.sig_req_id":
		panic(fmt.Errorf("field sig_req_id of message zrchain.treasury.MsgNewSignatureRequestResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewSignatureRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewSignatureRequestResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgNewSignatureRequestResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewSignatureRequestResponse.sig_req_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewSignatureRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewSignatureRequestResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgNewSignatureRequestResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.treasury.MsgNewSignatureRequestResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgNewSignatureRequestResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewSignatureRequestResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgNewSignatureRequestResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgNewSignatureRequestResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgNewSignatureRequestResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.SigReqId != 0 {
			n += 1 + runtime.Sov(uint64(x.SigReqId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgNewSignatureRequestResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.SigReqId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SigReqId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgNewSignatureRequestResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNewSignatureRequestResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNewSignatureRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SigReqId", wireType)
				}
				x.SigReqId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SigReqId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgFulfilSignatureRequest                         protoreflect.MessageDescriptor
	fd_MsgFulfilSignatureRequest_creator                 protoreflect.FieldDescriptor
	fd_MsgFulfilSignatureRequest_request_id              protoreflect.FieldDescriptor
	fd_MsgFulfilSignatureRequest_status                  protoreflect.FieldDescriptor
	fd_MsgFulfilSignatureRequest_keyring_party_signature protoreflect.FieldDescriptor
	fd_MsgFulfilSignatureRequest_signed_data             protoreflect.FieldDescriptor
	fd_MsgFulfilSignatureRequest_reject_reason           protoreflect.FieldDescriptor
)

func init() {
	file_zrchain_treasury_tx_proto_init()
	md_MsgFulfilSignatureRequest = File_zrchain_treasury_tx_proto.Messages().ByName("MsgFulfilSignatureRequest")
	fd_MsgFulfilSignatureRequest_creator = md_MsgFulfilSignatureRequest.Fields().ByName("creator")
	fd_MsgFulfilSignatureRequest_request_id = md_MsgFulfilSignatureRequest.Fields().ByName("request_id")
	fd_MsgFulfilSignatureRequest_status = md_MsgFulfilSignatureRequest.Fields().ByName("status")
	fd_MsgFulfilSignatureRequest_keyring_party_signature = md_MsgFulfilSignatureRequest.Fields().ByName("keyring_party_signature")
	fd_MsgFulfilSignatureRequest_signed_data = md_MsgFulfilSignatureRequest.Fields().ByName("signed_data")
	fd_MsgFulfilSignatureRequest_reject_reason = md_MsgFulfilSignatureRequest.Fields().ByName("reject_reason")
}

var _ protoreflect.Message = (*fastReflection_MsgFulfilSignatureRequest)(nil)

type fastReflection_MsgFulfilSignatureRequest MsgFulfilSignatureRequest

func (x *MsgFulfilSignatureRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgFulfilSignatureRequest)(x)
}

func (x *MsgFulfilSignatureRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_treasury_tx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgFulfilSignatureRequest_messageType fastReflection_MsgFulfilSignatureRequest_messageType
var _ protoreflect.MessageType = fastReflection_MsgFulfilSignatureRequest_messageType{}

type fastReflection_MsgFulfilSignatureRequest_messageType struct{}

func (x fastReflection_MsgFulfilSignatureRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgFulfilSignatureRequest)(nil)
}
func (x fastReflection_MsgFulfilSignatureRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgFulfilSignatureRequest)
}
func (x fastReflection_MsgFulfilSignatureRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgFulfilSignatureRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgFulfilSignatureRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgFulfilSignatureRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgFulfilSignatureRequest) Type() protoreflect.MessageType {
	return _fastReflection_MsgFulfilSignatureRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgFulfilSignatureRequest) New() protoreflect.Message {
	return new(fastReflection_MsgFulfilSignatureRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgFulfilSignatureRequest) Interface() protoreflect.ProtoMessage {
	return (*MsgFulfilSignatureRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgFulfilSignatureRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgFulfilSignatureRequest_creator, value) {
			return
		}
	}
	if x.RequestId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.RequestId)
		if !f(fd_MsgFulfilSignatureRequest_request_id, value) {
			return
		}
	}
	if x.Status != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Status))
		if !f(fd_MsgFulfilSignatureRequest_status, value) {
			return
		}
	}
	if len(x.KeyringPartySignature) != 0 {
		value := protoreflect.ValueOfBytes(x.KeyringPartySignature)
		if !f(fd_MsgFulfilSignatureRequest_keyring_party_signature, value) {
			return
		}
	}
	if len(x.SignedData) != 0 {
		value := protoreflect.ValueOfBytes(x.SignedData)
		if !f(fd_MsgFulfilSignatureRequest_signed_data, value) {
			return
		}
	}
	if x.RejectReason != "" {
		value := protoreflect.ValueOfString(x.RejectReason)
		if !f(fd_MsgFulfilSignatureRequest_reject_reason, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgFulfilSignatureRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "zrchain.treasury.MsgFulfilSignatureRequest.creator":
		return x.Creator != ""
	case "zrchain.treasury.MsgFulfilSignatureRequest.request_id":
		return x.RequestId != uint64(0)
	case "zrchain.treasury.MsgFulfilSignatureRequest.status":
		return x.Status != 0
	case "zrchain.treasury.MsgFulfilSignatureRequest.keyring_party_signature":
		return len(x.KeyringPartySignature) != 0
	case "zrchain.treasury.MsgFulfilSignatureRequest.signed_data":
		return len(x.SignedData) != 0
	case "zrchain.treasury.MsgFulfilSignatureRequest.reject_reason":
		return x.RejectReason != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilSignatureRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFulfilSignatureRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgFulfilSignatureRequest.creator":
		x.Creator = ""
	case "zrchain.treasury.MsgFulfilSignatureRequest.request_id":
		x.RequestId = uint64(0)
	case "zrchain.treasury.MsgFulfilSignatureRequest.status":
		x.Status = 0
	case "zrchain.treasury.MsgFulfilSignatureRequest.keyring_party_signature":
		x.KeyringPartySignature = nil
	case "zrchain.treasury.MsgFulfilSignatureRequest.signed_data":
		x.SignedData = nil
	case "zrchain.treasury.MsgFulfilSignatureRequest.reject_reason":
		x.RejectReason = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilSignatureRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgFulfilSignatureRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "zrchain.treasury.MsgFulfilSignatureRequest.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "zrchain.treasury.MsgFulfilSignatureRequest.request_id":
		value := x.RequestId
		return protoreflect.ValueOfUint64(value)
	case "zrchain.treasury.MsgFulfilSignatureRequest.status":
		value := x.Status
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "zrchain.treasury.MsgFulfilSignatureRequest.keyring_party_signature":
		value := x.KeyringPartySignature
		return protoreflect.ValueOfBytes(value)
	case "zrchain.treasury.MsgFulfilSignatureRequest.signed_data":
		value := x.SignedData
		return protoreflect.ValueOfBytes(value)
	case "zrchain.treasury.MsgFulfilSignatureRequest.reject_reason":
		value := x.RejectReason
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilSignatureRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilSignatureRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFulfilSignatureRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgFulfilSignatureRequest.creator":
		x.Creator = value.Interface().(string)
	case "zrchain.treasury.MsgFulfilSignatureRequest.request_id":
		x.RequestId = value.Uint()
	case "zrchain.treasury.MsgFulfilSignatureRequest.status":
		x.Status = (SignRequestStatus)(value.Enum())
	case "zrchain.treasury.MsgFulfilSignatureRequest.keyring_party_signature":
		x.KeyringPartySignature = value.Bytes()
	case "zrchain.treasury.MsgFulfilSignatureRequest.signed_data":
		x.SignedData = value.Bytes()
	case "zrchain.treasury.MsgFulfilSignatureRequest.reject_reason":
		x.RejectReason = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilSignatureRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFulfilSignatureRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgFulfilSignatureRequest.creator":
		panic(fmt.Errorf("field creator of message zrchain.treasury.MsgFulfilSignatureRequest is not mutable"))
	case "zrchain.treasury.MsgFulfilSignatureRequest.request_id":
		panic(fmt.Errorf("field request_id of message zrchain.treasury.MsgFulfilSignatureRequest is not mutable"))
	case "zrchain.treasury.MsgFulfilSignatureRequest.status":
		panic(fmt.Errorf("field status of message zrchain.treasury.MsgFulfilSignatureRequest is not mutable"))
	case "zrchain.treasury.MsgFulfilSignatureRequest.keyring_party_signature":
		panic(fmt.Errorf("field keyring_party_signature of message zrchain.treasury.MsgFulfilSignatureRequest is not mutable"))
	case "zrchain.treasury.MsgFulfilSignatureRequest.signed_data":
		panic(fmt.Errorf("field signed_data of message zrchain.treasury.MsgFulfilSignatureRequest is not mutable"))
	case "zrchain.treasury.MsgFulfilSignatureRequest.reject_reason":
		panic(fmt.Errorf("field reject_reason of message zrchain.treasury.MsgFulfilSignatureRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilSignatureRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgFulfilSignatureRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgFulfilSignatureRequest.creator":
		return protoreflect.ValueOfString("")
	case "zrchain.treasury.MsgFulfilSignatureRequest.request_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "zrchain.treasury.MsgFulfilSignatureRequest.status":
		return protoreflect.ValueOfEnum(0)
	case "zrchain.treasury.MsgFulfilSignatureRequest.keyring_party_signature":
		return protoreflect.ValueOfBytes(nil)
	case "zrchain.treasury.MsgFulfilSignatureRequest.signed_data":
		return protoreflect.ValueOfBytes(nil)
	case "zrchain.treasury.MsgFulfilSignatureRequest.reject_reason":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilSignatureRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgFulfilSignatureRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.treasury.MsgFulfilSignatureRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgFulfilSignatureRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFulfilSignatureRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgFulfilSignatureRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgFulfilSignatureRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgFulfilSignatureRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.RequestId != 0 {
			n += 1 + runtime.Sov(uint64(x.RequestId))
		}
		if x.Status != 0 {
			n += 1 + runtime.Sov(uint64(x.Status))
		}
		l = len(x.KeyringPartySignature)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.SignedData)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RejectReason)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgFulfilSignatureRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.RejectReason) > 0 {
			i -= len(x.RejectReason)
			copy(dAtA[i:], x.RejectReason)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RejectReason)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.SignedData) > 0 {
			i -= len(x.SignedData)
			copy(dAtA[i:], x.SignedData)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SignedData)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.KeyringPartySignature) > 0 {
			i -= len(x.KeyringPartySignature)
			copy(dAtA[i:], x.KeyringPartySignature)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.KeyringPartySignature)))
			i--
			dAtA[i] = 0x22
		}
		if x.Status != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Status))
			i--
			dAtA[i] = 0x18
		}
		if x.RequestId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RequestId))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgFulfilSignatureRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgFulfilSignatureRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgFulfilSignatureRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RequestId", wireType)
				}
				x.RequestId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RequestId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				x.Status = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Status |= SignRequestStatus(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KeyringPartySignature", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.KeyringPartySignature = append(x.KeyringPartySignature[:0], dAtA[iNdEx:postIndex]...)
				if x.KeyringPartySignature == nil {
					x.KeyringPartySignature = []byte{}
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SignedData", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SignedData = append(x.SignedData[:0], dAtA[iNdEx:postIndex]...)
				if x.SignedData == nil {
					x.SignedData = []byte{}
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RejectReason", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RejectReason = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgFulfilSignatureRequestResponse protoreflect.MessageDescriptor
)

func init() {
	file_zrchain_treasury_tx_proto_init()
	md_MsgFulfilSignatureRequestResponse = File_zrchain_treasury_tx_proto.Messages().ByName("MsgFulfilSignatureRequestResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgFulfilSignatureRequestResponse)(nil)

type fastReflection_MsgFulfilSignatureRequestResponse MsgFulfilSignatureRequestResponse

func (x *MsgFulfilSignatureRequestResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgFulfilSignatureRequestResponse)(x)
}

func (x *MsgFulfilSignatureRequestResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_treasury_tx_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgFulfilSignatureRequestResponse_messageType fastReflection_MsgFulfilSignatureRequestResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgFulfilSignatureRequestResponse_messageType{}

type fastReflection_MsgFulfilSignatureRequestResponse_messageType struct{}

func (x fastReflection_MsgFulfilSignatureRequestResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgFulfilSignatureRequestResponse)(nil)
}
func (x fastReflection_MsgFulfilSignatureRequestResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgFulfilSignatureRequestResponse)
}
func (x fastReflection_MsgFulfilSignatureRequestResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgFulfilSignatureRequestResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgFulfilSignatureRequestResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgFulfilSignatureRequestResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgFulfilSignatureRequestResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgFulfilSignatureRequestResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgFulfilSignatureRequestResponse) New() protoreflect.Message {
	return new(fastReflection_MsgFulfilSignatureRequestResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgFulfilSignatureRequestResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgFulfilSignatureRequestResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgFulfilSignatureRequestResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgFulfilSignatureRequestResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilSignatureRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilSignatureRequestResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFulfilSignatureRequestResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilSignatureRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilSignatureRequestResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgFulfilSignatureRequestResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilSignatureRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilSignatureRequestResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFulfilSignatureRequestResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilSignatureRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilSignatureRequestResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFulfilSignatureRequestResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilSignatureRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilSignatureRequestResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgFulfilSignatureRequestResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilSignatureRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilSignatureRequestResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgFulfilSignatureRequestResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.treasury.MsgFulfilSignatureRequestResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgFulfilSignatureRequestResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFulfilSignatureRequestResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgFulfilSignatureRequestResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgFulfilSignatureRequestResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgFulfilSignatureRequestResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgFulfilSignatureRequestResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgFulfilSignatureRequestResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgFulfilSignatureRequestResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgFulfilSignatureRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MetadataEthereum          protoreflect.MessageDescriptor
	fd_MetadataEthereum_chain_id protoreflect.FieldDescriptor
)

func init() {
	file_zrchain_treasury_tx_proto_init()
	md_MetadataEthereum = File_zrchain_treasury_tx_proto.Messages().ByName("MetadataEthereum")
	fd_MetadataEthereum_chain_id = md_MetadataEthereum.Fields().ByName("chain_id")
}

var _ protoreflect.Message = (*fastReflection_MetadataEthereum)(nil)

type fastReflection_MetadataEthereum MetadataEthereum

func (x *MetadataEthereum) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MetadataEthereum)(x)
}

func (x *MetadataEthereum) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_treasury_tx_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MetadataEthereum_messageType fastReflection_MetadataEthereum_messageType
var _ protoreflect.MessageType = fastReflection_MetadataEthereum_messageType{}

type fastReflection_MetadataEthereum_messageType struct{}

func (x fastReflection_MetadataEthereum_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MetadataEthereum)(nil)
}
func (x fastReflection_MetadataEthereum_messageType) New() protoreflect.Message {
	return new(fastReflection_MetadataEthereum)
}
func (x fastReflection_MetadataEthereum_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MetadataEthereum
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MetadataEthereum) Descriptor() protoreflect.MessageDescriptor {
	return md_MetadataEthereum
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MetadataEthereum) Type() protoreflect.MessageType {
	return _fastReflection_MetadataEthereum_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MetadataEthereum) New() protoreflect.Message {
	return new(fastReflection_MetadataEthereum)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MetadataEthereum) Interface() protoreflect.ProtoMessage {
	return (*MetadataEthereum)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MetadataEthereum) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ChainId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ChainId)
		if !f(fd_MetadataEthereum_chain_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MetadataEthereum) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "zrchain.treasury.MetadataEthereum.chain_id":
		return x.ChainId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MetadataEthereum"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MetadataEthereum does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MetadataEthereum) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "zrchain.treasury.MetadataEthereum.chain_id":
		x.ChainId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MetadataEthereum"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MetadataEthereum does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MetadataEthereum) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "zrchain.treasury.MetadataEthereum.chain_id":
		value := x.ChainId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MetadataEthereum"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MetadataEthereum does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MetadataEthereum) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "zrchain.treasury.MetadataEthereum.chain_id":
		x.ChainId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MetadataEthereum"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MetadataEthereum does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MetadataEthereum) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MetadataEthereum.chain_id":
		panic(fmt.Errorf("field chain_id of message zrchain.treasury.MetadataEthereum is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MetadataEthereum"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MetadataEthereum does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MetadataEthereum) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MetadataEthereum.chain_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MetadataEthereum"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MetadataEthereum does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MetadataEthereum) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.treasury.MetadataEthereum", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MetadataEthereum) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MetadataEthereum) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MetadataEthereum) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MetadataEthereum) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MetadataEthereum)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ChainId != 0 {
			n += 1 + runtime.Sov(uint64(x.ChainId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MetadataEthereum)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.ChainId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ChainId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MetadataEthereum)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MetadataEthereum: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MetadataEthereum: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
				}
				x.ChainId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ChainId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MetadataSolana             protoreflect.MessageDescriptor
	fd_MetadataSolana_network     protoreflect.FieldDescriptor
	fd_MetadataSolana_mintAddress protoreflect.FieldDescriptor
)

func init() {
	file_zrchain_treasury_tx_proto_init()
	md_MetadataSolana = File_zrchain_treasury_tx_proto.Messages().ByName("MetadataSolana")
	fd_MetadataSolana_network = md_MetadataSolana.Fields().ByName("network")
	fd_MetadataSolana_mintAddress = md_MetadataSolana.Fields().ByName("mintAddress")
}

var _ protoreflect.Message = (*fastReflection_MetadataSolana)(nil)

type fastReflection_MetadataSolana MetadataSolana

func (x *MetadataSolana) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MetadataSolana)(x)
}

func (x *MetadataSolana) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_treasury_tx_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MetadataSolana_messageType fastReflection_MetadataSolana_messageType
var _ protoreflect.MessageType = fastReflection_MetadataSolana_messageType{}

type fastReflection_MetadataSolana_messageType struct{}

func (x fastReflection_MetadataSolana_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MetadataSolana)(nil)
}
func (x fastReflection_MetadataSolana_messageType) New() protoreflect.Message {
	return new(fastReflection_MetadataSolana)
}
func (x fastReflection_MetadataSolana_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MetadataSolana
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MetadataSolana) Descriptor() protoreflect.MessageDescriptor {
	return md_MetadataSolana
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MetadataSolana) Type() protoreflect.MessageType {
	return _fastReflection_MetadataSolana_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MetadataSolana) New() protoreflect.Message {
	return new(fastReflection_MetadataSolana)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MetadataSolana) Interface() protoreflect.ProtoMessage {
	return (*MetadataSolana)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MetadataSolana) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Network != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Network))
		if !f(fd_MetadataSolana_network, value) {
			return
		}
	}
	if x.MintAddress != "" {
		value := protoreflect.ValueOfString(x.MintAddress)
		if !f(fd_MetadataSolana_mintAddress, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MetadataSolana) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "zrchain.treasury.MetadataSolana.network":
		return x.Network != 0
	case "zrchain.treasury.MetadataSolana.mintAddress":
		return x.MintAddress != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MetadataSolana"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MetadataSolana does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MetadataSolana) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "zrchain.treasury.MetadataSolana.network":
		x.Network = 0
	case "zrchain.treasury.MetadataSolana.mintAddress":
		x.MintAddress = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MetadataSolana"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MetadataSolana does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MetadataSolana) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "zrchain.treasury.MetadataSolana.network":
		value := x.Network
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "zrchain.treasury.MetadataSolana.mintAddress":
		value := x.MintAddress
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MetadataSolana"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MetadataSolana does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MetadataSolana) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "zrchain.treasury.MetadataSolana.network":
		x.Network = (SolanaNetworkType)(value.Enum())
	case "zrchain.treasury.MetadataSolana.mintAddress":
		x.MintAddress = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MetadataSolana"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MetadataSolana does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MetadataSolana) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MetadataSolana.network":
		panic(fmt.Errorf("field network of message zrchain.treasury.MetadataSolana is not mutable"))
	case "zrchain.treasury.MetadataSolana.mintAddress":
		panic(fmt.Errorf("field mintAddress of message zrchain.treasury.MetadataSolana is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MetadataSolana"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MetadataSolana does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MetadataSolana) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MetadataSolana.network":
		return protoreflect.ValueOfEnum(0)
	case "zrchain.treasury.MetadataSolana.mintAddress":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MetadataSolana"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MetadataSolana does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MetadataSolana) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.treasury.MetadataSolana", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MetadataSolana) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MetadataSolana) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MetadataSolana) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MetadataSolana) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MetadataSolana)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Network != 0 {
			n += 1 + runtime.Sov(uint64(x.Network))
		}
		l = len(x.MintAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MetadataSolana)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.MintAddress) > 0 {
			i -= len(x.MintAddress)
			copy(dAtA[i:], x.MintAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MintAddress)))
			i--
			dAtA[i] = 0x12
		}
		if x.Network != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Network))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MetadataSolana)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MetadataSolana: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MetadataSolana: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Network", wireType)
				}
				x.Network = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Network |= SolanaNetworkType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MintAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MintAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgNewSignTransactionRequest                      protoreflect.MessageDescriptor
	fd_MsgNewSignTransactionRequest_creator              protoreflect.FieldDescriptor
	fd_MsgNewSignTransactionRequest_key_id               protoreflect.FieldDescriptor
	fd_MsgNewSignTransactionRequest_wallet_type          protoreflect.FieldDescriptor
	fd_MsgNewSignTransactionRequest_unsigned_transaction protoreflect.FieldDescriptor
	fd_MsgNewSignTransactionRequest_metadata             protoreflect.FieldDescriptor
	fd_MsgNewSignTransactionRequest_btl                  protoreflect.FieldDescriptor
	fd_MsgNewSignTransactionRequest_cache_id             protoreflect.FieldDescriptor
	fd_MsgNewSignTransactionRequest_no_broadcast         protoreflect.FieldDescriptor
)

func init() {
	file_zrchain_treasury_tx_proto_init()
	md_MsgNewSignTransactionRequest = File_zrchain_treasury_tx_proto.Messages().ByName("MsgNewSignTransactionRequest")
	fd_MsgNewSignTransactionRequest_creator = md_MsgNewSignTransactionRequest.Fields().ByName("creator")
	fd_MsgNewSignTransactionRequest_key_id = md_MsgNewSignTransactionRequest.Fields().ByName("key_id")
	fd_MsgNewSignTransactionRequest_wallet_type = md_MsgNewSignTransactionRequest.Fields().ByName("wallet_type")
	fd_MsgNewSignTransactionRequest_unsigned_transaction = md_MsgNewSignTransactionRequest.Fields().ByName("unsigned_transaction")
	fd_MsgNewSignTransactionRequest_metadata = md_MsgNewSignTransactionRequest.Fields().ByName("metadata")
	fd_MsgNewSignTransactionRequest_btl = md_MsgNewSignTransactionRequest.Fields().ByName("btl")
	fd_MsgNewSignTransactionRequest_cache_id = md_MsgNewSignTransactionRequest.Fields().ByName("cache_id")
	fd_MsgNewSignTransactionRequest_no_broadcast = md_MsgNewSignTransactionRequest.Fields().ByName("no_broadcast")
}

var _ protoreflect.Message = (*fastReflection_MsgNewSignTransactionRequest)(nil)

type fastReflection_MsgNewSignTransactionRequest MsgNewSignTransactionRequest

func (x *MsgNewSignTransactionRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgNewSignTransactionRequest)(x)
}

func (x *MsgNewSignTransactionRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_treasury_tx_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgNewSignTransactionRequest_messageType fastReflection_MsgNewSignTransactionRequest_messageType
var _ protoreflect.MessageType = fastReflection_MsgNewSignTransactionRequest_messageType{}

type fastReflection_MsgNewSignTransactionRequest_messageType struct{}

func (x fastReflection_MsgNewSignTransactionRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgNewSignTransactionRequest)(nil)
}
func (x fastReflection_MsgNewSignTransactionRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgNewSignTransactionRequest)
}
func (x fastReflection_MsgNewSignTransactionRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNewSignTransactionRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgNewSignTransactionRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNewSignTransactionRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgNewSignTransactionRequest) Type() protoreflect.MessageType {
	return _fastReflection_MsgNewSignTransactionRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgNewSignTransactionRequest) New() protoreflect.Message {
	return new(fastReflection_MsgNewSignTransactionRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgNewSignTransactionRequest) Interface() protoreflect.ProtoMessage {
	return (*MsgNewSignTransactionRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgNewSignTransactionRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgNewSignTransactionRequest_creator, value) {
			return
		}
	}
	if x.KeyId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.KeyId)
		if !f(fd_MsgNewSignTransactionRequest_key_id, value) {
			return
		}
	}
	if x.WalletType != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.WalletType))
		if !f(fd_MsgNewSignTransactionRequest_wallet_type, value) {
			return
		}
	}
	if len(x.UnsignedTransaction) != 0 {
		value := protoreflect.ValueOfBytes(x.UnsignedTransaction)
		if !f(fd_MsgNewSignTransactionRequest_unsigned_transaction, value) {
			return
		}
	}
	if x.Metadata != nil {
		value := protoreflect.ValueOfMessage(x.Metadata.ProtoReflect())
		if !f(fd_MsgNewSignTransactionRequest_metadata, value) {
			return
		}
	}
	if x.Btl != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Btl)
		if !f(fd_MsgNewSignTransactionRequest_btl, value) {
			return
		}
	}
	if len(x.CacheId) != 0 {
		value := protoreflect.ValueOfBytes(x.CacheId)
		if !f(fd_MsgNewSignTransactionRequest_cache_id, value) {
			return
		}
	}
	if x.NoBroadcast != false {
		value := protoreflect.ValueOfBool(x.NoBroadcast)
		if !f(fd_MsgNewSignTransactionRequest_no_broadcast, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgNewSignTransactionRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewSignTransactionRequest.creator":
		return x.Creator != ""
	case "zrchain.treasury.MsgNewSignTransactionRequest.key_id":
		return x.KeyId != uint64(0)
	case "zrchain.treasury.MsgNewSignTransactionRequest.wallet_type":
		return x.WalletType != 0
	case "zrchain.treasury.MsgNewSignTransactionRequest.unsigned_transaction":
		return len(x.UnsignedTransaction) != 0
	case "zrchain.treasury.MsgNewSignTransactionRequest.metadata":
		return x.Metadata != nil
	case "zrchain.treasury.MsgNewSignTransactionRequest.btl":
		return x.Btl != uint64(0)
	case "zrchain.treasury.MsgNewSignTransactionRequest.cache_id":
		return len(x.CacheId) != 0
	case "zrchain.treasury.MsgNewSignTransactionRequest.no_broadcast":
		return x.NoBroadcast != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewSignTransactionRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewSignTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewSignTransactionRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewSignTransactionRequest.creator":
		x.Creator = ""
	case "zrchain.treasury.MsgNewSignTransactionRequest.key_id":
		x.KeyId = uint64(0)
	case "zrchain.treasury.MsgNewSignTransactionRequest.wallet_type":
		x.WalletType = 0
	case "zrchain.treasury.MsgNewSignTransactionRequest.unsigned_transaction":
		x.UnsignedTransaction = nil
	case "zrchain.treasury.MsgNewSignTransactionRequest.metadata":
		x.Metadata = nil
	case "zrchain.treasury.MsgNewSignTransactionRequest.btl":
		x.Btl = uint64(0)
	case "zrchain.treasury.MsgNewSignTransactionRequest.cache_id":
		x.CacheId = nil
	case "zrchain.treasury.MsgNewSignTransactionRequest.no_broadcast":
		x.NoBroadcast = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewSignTransactionRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewSignTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgNewSignTransactionRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "zrchain.treasury.MsgNewSignTransactionRequest.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "zrchain.treasury.MsgNewSignTransactionRequest.key_id":
		value := x.KeyId
		return protoreflect.ValueOfUint64(value)
	case "zrchain.treasury.MsgNewSignTransactionRequest.wallet_type":
		value := x.WalletType
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "zrchain.treasury.MsgNewSignTransactionRequest.unsigned_transaction":
		value := x.UnsignedTransaction
		return protoreflect.ValueOfBytes(value)
	case "zrchain.treasury.MsgNewSignTransactionRequest.metadata":
		value := x.Metadata
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "zrchain.treasury.MsgNewSignTransactionRequest.btl":
		value := x.Btl
		return protoreflect.ValueOfUint64(value)
	case "zrchain.treasury.MsgNewSignTransactionRequest.cache_id":
		value := x.CacheId
		return protoreflect.ValueOfBytes(value)
	case "zrchain.treasury.MsgNewSignTransactionRequest.no_broadcast":
		value := x.NoBroadcast
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewSignTransactionRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewSignTransactionRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewSignTransactionRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewSignTransactionRequest.creator":
		x.Creator = value.Interface().(string)
	case "zrchain.treasury.MsgNewSignTransactionRequest.key_id":
		x.KeyId = value.Uint()
	case "zrchain.treasury.MsgNewSignTransactionRequest.wallet_type":
		x.WalletType = (WalletType)(value.Enum())
	case "zrchain.treasury.MsgNewSignTransactionRequest.unsigned_transaction":
		x.UnsignedTransaction = value.Bytes()
	case "zrchain.treasury.MsgNewSignTransactionRequest.metadata":
		x.Metadata = value.Message().Interface().(*anypb.Any)
	case "zrchain.treasury.MsgNewSignTransactionRequest.btl":
		x.Btl = value.Uint()
	case "zrchain.treasury.MsgNewSignTransactionRequest.cache_id":
		x.CacheId = value.Bytes()
	case "zrchain.treasury.MsgNewSignTransactionRequest.no_broadcast":
		x.NoBroadcast = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewSignTransactionRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewSignTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewSignTransactionRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewSignTransactionRequest.metadata":
		if x.Metadata == nil {
			x.Metadata = new(anypb.Any)
		}
		return protoreflect.ValueOfMessage(x.Metadata.ProtoReflect())
	case "zrchain.treasury.MsgNewSignTransactionRequest.creator":
		panic(fmt.Errorf("field creator of message zrchain.treasury.MsgNewSignTransactionRequest is not mutable"))
	case "zrchain.treasury.MsgNewSignTransactionRequest.key_id":
		panic(fmt.Errorf("field key_id of message zrchain.treasury.MsgNewSignTransactionRequest is not mutable"))
	case "zrchain.treasury.MsgNewSignTransactionRequest.wallet_type":
		panic(fmt.Errorf("field wallet_type of message zrchain.treasury.MsgNewSignTransactionRequest is not mutable"))
	case "zrchain.treasury.MsgNewSignTransactionRequest.unsigned_transaction":
		panic(fmt.Errorf("field unsigned_transaction of message zrchain.treasury.MsgNewSignTransactionRequest is not mutable"))
	case "zrchain.treasury.MsgNewSignTransactionRequest.btl":
		panic(fmt.Errorf("field btl of message zrchain.treasury.MsgNewSignTransactionRequest is not mutable"))
	case "zrchain.treasury.MsgNewSignTransactionRequest.cache_id":
		panic(fmt.Errorf("field cache_id of message zrchain.treasury.MsgNewSignTransactionRequest is not mutable"))
	case "zrchain.treasury.MsgNewSignTransactionRequest.no_broadcast":
		panic(fmt.Errorf("field no_broadcast of message zrchain.treasury.MsgNewSignTransactionRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewSignTransactionRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewSignTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgNewSignTransactionRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewSignTransactionRequest.creator":
		return protoreflect.ValueOfString("")
	case "zrchain.treasury.MsgNewSignTransactionRequest.key_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "zrchain.treasury.MsgNewSignTransactionRequest.wallet_type":
		return protoreflect.ValueOfEnum(0)
	case "zrchain.treasury.MsgNewSignTransactionRequest.unsigned_transaction":
		return protoreflect.ValueOfBytes(nil)
	case "zrchain.treasury.MsgNewSignTransactionRequest.metadata":
		m := new(anypb.Any)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "zrchain.treasury.MsgNewSignTransactionRequest.btl":
		return protoreflect.ValueOfUint64(uint64(0))
	case "zrchain.treasury.MsgNewSignTransactionRequest.cache_id":
		return protoreflect.ValueOfBytes(nil)
	case "zrchain.treasury.MsgNewSignTransactionRequest.no_broadcast":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewSignTransactionRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewSignTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgNewSignTransactionRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.treasury.MsgNewSignTransactionRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgNewSignTransactionRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewSignTransactionRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgNewSignTransactionRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgNewSignTransactionRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgNewSignTransactionRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.KeyId != 0 {
			n += 1 + runtime.Sov(uint64(x.KeyId))
		}
		if x.WalletType != 0 {
			n += 1 + runtime.Sov(uint64(x.WalletType))
		}
		l = len(x.UnsignedTransaction)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Metadata != nil {
			l = options.Size(x.Metadata)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Btl != 0 {
			n += 1 + runtime.Sov(uint64(x.Btl))
		}
		l = len(x.CacheId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.NoBroadcast {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgNewSignTransactionRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.NoBroadcast {
			i--
			if x.NoBroadcast {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x40
		}
		if len(x.CacheId) > 0 {
			i -= len(x.CacheId)
			copy(dAtA[i:], x.CacheId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CacheId)))
			i--
			dAtA[i] = 0x3a
		}
		if x.Btl != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Btl))
			i--
			dAtA[i] = 0x30
		}
		if x.Metadata != nil {
			encoded, err := options.Marshal(x.Metadata)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.UnsignedTransaction) > 0 {
			i -= len(x.UnsignedTransaction)
			copy(dAtA[i:], x.UnsignedTransaction)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.UnsignedTransaction)))
			i--
			dAtA[i] = 0x22
		}
		if x.WalletType != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.WalletType))
			i--
			dAtA[i] = 0x18
		}
		if x.KeyId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.KeyId))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgNewSignTransactionRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNewSignTransactionRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNewSignTransactionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KeyId", wireType)
				}
				x.KeyId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.KeyId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field WalletType", wireType)
				}
				x.WalletType = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.WalletType |= WalletType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UnsignedTransaction", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.UnsignedTransaction = append(x.UnsignedTransaction[:0], dAtA[iNdEx:postIndex]...)
				if x.UnsignedTransaction == nil {
					x.UnsignedTransaction = []byte{}
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Metadata == nil {
					x.Metadata = &anypb.Any{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Metadata); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Btl", wireType)
				}
				x.Btl = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Btl |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CacheId", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CacheId = append(x.CacheId[:0], dAtA[iNdEx:postIndex]...)
				if x.CacheId == nil {
					x.CacheId = []byte{}
				}
				iNdEx = postIndex
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NoBroadcast", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.NoBroadcast = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgNewSignTransactionRequestResponse                      protoreflect.MessageDescriptor
	fd_MsgNewSignTransactionRequestResponse_id                   protoreflect.FieldDescriptor
	fd_MsgNewSignTransactionRequestResponse_signature_request_id protoreflect.FieldDescriptor
)

func init() {
	file_zrchain_treasury_tx_proto_init()
	md_MsgNewSignTransactionRequestResponse = File_zrchain_treasury_tx_proto.Messages().ByName("MsgNewSignTransactionRequestResponse")
	fd_MsgNewSignTransactionRequestResponse_id = md_MsgNewSignTransactionRequestResponse.Fields().ByName("id")
	fd_MsgNewSignTransactionRequestResponse_signature_request_id = md_MsgNewSignTransactionRequestResponse.Fields().ByName("signature_request_id")
}

var _ protoreflect.Message = (*fastReflection_MsgNewSignTransactionRequestResponse)(nil)

type fastReflection_MsgNewSignTransactionRequestResponse MsgNewSignTransactionRequestResponse

func (x *MsgNewSignTransactionRequestResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgNewSignTransactionRequestResponse)(x)
}

func (x *MsgNewSignTransactionRequestResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_treasury_tx_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgNewSignTransactionRequestResponse_messageType fastReflection_MsgNewSignTransactionRequestResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgNewSignTransactionRequestResponse_messageType{}

type fastReflection_MsgNewSignTransactionRequestResponse_messageType struct{}

func (x fastReflection_MsgNewSignTransactionRequestResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgNewSignTransactionRequestResponse)(nil)
}
func (x fastReflection_MsgNewSignTransactionRequestResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgNewSignTransactionRequestResponse)
}
func (x fastReflection_MsgNewSignTransactionRequestResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNewSignTransactionRequestResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgNewSignTransactionRequestResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNewSignTransactionRequestResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgNewSignTransactionRequestResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgNewSignTransactionRequestResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgNewSignTransactionRequestResponse) New() protoreflect.Message {
	return new(fastReflection_MsgNewSignTransactionRequestResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgNewSignTransactionRequestResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgNewSignTransactionRequestResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgNewSignTransactionRequestResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_MsgNewSignTransactionRequestResponse_id, value) {
			return
		}
	}
	if x.SignatureRequestId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.SignatureRequestId)
		if !f(fd_MsgNewSignTransactionRequestResponse_signature_request_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgNewSignTransactionRequestResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewSignTransactionRequestResponse.id":
		return x.Id != uint64(0)
	case "zrchain.treasury.MsgNewSignTransactionRequestResponse.signature_request_id":
		return x.SignatureRequestId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewSignTransactionRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewSignTransactionRequestResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewSignTransactionRequestResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewSignTransactionRequestResponse.id":
		x.Id = uint64(0)
	case "zrchain.treasury.MsgNewSignTransactionRequestResponse.signature_request_id":
		x.SignatureRequestId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewSignTransactionRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewSignTransactionRequestResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgNewSignTransactionRequestResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "zrchain.treasury.MsgNewSignTransactionRequestResponse.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "zrchain.treasury.MsgNewSignTransactionRequestResponse.signature_request_id":
		value := x.SignatureRequestId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewSignTransactionRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewSignTransactionRequestResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewSignTransactionRequestResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewSignTransactionRequestResponse.id":
		x.Id = value.Uint()
	case "zrchain.treasury.MsgNewSignTransactionRequestResponse.signature_request_id":
		x.SignatureRequestId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewSignTransactionRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewSignTransactionRequestResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewSignTransactionRequestResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewSignTransactionRequestResponse.id":
		panic(fmt.Errorf("field id of message zrchain.treasury.MsgNewSignTransactionRequestResponse is not mutable"))
	case "zrchain.treasury.MsgNewSignTransactionRequestResponse.signature_request_id":
		panic(fmt.Errorf("field signature_request_id of message zrchain.treasury.MsgNewSignTransactionRequestResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewSignTransactionRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewSignTransactionRequestResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgNewSignTransactionRequestResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewSignTransactionRequestResponse.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "zrchain.treasury.MsgNewSignTransactionRequestResponse.signature_request_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewSignTransactionRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewSignTransactionRequestResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgNewSignTransactionRequestResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.treasury.MsgNewSignTransactionRequestResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgNewSignTransactionRequestResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewSignTransactionRequestResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgNewSignTransactionRequestResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgNewSignTransactionRequestResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgNewSignTransactionRequestResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		if x.SignatureRequestId != 0 {
			n += 1 + runtime.Sov(uint64(x.SignatureRequestId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgNewSignTransactionRequestResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.SignatureRequestId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SignatureRequestId))
			i--
			dAtA[i] = 0x10
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgNewSignTransactionRequestResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNewSignTransactionRequestResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNewSignTransactionRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SignatureRequestId", wireType)
				}
				x.SignatureRequestId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SignatureRequestId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgTransferFromKeyring           protoreflect.MessageDescriptor
	fd_MsgTransferFromKeyring_creator   protoreflect.FieldDescriptor
	fd_MsgTransferFromKeyring_keyring   protoreflect.FieldDescriptor
	fd_MsgTransferFromKeyring_recipient protoreflect.FieldDescriptor
	fd_MsgTransferFromKeyring_amount    protoreflect.FieldDescriptor
	fd_MsgTransferFromKeyring_denom     protoreflect.FieldDescriptor
)

func init() {
	file_zrchain_treasury_tx_proto_init()
	md_MsgTransferFromKeyring = File_zrchain_treasury_tx_proto.Messages().ByName("MsgTransferFromKeyring")
	fd_MsgTransferFromKeyring_creator = md_MsgTransferFromKeyring.Fields().ByName("creator")
	fd_MsgTransferFromKeyring_keyring = md_MsgTransferFromKeyring.Fields().ByName("keyring")
	fd_MsgTransferFromKeyring_recipient = md_MsgTransferFromKeyring.Fields().ByName("recipient")
	fd_MsgTransferFromKeyring_amount = md_MsgTransferFromKeyring.Fields().ByName("amount")
	fd_MsgTransferFromKeyring_denom = md_MsgTransferFromKeyring.Fields().ByName("denom")
}

var _ protoreflect.Message = (*fastReflection_MsgTransferFromKeyring)(nil)

type fastReflection_MsgTransferFromKeyring MsgTransferFromKeyring

func (x *MsgTransferFromKeyring) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgTransferFromKeyring)(x)
}

func (x *MsgTransferFromKeyring) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_treasury_tx_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgTransferFromKeyring_messageType fastReflection_MsgTransferFromKeyring_messageType
var _ protoreflect.MessageType = fastReflection_MsgTransferFromKeyring_messageType{}

type fastReflection_MsgTransferFromKeyring_messageType struct{}

func (x fastReflection_MsgTransferFromKeyring_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgTransferFromKeyring)(nil)
}
func (x fastReflection_MsgTransferFromKeyring_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgTransferFromKeyring)
}
func (x fastReflection_MsgTransferFromKeyring_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgTransferFromKeyring
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgTransferFromKeyring) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgTransferFromKeyring
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgTransferFromKeyring) Type() protoreflect.MessageType {
	return _fastReflection_MsgTransferFromKeyring_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgTransferFromKeyring) New() protoreflect.Message {
	return new(fastReflection_MsgTransferFromKeyring)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgTransferFromKeyring) Interface() protoreflect.ProtoMessage {
	return (*MsgTransferFromKeyring)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgTransferFromKeyring) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgTransferFromKeyring_creator, value) {
			return
		}
	}
	if x.Keyring != "" {
		value := protoreflect.ValueOfString(x.Keyring)
		if !f(fd_MsgTransferFromKeyring_keyring, value) {
			return
		}
	}
	if x.Recipient != "" {
		value := protoreflect.ValueOfString(x.Recipient)
		if !f(fd_MsgTransferFromKeyring_recipient, value) {
			return
		}
	}
	if x.Amount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Amount)
		if !f(fd_MsgTransferFromKeyring_amount, value) {
			return
		}
	}
	if x.Denom != "" {
		value := protoreflect.ValueOfString(x.Denom)
		if !f(fd_MsgTransferFromKeyring_denom, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgTransferFromKeyring) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "zrchain.treasury.MsgTransferFromKeyring.creator":
		return x.Creator != ""
	case "zrchain.treasury.MsgTransferFromKeyring.keyring":
		return x.Keyring != ""
	case "zrchain.treasury.MsgTransferFromKeyring.recipient":
		return x.Recipient != ""
	case "zrchain.treasury.MsgTransferFromKeyring.amount":
		return x.Amount != uint64(0)
	case "zrchain.treasury.MsgTransferFromKeyring.denom":
		return x.Denom != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgTransferFromKeyring"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgTransferFromKeyring does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTransferFromKeyring) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgTransferFromKeyring.creator":
		x.Creator = ""
	case "zrchain.treasury.MsgTransferFromKeyring.keyring":
		x.Keyring = ""
	case "zrchain.treasury.MsgTransferFromKeyring.recipient":
		x.Recipient = ""
	case "zrchain.treasury.MsgTransferFromKeyring.amount":
		x.Amount = uint64(0)
	case "zrchain.treasury.MsgTransferFromKeyring.denom":
		x.Denom = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgTransferFromKeyring"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgTransferFromKeyring does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgTransferFromKeyring) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "zrchain.treasury.MsgTransferFromKeyring.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "zrchain.treasury.MsgTransferFromKeyring.keyring":
		value := x.Keyring
		return protoreflect.ValueOfString(value)
	case "zrchain.treasury.MsgTransferFromKeyring.recipient":
		value := x.Recipient
		return protoreflect.ValueOfString(value)
	case "zrchain.treasury.MsgTransferFromKeyring.amount":
		value := x.Amount
		return protoreflect.ValueOfUint64(value)
	case "zrchain.treasury.MsgTransferFromKeyring.denom":
		value := x.Denom
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgTransferFromKeyring"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgTransferFromKeyring does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTransferFromKeyring) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgTransferFromKeyring.creator":
		x.Creator = value.Interface().(string)
	case "zrchain.treasury.MsgTransferFromKeyring.keyring":
		x.Keyring = value.Interface().(string)
	case "zrchain.treasury.MsgTransferFromKeyring.recipient":
		x.Recipient = value.Interface().(string)
	case "zrchain.treasury.MsgTransferFromKeyring.amount":
		x.Amount = value.Uint()
	case "zrchain.treasury.MsgTransferFromKeyring.denom":
		x.Denom = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgTransferFromKeyring"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgTransferFromKeyring does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTransferFromKeyring) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgTransferFromKeyring.creator":
		panic(fmt.Errorf("field creator of message zrchain.treasury.MsgTransferFromKeyring is not mutable"))
	case "zrchain.treasury.MsgTransferFromKeyring.keyring":
		panic(fmt.Errorf("field keyring of message zrchain.treasury.MsgTransferFromKeyring is not mutable"))
	case "zrchain.treasury.MsgTransferFromKeyring.recipient":
		panic(fmt.Errorf("field recipient of message zrchain.treasury.MsgTransferFromKeyring is not mutable"))
	case "zrchain.treasury.MsgTransferFromKeyring.amount":
		panic(fmt.Errorf("field amount of message zrchain.treasury.MsgTransferFromKeyring is not mutable"))
	case "zrchain.treasury.MsgTransferFromKeyring.denom":
		panic(fmt.Errorf("field denom of message zrchain.treasury.MsgTransferFromKeyring is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgTransferFromKeyring"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgTransferFromKeyring does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgTransferFromKeyring) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgTransferFromKeyring.creator":
		return protoreflect.ValueOfString("")
	case "zrchain.treasury.MsgTransferFromKeyring.keyring":
		return protoreflect.ValueOfString("")
	case "zrchain.treasury.MsgTransferFromKeyring.recipient":
		return protoreflect.ValueOfString("")
	case "zrchain.treasury.MsgTransferFromKeyring.amount":
		return protoreflect.ValueOfUint64(uint64(0))
	case "zrchain.treasury.MsgTransferFromKeyring.denom":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgTransferFromKeyring"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgTransferFromKeyring does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgTransferFromKeyring) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.treasury.MsgTransferFromKeyring", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgTransferFromKeyring) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTransferFromKeyring) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgTransferFromKeyring) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgTransferFromKeyring) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgTransferFromKeyring)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Keyring)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Recipient)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Amount != 0 {
			n += 1 + runtime.Sov(uint64(x.Amount))
		}
		l = len(x.Denom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgTransferFromKeyring)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Denom) > 0 {
			i -= len(x.Denom)
			copy(dAtA[i:], x.Denom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Denom)))
			i--
			dAtA[i] = 0x2a
		}
		if x.Amount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Amount))
			i--
			dAtA[i] = 0x20
		}
		if len(x.Recipient) > 0 {
			i -= len(x.Recipient)
			copy(dAtA[i:], x.Recipient)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Recipient)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Keyring) > 0 {
			i -= len(x.Keyring)
			copy(dAtA[i:], x.Keyring)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Keyring)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgTransferFromKeyring)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgTransferFromKeyring: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgTransferFromKeyring: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Keyring", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Keyring = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Recipient", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Recipient = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				x.Amount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Amount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Denom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgTransferFromKeyringResponse protoreflect.MessageDescriptor
)

func init() {
	file_zrchain_treasury_tx_proto_init()
	md_MsgTransferFromKeyringResponse = File_zrchain_treasury_tx_proto.Messages().ByName("MsgTransferFromKeyringResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgTransferFromKeyringResponse)(nil)

type fastReflection_MsgTransferFromKeyringResponse MsgTransferFromKeyringResponse

func (x *MsgTransferFromKeyringResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgTransferFromKeyringResponse)(x)
}

func (x *MsgTransferFromKeyringResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_treasury_tx_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgTransferFromKeyringResponse_messageType fastReflection_MsgTransferFromKeyringResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgTransferFromKeyringResponse_messageType{}

type fastReflection_MsgTransferFromKeyringResponse_messageType struct{}

func (x fastReflection_MsgTransferFromKeyringResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgTransferFromKeyringResponse)(nil)
}
func (x fastReflection_MsgTransferFromKeyringResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgTransferFromKeyringResponse)
}
func (x fastReflection_MsgTransferFromKeyringResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgTransferFromKeyringResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgTransferFromKeyringResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgTransferFromKeyringResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgTransferFromKeyringResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgTransferFromKeyringResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgTransferFromKeyringResponse) New() protoreflect.Message {
	return new(fastReflection_MsgTransferFromKeyringResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgTransferFromKeyringResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgTransferFromKeyringResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgTransferFromKeyringResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgTransferFromKeyringResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgTransferFromKeyringResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgTransferFromKeyringResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTransferFromKeyringResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgTransferFromKeyringResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgTransferFromKeyringResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgTransferFromKeyringResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgTransferFromKeyringResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgTransferFromKeyringResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTransferFromKeyringResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgTransferFromKeyringResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgTransferFromKeyringResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTransferFromKeyringResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgTransferFromKeyringResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgTransferFromKeyringResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgTransferFromKeyringResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgTransferFromKeyringResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgTransferFromKeyringResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgTransferFromKeyringResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.treasury.MsgTransferFromKeyringResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgTransferFromKeyringResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTransferFromKeyringResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgTransferFromKeyringResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgTransferFromKeyringResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgTransferFromKeyringResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgTransferFromKeyringResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgTransferFromKeyringResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgTransferFromKeyringResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgTransferFromKeyringResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgNewICATransactionRequest                            protoreflect.MessageDescriptor
	fd_MsgNewICATransactionRequest_creator                    protoreflect.FieldDescriptor
	fd_MsgNewICATransactionRequest_key_id                     protoreflect.FieldDescriptor
	fd_MsgNewICATransactionRequest_input_payload              protoreflect.FieldDescriptor
	fd_MsgNewICATransactionRequest_connection_id              protoreflect.FieldDescriptor
	fd_MsgNewICATransactionRequest_relative_timeout_timestamp protoreflect.FieldDescriptor
	fd_MsgNewICATransactionRequest_btl                        protoreflect.FieldDescriptor
)

func init() {
	file_zrchain_treasury_tx_proto_init()
	md_MsgNewICATransactionRequest = File_zrchain_treasury_tx_proto.Messages().ByName("MsgNewICATransactionRequest")
	fd_MsgNewICATransactionRequest_creator = md_MsgNewICATransactionRequest.Fields().ByName("creator")
	fd_MsgNewICATransactionRequest_key_id = md_MsgNewICATransactionRequest.Fields().ByName("key_id")
	fd_MsgNewICATransactionRequest_input_payload = md_MsgNewICATransactionRequest.Fields().ByName("input_payload")
	fd_MsgNewICATransactionRequest_connection_id = md_MsgNewICATransactionRequest.Fields().ByName("connection_id")
	fd_MsgNewICATransactionRequest_relative_timeout_timestamp = md_MsgNewICATransactionRequest.Fields().ByName("relative_timeout_timestamp")
	fd_MsgNewICATransactionRequest_btl = md_MsgNewICATransactionRequest.Fields().ByName("btl")
}

var _ protoreflect.Message = (*fastReflection_MsgNewICATransactionRequest)(nil)

type fastReflection_MsgNewICATransactionRequest MsgNewICATransactionRequest

func (x *MsgNewICATransactionRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgNewICATransactionRequest)(x)
}

func (x *MsgNewICATransactionRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_treasury_tx_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgNewICATransactionRequest_messageType fastReflection_MsgNewICATransactionRequest_messageType
var _ protoreflect.MessageType = fastReflection_MsgNewICATransactionRequest_messageType{}

type fastReflection_MsgNewICATransactionRequest_messageType struct{}

func (x fastReflection_MsgNewICATransactionRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgNewICATransactionRequest)(nil)
}
func (x fastReflection_MsgNewICATransactionRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgNewICATransactionRequest)
}
func (x fastReflection_MsgNewICATransactionRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNewICATransactionRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgNewICATransactionRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNewICATransactionRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgNewICATransactionRequest) Type() protoreflect.MessageType {
	return _fastReflection_MsgNewICATransactionRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgNewICATransactionRequest) New() protoreflect.Message {
	return new(fastReflection_MsgNewICATransactionRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgNewICATransactionRequest) Interface() protoreflect.ProtoMessage {
	return (*MsgNewICATransactionRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgNewICATransactionRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgNewICATransactionRequest_creator, value) {
			return
		}
	}
	if x.KeyId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.KeyId)
		if !f(fd_MsgNewICATransactionRequest_key_id, value) {
			return
		}
	}
	if x.InputPayload != "" {
		value := protoreflect.ValueOfString(x.InputPayload)
		if !f(fd_MsgNewICATransactionRequest_input_payload, value) {
			return
		}
	}
	if x.ConnectionId != "" {
		value := protoreflect.ValueOfString(x.ConnectionId)
		if !f(fd_MsgNewICATransactionRequest_connection_id, value) {
			return
		}
	}
	if x.RelativeTimeoutTimestamp != uint64(0) {
		value := protoreflect.ValueOfUint64(x.RelativeTimeoutTimestamp)
		if !f(fd_MsgNewICATransactionRequest_relative_timeout_timestamp, value) {
			return
		}
	}
	if x.Btl != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Btl)
		if !f(fd_MsgNewICATransactionRequest_btl, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgNewICATransactionRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewICATransactionRequest.creator":
		return x.Creator != ""
	case "zrchain.treasury.MsgNewICATransactionRequest.key_id":
		return x.KeyId != uint64(0)
	case "zrchain.treasury.MsgNewICATransactionRequest.input_payload":
		return x.InputPayload != ""
	case "zrchain.treasury.MsgNewICATransactionRequest.connection_id":
		return x.ConnectionId != ""
	case "zrchain.treasury.MsgNewICATransactionRequest.relative_timeout_timestamp":
		return x.RelativeTimeoutTimestamp != uint64(0)
	case "zrchain.treasury.MsgNewICATransactionRequest.btl":
		return x.Btl != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewICATransactionRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewICATransactionRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewICATransactionRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewICATransactionRequest.creator":
		x.Creator = ""
	case "zrchain.treasury.MsgNewICATransactionRequest.key_id":
		x.KeyId = uint64(0)
	case "zrchain.treasury.MsgNewICATransactionRequest.input_payload":
		x.InputPayload = ""
	case "zrchain.treasury.MsgNewICATransactionRequest.connection_id":
		x.ConnectionId = ""
	case "zrchain.treasury.MsgNewICATransactionRequest.relative_timeout_timestamp":
		x.RelativeTimeoutTimestamp = uint64(0)
	case "zrchain.treasury.MsgNewICATransactionRequest.btl":
		x.Btl = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewICATransactionRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewICATransactionRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgNewICATransactionRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "zrchain.treasury.MsgNewICATransactionRequest.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "zrchain.treasury.MsgNewICATransactionRequest.key_id":
		value := x.KeyId
		return protoreflect.ValueOfUint64(value)
	case "zrchain.treasury.MsgNewICATransactionRequest.input_payload":
		value := x.InputPayload
		return protoreflect.ValueOfString(value)
	case "zrchain.treasury.MsgNewICATransactionRequest.connection_id":
		value := x.ConnectionId
		return protoreflect.ValueOfString(value)
	case "zrchain.treasury.MsgNewICATransactionRequest.relative_timeout_timestamp":
		value := x.RelativeTimeoutTimestamp
		return protoreflect.ValueOfUint64(value)
	case "zrchain.treasury.MsgNewICATransactionRequest.btl":
		value := x.Btl
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewICATransactionRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewICATransactionRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewICATransactionRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewICATransactionRequest.creator":
		x.Creator = value.Interface().(string)
	case "zrchain.treasury.MsgNewICATransactionRequest.key_id":
		x.KeyId = value.Uint()
	case "zrchain.treasury.MsgNewICATransactionRequest.input_payload":
		x.InputPayload = value.Interface().(string)
	case "zrchain.treasury.MsgNewICATransactionRequest.connection_id":
		x.ConnectionId = value.Interface().(string)
	case "zrchain.treasury.MsgNewICATransactionRequest.relative_timeout_timestamp":
		x.RelativeTimeoutTimestamp = value.Uint()
	case "zrchain.treasury.MsgNewICATransactionRequest.btl":
		x.Btl = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewICATransactionRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewICATransactionRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewICATransactionRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewICATransactionRequest.creator":
		panic(fmt.Errorf("field creator of message zrchain.treasury.MsgNewICATransactionRequest is not mutable"))
	case "zrchain.treasury.MsgNewICATransactionRequest.key_id":
		panic(fmt.Errorf("field key_id of message zrchain.treasury.MsgNewICATransactionRequest is not mutable"))
	case "zrchain.treasury.MsgNewICATransactionRequest.input_payload":
		panic(fmt.Errorf("field input_payload of message zrchain.treasury.MsgNewICATransactionRequest is not mutable"))
	case "zrchain.treasury.MsgNewICATransactionRequest.connection_id":
		panic(fmt.Errorf("field connection_id of message zrchain.treasury.MsgNewICATransactionRequest is not mutable"))
	case "zrchain.treasury.MsgNewICATransactionRequest.relative_timeout_timestamp":
		panic(fmt.Errorf("field relative_timeout_timestamp of message zrchain.treasury.MsgNewICATransactionRequest is not mutable"))
	case "zrchain.treasury.MsgNewICATransactionRequest.btl":
		panic(fmt.Errorf("field btl of message zrchain.treasury.MsgNewICATransactionRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewICATransactionRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewICATransactionRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgNewICATransactionRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewICATransactionRequest.creator":
		return protoreflect.ValueOfString("")
	case "zrchain.treasury.MsgNewICATransactionRequest.key_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "zrchain.treasury.MsgNewICATransactionRequest.input_payload":
		return protoreflect.ValueOfString("")
	case "zrchain.treasury.MsgNewICATransactionRequest.connection_id":
		return protoreflect.ValueOfString("")
	case "zrchain.treasury.MsgNewICATransactionRequest.relative_timeout_timestamp":
		return protoreflect.ValueOfUint64(uint64(0))
	case "zrchain.treasury.MsgNewICATransactionRequest.btl":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewICATransactionRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewICATransactionRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgNewICATransactionRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.treasury.MsgNewICATransactionRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgNewICATransactionRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewICATransactionRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgNewICATransactionRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgNewICATransactionRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgNewICATransactionRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.KeyId != 0 {
			n += 1 + runtime.Sov(uint64(x.KeyId))
		}
		l = len(x.InputPayload)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ConnectionId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.RelativeTimeoutTimestamp != 0 {
			n += 1 + runtime.Sov(uint64(x.RelativeTimeoutTimestamp))
		}
		if x.Btl != 0 {
			n += 1 + runtime.Sov(uint64(x.Btl))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgNewICATransactionRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Btl != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Btl))
			i--
			dAtA[i] = 0x30
		}
		if x.RelativeTimeoutTimestamp != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RelativeTimeoutTimestamp))
			i--
			dAtA[i] = 0x28
		}
		if len(x.ConnectionId) > 0 {
			i -= len(x.ConnectionId)
			copy(dAtA[i:], x.ConnectionId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ConnectionId)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.InputPayload) > 0 {
			i -= len(x.InputPayload)
			copy(dAtA[i:], x.InputPayload)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.InputPayload)))
			i--
			dAtA[i] = 0x1a
		}
		if x.KeyId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.KeyId))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgNewICATransactionRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNewICATransactionRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNewICATransactionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KeyId", wireType)
				}
				x.KeyId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.KeyId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InputPayload", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.InputPayload = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ConnectionId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ConnectionId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RelativeTimeoutTimestamp", wireType)
				}
				x.RelativeTimeoutTimestamp = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RelativeTimeoutTimestamp |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Btl", wireType)
				}
				x.Btl = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Btl |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgNewICATransactionRequestResponse                      protoreflect.MessageDescriptor
	fd_MsgNewICATransactionRequestResponse_id                   protoreflect.FieldDescriptor
	fd_MsgNewICATransactionRequestResponse_signature_request_id protoreflect.FieldDescriptor
)

func init() {
	file_zrchain_treasury_tx_proto_init()
	md_MsgNewICATransactionRequestResponse = File_zrchain_treasury_tx_proto.Messages().ByName("MsgNewICATransactionRequestResponse")
	fd_MsgNewICATransactionRequestResponse_id = md_MsgNewICATransactionRequestResponse.Fields().ByName("id")
	fd_MsgNewICATransactionRequestResponse_signature_request_id = md_MsgNewICATransactionRequestResponse.Fields().ByName("signature_request_id")
}

var _ protoreflect.Message = (*fastReflection_MsgNewICATransactionRequestResponse)(nil)

type fastReflection_MsgNewICATransactionRequestResponse MsgNewICATransactionRequestResponse

func (x *MsgNewICATransactionRequestResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgNewICATransactionRequestResponse)(x)
}

func (x *MsgNewICATransactionRequestResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_treasury_tx_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgNewICATransactionRequestResponse_messageType fastReflection_MsgNewICATransactionRequestResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgNewICATransactionRequestResponse_messageType{}

type fastReflection_MsgNewICATransactionRequestResponse_messageType struct{}

func (x fastReflection_MsgNewICATransactionRequestResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgNewICATransactionRequestResponse)(nil)
}
func (x fastReflection_MsgNewICATransactionRequestResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgNewICATransactionRequestResponse)
}
func (x fastReflection_MsgNewICATransactionRequestResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNewICATransactionRequestResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgNewICATransactionRequestResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNewICATransactionRequestResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgNewICATransactionRequestResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgNewICATransactionRequestResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgNewICATransactionRequestResponse) New() protoreflect.Message {
	return new(fastReflection_MsgNewICATransactionRequestResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgNewICATransactionRequestResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgNewICATransactionRequestResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgNewICATransactionRequestResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_MsgNewICATransactionRequestResponse_id, value) {
			return
		}
	}
	if x.SignatureRequestId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.SignatureRequestId)
		if !f(fd_MsgNewICATransactionRequestResponse_signature_request_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgNewICATransactionRequestResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewICATransactionRequestResponse.id":
		return x.Id != uint64(0)
	case "zrchain.treasury.MsgNewICATransactionRequestResponse.signature_request_id":
		return x.SignatureRequestId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewICATransactionRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewICATransactionRequestResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewICATransactionRequestResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewICATransactionRequestResponse.id":
		x.Id = uint64(0)
	case "zrchain.treasury.MsgNewICATransactionRequestResponse.signature_request_id":
		x.SignatureRequestId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewICATransactionRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewICATransactionRequestResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgNewICATransactionRequestResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "zrchain.treasury.MsgNewICATransactionRequestResponse.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "zrchain.treasury.MsgNewICATransactionRequestResponse.signature_request_id":
		value := x.SignatureRequestId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewICATransactionRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewICATransactionRequestResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewICATransactionRequestResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewICATransactionRequestResponse.id":
		x.Id = value.Uint()
	case "zrchain.treasury.MsgNewICATransactionRequestResponse.signature_request_id":
		x.SignatureRequestId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewICATransactionRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewICATransactionRequestResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewICATransactionRequestResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewICATransactionRequestResponse.id":
		panic(fmt.Errorf("field id of message zrchain.treasury.MsgNewICATransactionRequestResponse is not mutable"))
	case "zrchain.treasury.MsgNewICATransactionRequestResponse.signature_request_id":
		panic(fmt.Errorf("field signature_request_id of message zrchain.treasury.MsgNewICATransactionRequestResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewICATransactionRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewICATransactionRequestResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgNewICATransactionRequestResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewICATransactionRequestResponse.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "zrchain.treasury.MsgNewICATransactionRequestResponse.signature_request_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewICATransactionRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewICATransactionRequestResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgNewICATransactionRequestResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.treasury.MsgNewICATransactionRequestResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgNewICATransactionRequestResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewICATransactionRequestResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgNewICATransactionRequestResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgNewICATransactionRequestResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgNewICATransactionRequestResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		if x.SignatureRequestId != 0 {
			n += 1 + runtime.Sov(uint64(x.SignatureRequestId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgNewICATransactionRequestResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.SignatureRequestId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SignatureRequestId))
			i--
			dAtA[i] = 0x10
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgNewICATransactionRequestResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNewICATransactionRequestResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNewICATransactionRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SignatureRequestId", wireType)
				}
				x.SignatureRequestId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SignatureRequestId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgFulfilICATransactionRequest                         protoreflect.MessageDescriptor
	fd_MsgFulfilICATransactionRequest_creator                 protoreflect.FieldDescriptor
	fd_MsgFulfilICATransactionRequest_request_id              protoreflect.FieldDescriptor
	fd_MsgFulfilICATransactionRequest_status                  protoreflect.FieldDescriptor
	fd_MsgFulfilICATransactionRequest_keyring_party_signature protoreflect.FieldDescriptor
	fd_MsgFulfilICATransactionRequest_signed_data             protoreflect.FieldDescriptor
	fd_MsgFulfilICATransactionRequest_reject_reason           protoreflect.FieldDescriptor
)

func init() {
	file_zrchain_treasury_tx_proto_init()
	md_MsgFulfilICATransactionRequest = File_zrchain_treasury_tx_proto.Messages().ByName("MsgFulfilICATransactionRequest")
	fd_MsgFulfilICATransactionRequest_creator = md_MsgFulfilICATransactionRequest.Fields().ByName("creator")
	fd_MsgFulfilICATransactionRequest_request_id = md_MsgFulfilICATransactionRequest.Fields().ByName("request_id")
	fd_MsgFulfilICATransactionRequest_status = md_MsgFulfilICATransactionRequest.Fields().ByName("status")
	fd_MsgFulfilICATransactionRequest_keyring_party_signature = md_MsgFulfilICATransactionRequest.Fields().ByName("keyring_party_signature")
	fd_MsgFulfilICATransactionRequest_signed_data = md_MsgFulfilICATransactionRequest.Fields().ByName("signed_data")
	fd_MsgFulfilICATransactionRequest_reject_reason = md_MsgFulfilICATransactionRequest.Fields().ByName("reject_reason")
}

var _ protoreflect.Message = (*fastReflection_MsgFulfilICATransactionRequest)(nil)

type fastReflection_MsgFulfilICATransactionRequest MsgFulfilICATransactionRequest

func (x *MsgFulfilICATransactionRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgFulfilICATransactionRequest)(x)
}

func (x *MsgFulfilICATransactionRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_treasury_tx_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgFulfilICATransactionRequest_messageType fastReflection_MsgFulfilICATransactionRequest_messageType
var _ protoreflect.MessageType = fastReflection_MsgFulfilICATransactionRequest_messageType{}

type fastReflection_MsgFulfilICATransactionRequest_messageType struct{}

func (x fastReflection_MsgFulfilICATransactionRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgFulfilICATransactionRequest)(nil)
}
func (x fastReflection_MsgFulfilICATransactionRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgFulfilICATransactionRequest)
}
func (x fastReflection_MsgFulfilICATransactionRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgFulfilICATransactionRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgFulfilICATransactionRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgFulfilICATransactionRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgFulfilICATransactionRequest) Type() protoreflect.MessageType {
	return _fastReflection_MsgFulfilICATransactionRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgFulfilICATransactionRequest) New() protoreflect.Message {
	return new(fastReflection_MsgFulfilICATransactionRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgFulfilICATransactionRequest) Interface() protoreflect.ProtoMessage {
	return (*MsgFulfilICATransactionRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgFulfilICATransactionRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgFulfilICATransactionRequest_creator, value) {
			return
		}
	}
	if x.RequestId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.RequestId)
		if !f(fd_MsgFulfilICATransactionRequest_request_id, value) {
			return
		}
	}
	if x.Status != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Status))
		if !f(fd_MsgFulfilICATransactionRequest_status, value) {
			return
		}
	}
	if len(x.KeyringPartySignature) != 0 {
		value := protoreflect.ValueOfBytes(x.KeyringPartySignature)
		if !f(fd_MsgFulfilICATransactionRequest_keyring_party_signature, value) {
			return
		}
	}
	if len(x.SignedData) != 0 {
		value := protoreflect.ValueOfBytes(x.SignedData)
		if !f(fd_MsgFulfilICATransactionRequest_signed_data, value) {
			return
		}
	}
	if x.RejectReason != "" {
		value := protoreflect.ValueOfString(x.RejectReason)
		if !f(fd_MsgFulfilICATransactionRequest_reject_reason, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgFulfilICATransactionRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "zrchain.treasury.MsgFulfilICATransactionRequest.creator":
		return x.Creator != ""
	case "zrchain.treasury.MsgFulfilICATransactionRequest.request_id":
		return x.RequestId != uint64(0)
	case "zrchain.treasury.MsgFulfilICATransactionRequest.status":
		return x.Status != 0
	case "zrchain.treasury.MsgFulfilICATransactionRequest.keyring_party_signature":
		return len(x.KeyringPartySignature) != 0
	case "zrchain.treasury.MsgFulfilICATransactionRequest.signed_data":
		return len(x.SignedData) != 0
	case "zrchain.treasury.MsgFulfilICATransactionRequest.reject_reason":
		return x.RejectReason != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilICATransactionRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilICATransactionRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFulfilICATransactionRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgFulfilICATransactionRequest.creator":
		x.Creator = ""
	case "zrchain.treasury.MsgFulfilICATransactionRequest.request_id":
		x.RequestId = uint64(0)
	case "zrchain.treasury.MsgFulfilICATransactionRequest.status":
		x.Status = 0
	case "zrchain.treasury.MsgFulfilICATransactionRequest.keyring_party_signature":
		x.KeyringPartySignature = nil
	case "zrchain.treasury.MsgFulfilICATransactionRequest.signed_data":
		x.SignedData = nil
	case "zrchain.treasury.MsgFulfilICATransactionRequest.reject_reason":
		x.RejectReason = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilICATransactionRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilICATransactionRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgFulfilICATransactionRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "zrchain.treasury.MsgFulfilICATransactionRequest.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "zrchain.treasury.MsgFulfilICATransactionRequest.request_id":
		value := x.RequestId
		return protoreflect.ValueOfUint64(value)
	case "zrchain.treasury.MsgFulfilICATransactionRequest.status":
		value := x.Status
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "zrchain.treasury.MsgFulfilICATransactionRequest.keyring_party_signature":
		value := x.KeyringPartySignature
		return protoreflect.ValueOfBytes(value)
	case "zrchain.treasury.MsgFulfilICATransactionRequest.signed_data":
		value := x.SignedData
		return protoreflect.ValueOfBytes(value)
	case "zrchain.treasury.MsgFulfilICATransactionRequest.reject_reason":
		value := x.RejectReason
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilICATransactionRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilICATransactionRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFulfilICATransactionRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgFulfilICATransactionRequest.creator":
		x.Creator = value.Interface().(string)
	case "zrchain.treasury.MsgFulfilICATransactionRequest.request_id":
		x.RequestId = value.Uint()
	case "zrchain.treasury.MsgFulfilICATransactionRequest.status":
		x.Status = (SignRequestStatus)(value.Enum())
	case "zrchain.treasury.MsgFulfilICATransactionRequest.keyring_party_signature":
		x.KeyringPartySignature = value.Bytes()
	case "zrchain.treasury.MsgFulfilICATransactionRequest.signed_data":
		x.SignedData = value.Bytes()
	case "zrchain.treasury.MsgFulfilICATransactionRequest.reject_reason":
		x.RejectReason = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilICATransactionRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilICATransactionRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFulfilICATransactionRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgFulfilICATransactionRequest.creator":
		panic(fmt.Errorf("field creator of message zrchain.treasury.MsgFulfilICATransactionRequest is not mutable"))
	case "zrchain.treasury.MsgFulfilICATransactionRequest.request_id":
		panic(fmt.Errorf("field request_id of message zrchain.treasury.MsgFulfilICATransactionRequest is not mutable"))
	case "zrchain.treasury.MsgFulfilICATransactionRequest.status":
		panic(fmt.Errorf("field status of message zrchain.treasury.MsgFulfilICATransactionRequest is not mutable"))
	case "zrchain.treasury.MsgFulfilICATransactionRequest.keyring_party_signature":
		panic(fmt.Errorf("field keyring_party_signature of message zrchain.treasury.MsgFulfilICATransactionRequest is not mutable"))
	case "zrchain.treasury.MsgFulfilICATransactionRequest.signed_data":
		panic(fmt.Errorf("field signed_data of message zrchain.treasury.MsgFulfilICATransactionRequest is not mutable"))
	case "zrchain.treasury.MsgFulfilICATransactionRequest.reject_reason":
		panic(fmt.Errorf("field reject_reason of message zrchain.treasury.MsgFulfilICATransactionRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilICATransactionRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilICATransactionRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgFulfilICATransactionRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgFulfilICATransactionRequest.creator":
		return protoreflect.ValueOfString("")
	case "zrchain.treasury.MsgFulfilICATransactionRequest.request_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "zrchain.treasury.MsgFulfilICATransactionRequest.status":
		return protoreflect.ValueOfEnum(0)
	case "zrchain.treasury.MsgFulfilICATransactionRequest.keyring_party_signature":
		return protoreflect.ValueOfBytes(nil)
	case "zrchain.treasury.MsgFulfilICATransactionRequest.signed_data":
		return protoreflect.ValueOfBytes(nil)
	case "zrchain.treasury.MsgFulfilICATransactionRequest.reject_reason":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilICATransactionRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilICATransactionRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgFulfilICATransactionRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.treasury.MsgFulfilICATransactionRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgFulfilICATransactionRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFulfilICATransactionRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgFulfilICATransactionRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgFulfilICATransactionRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgFulfilICATransactionRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.RequestId != 0 {
			n += 1 + runtime.Sov(uint64(x.RequestId))
		}
		if x.Status != 0 {
			n += 1 + runtime.Sov(uint64(x.Status))
		}
		l = len(x.KeyringPartySignature)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.SignedData)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RejectReason)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgFulfilICATransactionRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.RejectReason) > 0 {
			i -= len(x.RejectReason)
			copy(dAtA[i:], x.RejectReason)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RejectReason)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.SignedData) > 0 {
			i -= len(x.SignedData)
			copy(dAtA[i:], x.SignedData)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SignedData)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.KeyringPartySignature) > 0 {
			i -= len(x.KeyringPartySignature)
			copy(dAtA[i:], x.KeyringPartySignature)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.KeyringPartySignature)))
			i--
			dAtA[i] = 0x22
		}
		if x.Status != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Status))
			i--
			dAtA[i] = 0x18
		}
		if x.RequestId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.RequestId))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgFulfilICATransactionRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgFulfilICATransactionRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgFulfilICATransactionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RequestId", wireType)
				}
				x.RequestId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.RequestId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				x.Status = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Status |= SignRequestStatus(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KeyringPartySignature", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.KeyringPartySignature = append(x.KeyringPartySignature[:0], dAtA[iNdEx:postIndex]...)
				if x.KeyringPartySignature == nil {
					x.KeyringPartySignature = []byte{}
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SignedData", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SignedData = append(x.SignedData[:0], dAtA[iNdEx:postIndex]...)
				if x.SignedData == nil {
					x.SignedData = []byte{}
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RejectReason", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RejectReason = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgFulfilICATransactionRequestResponse protoreflect.MessageDescriptor
)

func init() {
	file_zrchain_treasury_tx_proto_init()
	md_MsgFulfilICATransactionRequestResponse = File_zrchain_treasury_tx_proto.Messages().ByName("MsgFulfilICATransactionRequestResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgFulfilICATransactionRequestResponse)(nil)

type fastReflection_MsgFulfilICATransactionRequestResponse MsgFulfilICATransactionRequestResponse

func (x *MsgFulfilICATransactionRequestResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgFulfilICATransactionRequestResponse)(x)
}

func (x *MsgFulfilICATransactionRequestResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_treasury_tx_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgFulfilICATransactionRequestResponse_messageType fastReflection_MsgFulfilICATransactionRequestResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgFulfilICATransactionRequestResponse_messageType{}

type fastReflection_MsgFulfilICATransactionRequestResponse_messageType struct{}

func (x fastReflection_MsgFulfilICATransactionRequestResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgFulfilICATransactionRequestResponse)(nil)
}
func (x fastReflection_MsgFulfilICATransactionRequestResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgFulfilICATransactionRequestResponse)
}
func (x fastReflection_MsgFulfilICATransactionRequestResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgFulfilICATransactionRequestResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgFulfilICATransactionRequestResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgFulfilICATransactionRequestResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgFulfilICATransactionRequestResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgFulfilICATransactionRequestResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgFulfilICATransactionRequestResponse) New() protoreflect.Message {
	return new(fastReflection_MsgFulfilICATransactionRequestResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgFulfilICATransactionRequestResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgFulfilICATransactionRequestResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgFulfilICATransactionRequestResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgFulfilICATransactionRequestResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilICATransactionRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilICATransactionRequestResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFulfilICATransactionRequestResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilICATransactionRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilICATransactionRequestResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgFulfilICATransactionRequestResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilICATransactionRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilICATransactionRequestResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFulfilICATransactionRequestResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilICATransactionRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilICATransactionRequestResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFulfilICATransactionRequestResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilICATransactionRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilICATransactionRequestResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgFulfilICATransactionRequestResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgFulfilICATransactionRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgFulfilICATransactionRequestResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgFulfilICATransactionRequestResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.treasury.MsgFulfilICATransactionRequestResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgFulfilICATransactionRequestResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgFulfilICATransactionRequestResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgFulfilICATransactionRequestResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgFulfilICATransactionRequestResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgFulfilICATransactionRequestResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgFulfilICATransactionRequestResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgFulfilICATransactionRequestResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgFulfilICATransactionRequestResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgFulfilICATransactionRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgNewZrSignSignatureRequest                             protoreflect.MessageDescriptor
	fd_MsgNewZrSignSignatureRequest_creator                     protoreflect.FieldDescriptor
	fd_MsgNewZrSignSignatureRequest_address                     protoreflect.FieldDescriptor
	fd_MsgNewZrSignSignatureRequest_key_type                    protoreflect.FieldDescriptor
	fd_MsgNewZrSignSignatureRequest_wallet_index                protoreflect.FieldDescriptor
	fd_MsgNewZrSignSignatureRequest_cache_id                    protoreflect.FieldDescriptor
	fd_MsgNewZrSignSignatureRequest_data                        protoreflect.FieldDescriptor
	fd_MsgNewZrSignSignatureRequest_verify_signing_data         protoreflect.FieldDescriptor
	fd_MsgNewZrSignSignatureRequest_verify_signing_data_version protoreflect.FieldDescriptor
	fd_MsgNewZrSignSignatureRequest_wallet_type                 protoreflect.FieldDescriptor
	fd_MsgNewZrSignSignatureRequest_metadata                    protoreflect.FieldDescriptor
	fd_MsgNewZrSignSignatureRequest_no_broadcast                protoreflect.FieldDescriptor
	fd_MsgNewZrSignSignatureRequest_btl                         protoreflect.FieldDescriptor
	fd_MsgNewZrSignSignatureRequest_tx                          protoreflect.FieldDescriptor
)

func init() {
	file_zrchain_treasury_tx_proto_init()
	md_MsgNewZrSignSignatureRequest = File_zrchain_treasury_tx_proto.Messages().ByName("MsgNewZrSignSignatureRequest")
	fd_MsgNewZrSignSignatureRequest_creator = md_MsgNewZrSignSignatureRequest.Fields().ByName("creator")
	fd_MsgNewZrSignSignatureRequest_address = md_MsgNewZrSignSignatureRequest.Fields().ByName("address")
	fd_MsgNewZrSignSignatureRequest_key_type = md_MsgNewZrSignSignatureRequest.Fields().ByName("key_type")
	fd_MsgNewZrSignSignatureRequest_wallet_index = md_MsgNewZrSignSignatureRequest.Fields().ByName("wallet_index")
	fd_MsgNewZrSignSignatureRequest_cache_id = md_MsgNewZrSignSignatureRequest.Fields().ByName("cache_id")
	fd_MsgNewZrSignSignatureRequest_data = md_MsgNewZrSignSignatureRequest.Fields().ByName("data")
	fd_MsgNewZrSignSignatureRequest_verify_signing_data = md_MsgNewZrSignSignatureRequest.Fields().ByName("verify_signing_data")
	fd_MsgNewZrSignSignatureRequest_verify_signing_data_version = md_MsgNewZrSignSignatureRequest.Fields().ByName("verify_signing_data_version")
	fd_MsgNewZrSignSignatureRequest_wallet_type = md_MsgNewZrSignSignatureRequest.Fields().ByName("wallet_type")
	fd_MsgNewZrSignSignatureRequest_metadata = md_MsgNewZrSignSignatureRequest.Fields().ByName("metadata")
	fd_MsgNewZrSignSignatureRequest_no_broadcast = md_MsgNewZrSignSignatureRequest.Fields().ByName("no_broadcast")
	fd_MsgNewZrSignSignatureRequest_btl = md_MsgNewZrSignSignatureRequest.Fields().ByName("btl")
	fd_MsgNewZrSignSignatureRequest_tx = md_MsgNewZrSignSignatureRequest.Fields().ByName("tx")
}

var _ protoreflect.Message = (*fastReflection_MsgNewZrSignSignatureRequest)(nil)

type fastReflection_MsgNewZrSignSignatureRequest MsgNewZrSignSignatureRequest

func (x *MsgNewZrSignSignatureRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgNewZrSignSignatureRequest)(x)
}

func (x *MsgNewZrSignSignatureRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_treasury_tx_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgNewZrSignSignatureRequest_messageType fastReflection_MsgNewZrSignSignatureRequest_messageType
var _ protoreflect.MessageType = fastReflection_MsgNewZrSignSignatureRequest_messageType{}

type fastReflection_MsgNewZrSignSignatureRequest_messageType struct{}

func (x fastReflection_MsgNewZrSignSignatureRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgNewZrSignSignatureRequest)(nil)
}
func (x fastReflection_MsgNewZrSignSignatureRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgNewZrSignSignatureRequest)
}
func (x fastReflection_MsgNewZrSignSignatureRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNewZrSignSignatureRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgNewZrSignSignatureRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNewZrSignSignatureRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgNewZrSignSignatureRequest) Type() protoreflect.MessageType {
	return _fastReflection_MsgNewZrSignSignatureRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgNewZrSignSignatureRequest) New() protoreflect.Message {
	return new(fastReflection_MsgNewZrSignSignatureRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgNewZrSignSignatureRequest) Interface() protoreflect.ProtoMessage {
	return (*MsgNewZrSignSignatureRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgNewZrSignSignatureRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgNewZrSignSignatureRequest_creator, value) {
			return
		}
	}
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_MsgNewZrSignSignatureRequest_address, value) {
			return
		}
	}
	if x.KeyType != uint64(0) {
		value := protoreflect.ValueOfUint64(x.KeyType)
		if !f(fd_MsgNewZrSignSignatureRequest_key_type, value) {
			return
		}
	}
	if x.WalletIndex != uint64(0) {
		value := protoreflect.ValueOfUint64(x.WalletIndex)
		if !f(fd_MsgNewZrSignSignatureRequest_wallet_index, value) {
			return
		}
	}
	if len(x.CacheId) != 0 {
		value := protoreflect.ValueOfBytes(x.CacheId)
		if !f(fd_MsgNewZrSignSignatureRequest_cache_id, value) {
			return
		}
	}
	if x.Data != "" {
		value := protoreflect.ValueOfString(x.Data)
		if !f(fd_MsgNewZrSignSignatureRequest_data, value) {
			return
		}
	}
	if len(x.VerifySigningData) != 0 {
		value := protoreflect.ValueOfBytes(x.VerifySigningData)
		if !f(fd_MsgNewZrSignSignatureRequest_verify_signing_data, value) {
			return
		}
	}
	if x.VerifySigningDataVersion != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.VerifySigningDataVersion))
		if !f(fd_MsgNewZrSignSignatureRequest_verify_signing_data_version, value) {
			return
		}
	}
	if x.WalletType != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.WalletType))
		if !f(fd_MsgNewZrSignSignatureRequest_wallet_type, value) {
			return
		}
	}
	if x.Metadata != nil {
		value := protoreflect.ValueOfMessage(x.Metadata.ProtoReflect())
		if !f(fd_MsgNewZrSignSignatureRequest_metadata, value) {
			return
		}
	}
	if x.NoBroadcast != false {
		value := protoreflect.ValueOfBool(x.NoBroadcast)
		if !f(fd_MsgNewZrSignSignatureRequest_no_broadcast, value) {
			return
		}
	}
	if x.Btl != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Btl)
		if !f(fd_MsgNewZrSignSignatureRequest_btl, value) {
			return
		}
	}
	if x.Tx != false {
		value := protoreflect.ValueOfBool(x.Tx)
		if !f(fd_MsgNewZrSignSignatureRequest_tx, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgNewZrSignSignatureRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.creator":
		return x.Creator != ""
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.address":
		return x.Address != ""
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.key_type":
		return x.KeyType != uint64(0)
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.wallet_index":
		return x.WalletIndex != uint64(0)
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.cache_id":
		return len(x.CacheId) != 0
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.data":
		return x.Data != ""
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.verify_signing_data":
		return len(x.VerifySigningData) != 0
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.verify_signing_data_version":
		return x.VerifySigningDataVersion != 0
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.wallet_type":
		return x.WalletType != 0
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.metadata":
		return x.Metadata != nil
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.no_broadcast":
		return x.NoBroadcast != false
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.btl":
		return x.Btl != uint64(0)
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.tx":
		return x.Tx != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewZrSignSignatureRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewZrSignSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewZrSignSignatureRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.creator":
		x.Creator = ""
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.address":
		x.Address = ""
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.key_type":
		x.KeyType = uint64(0)
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.wallet_index":
		x.WalletIndex = uint64(0)
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.cache_id":
		x.CacheId = nil
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.data":
		x.Data = ""
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.verify_signing_data":
		x.VerifySigningData = nil
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.verify_signing_data_version":
		x.VerifySigningDataVersion = 0
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.wallet_type":
		x.WalletType = 0
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.metadata":
		x.Metadata = nil
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.no_broadcast":
		x.NoBroadcast = false
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.btl":
		x.Btl = uint64(0)
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.tx":
		x.Tx = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewZrSignSignatureRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewZrSignSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgNewZrSignSignatureRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.key_type":
		value := x.KeyType
		return protoreflect.ValueOfUint64(value)
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.wallet_index":
		value := x.WalletIndex
		return protoreflect.ValueOfUint64(value)
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.cache_id":
		value := x.CacheId
		return protoreflect.ValueOfBytes(value)
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.data":
		value := x.Data
		return protoreflect.ValueOfString(value)
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.verify_signing_data":
		value := x.VerifySigningData
		return protoreflect.ValueOfBytes(value)
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.verify_signing_data_version":
		value := x.VerifySigningDataVersion
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.wallet_type":
		value := x.WalletType
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.metadata":
		value := x.Metadata
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.no_broadcast":
		value := x.NoBroadcast
		return protoreflect.ValueOfBool(value)
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.btl":
		value := x.Btl
		return protoreflect.ValueOfUint64(value)
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.tx":
		value := x.Tx
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewZrSignSignatureRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewZrSignSignatureRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewZrSignSignatureRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.creator":
		x.Creator = value.Interface().(string)
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.address":
		x.Address = value.Interface().(string)
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.key_type":
		x.KeyType = value.Uint()
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.wallet_index":
		x.WalletIndex = value.Uint()
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.cache_id":
		x.CacheId = value.Bytes()
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.data":
		x.Data = value.Interface().(string)
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.verify_signing_data":
		x.VerifySigningData = value.Bytes()
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.verify_signing_data_version":
		x.VerifySigningDataVersion = (VerificationVersion)(value.Enum())
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.wallet_type":
		x.WalletType = (WalletType)(value.Enum())
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.metadata":
		x.Metadata = value.Message().Interface().(*anypb.Any)
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.no_broadcast":
		x.NoBroadcast = value.Bool()
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.btl":
		x.Btl = value.Uint()
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.tx":
		x.Tx = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewZrSignSignatureRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewZrSignSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewZrSignSignatureRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.metadata":
		if x.Metadata == nil {
			x.Metadata = new(anypb.Any)
		}
		return protoreflect.ValueOfMessage(x.Metadata.ProtoReflect())
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.creator":
		panic(fmt.Errorf("field creator of message zrchain.treasury.MsgNewZrSignSignatureRequest is not mutable"))
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.address":
		panic(fmt.Errorf("field address of message zrchain.treasury.MsgNewZrSignSignatureRequest is not mutable"))
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.key_type":
		panic(fmt.Errorf("field key_type of message zrchain.treasury.MsgNewZrSignSignatureRequest is not mutable"))
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.wallet_index":
		panic(fmt.Errorf("field wallet_index of message zrchain.treasury.MsgNewZrSignSignatureRequest is not mutable"))
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.cache_id":
		panic(fmt.Errorf("field cache_id of message zrchain.treasury.MsgNewZrSignSignatureRequest is not mutable"))
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.data":
		panic(fmt.Errorf("field data of message zrchain.treasury.MsgNewZrSignSignatureRequest is not mutable"))
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.verify_signing_data":
		panic(fmt.Errorf("field verify_signing_data of message zrchain.treasury.MsgNewZrSignSignatureRequest is not mutable"))
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.verify_signing_data_version":
		panic(fmt.Errorf("field verify_signing_data_version of message zrchain.treasury.MsgNewZrSignSignatureRequest is not mutable"))
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.wallet_type":
		panic(fmt.Errorf("field wallet_type of message zrchain.treasury.MsgNewZrSignSignatureRequest is not mutable"))
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.no_broadcast":
		panic(fmt.Errorf("field no_broadcast of message zrchain.treasury.MsgNewZrSignSignatureRequest is not mutable"))
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.btl":
		panic(fmt.Errorf("field btl of message zrchain.treasury.MsgNewZrSignSignatureRequest is not mutable"))
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.tx":
		panic(fmt.Errorf("field tx of message zrchain.treasury.MsgNewZrSignSignatureRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewZrSignSignatureRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewZrSignSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgNewZrSignSignatureRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.creator":
		return protoreflect.ValueOfString("")
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.address":
		return protoreflect.ValueOfString("")
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.key_type":
		return protoreflect.ValueOfUint64(uint64(0))
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.wallet_index":
		return protoreflect.ValueOfUint64(uint64(0))
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.cache_id":
		return protoreflect.ValueOfBytes(nil)
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.data":
		return protoreflect.ValueOfString("")
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.verify_signing_data":
		return protoreflect.ValueOfBytes(nil)
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.verify_signing_data_version":
		return protoreflect.ValueOfEnum(0)
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.wallet_type":
		return protoreflect.ValueOfEnum(0)
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.metadata":
		m := new(anypb.Any)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.no_broadcast":
		return protoreflect.ValueOfBool(false)
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.btl":
		return protoreflect.ValueOfUint64(uint64(0))
	case "zrchain.treasury.MsgNewZrSignSignatureRequest.tx":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewZrSignSignatureRequest"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewZrSignSignatureRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgNewZrSignSignatureRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.treasury.MsgNewZrSignSignatureRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgNewZrSignSignatureRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewZrSignSignatureRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgNewZrSignSignatureRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgNewZrSignSignatureRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgNewZrSignSignatureRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.KeyType != 0 {
			n += 1 + runtime.Sov(uint64(x.KeyType))
		}
		if x.WalletIndex != 0 {
			n += 1 + runtime.Sov(uint64(x.WalletIndex))
		}
		l = len(x.CacheId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Data)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.VerifySigningData)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.VerifySigningDataVersion != 0 {
			n += 1 + runtime.Sov(uint64(x.VerifySigningDataVersion))
		}
		if x.WalletType != 0 {
			n += 1 + runtime.Sov(uint64(x.WalletType))
		}
		if x.Metadata != nil {
			l = options.Size(x.Metadata)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.NoBroadcast {
			n += 2
		}
		if x.Btl != 0 {
			n += 1 + runtime.Sov(uint64(x.Btl))
		}
		if x.Tx {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgNewZrSignSignatureRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Tx {
			i--
			if x.Tx {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x68
		}
		if x.Btl != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Btl))
			i--
			dAtA[i] = 0x60
		}
		if x.NoBroadcast {
			i--
			if x.NoBroadcast {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x58
		}
		if x.Metadata != nil {
			encoded, err := options.Marshal(x.Metadata)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x52
		}
		if x.WalletType != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.WalletType))
			i--
			dAtA[i] = 0x48
		}
		if x.VerifySigningDataVersion != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.VerifySigningDataVersion))
			i--
			dAtA[i] = 0x40
		}
		if len(x.VerifySigningData) > 0 {
			i -= len(x.VerifySigningData)
			copy(dAtA[i:], x.VerifySigningData)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.VerifySigningData)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.Data) > 0 {
			i -= len(x.Data)
			copy(dAtA[i:], x.Data)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Data)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.CacheId) > 0 {
			i -= len(x.CacheId)
			copy(dAtA[i:], x.CacheId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CacheId)))
			i--
			dAtA[i] = 0x2a
		}
		if x.WalletIndex != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.WalletIndex))
			i--
			dAtA[i] = 0x20
		}
		if x.KeyType != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.KeyType))
			i--
			dAtA[i] = 0x18
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgNewZrSignSignatureRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNewZrSignSignatureRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNewZrSignSignatureRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KeyType", wireType)
				}
				x.KeyType = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.KeyType |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field WalletIndex", wireType)
				}
				x.WalletIndex = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.WalletIndex |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CacheId", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CacheId = append(x.CacheId[:0], dAtA[iNdEx:postIndex]...)
				if x.CacheId == nil {
					x.CacheId = []byte{}
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Data = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VerifySigningData", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.VerifySigningData = append(x.VerifySigningData[:0], dAtA[iNdEx:postIndex]...)
				if x.VerifySigningData == nil {
					x.VerifySigningData = []byte{}
				}
				iNdEx = postIndex
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VerifySigningDataVersion", wireType)
				}
				x.VerifySigningDataVersion = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.VerifySigningDataVersion |= VerificationVersion(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field WalletType", wireType)
				}
				x.WalletType = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.WalletType |= WalletType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Metadata == nil {
					x.Metadata = &anypb.Any{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Metadata); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 11:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NoBroadcast", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.NoBroadcast = bool(v != 0)
			case 12:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Btl", wireType)
				}
				x.Btl = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Btl |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 13:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Tx", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Tx = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgNewZrSignSignatureRequestResponse        protoreflect.MessageDescriptor
	fd_MsgNewZrSignSignatureRequestResponse_req_id protoreflect.FieldDescriptor
)

func init() {
	file_zrchain_treasury_tx_proto_init()
	md_MsgNewZrSignSignatureRequestResponse = File_zrchain_treasury_tx_proto.Messages().ByName("MsgNewZrSignSignatureRequestResponse")
	fd_MsgNewZrSignSignatureRequestResponse_req_id = md_MsgNewZrSignSignatureRequestResponse.Fields().ByName("req_id")
}

var _ protoreflect.Message = (*fastReflection_MsgNewZrSignSignatureRequestResponse)(nil)

type fastReflection_MsgNewZrSignSignatureRequestResponse MsgNewZrSignSignatureRequestResponse

func (x *MsgNewZrSignSignatureRequestResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgNewZrSignSignatureRequestResponse)(x)
}

func (x *MsgNewZrSignSignatureRequestResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_treasury_tx_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgNewZrSignSignatureRequestResponse_messageType fastReflection_MsgNewZrSignSignatureRequestResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgNewZrSignSignatureRequestResponse_messageType{}

type fastReflection_MsgNewZrSignSignatureRequestResponse_messageType struct{}

func (x fastReflection_MsgNewZrSignSignatureRequestResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgNewZrSignSignatureRequestResponse)(nil)
}
func (x fastReflection_MsgNewZrSignSignatureRequestResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgNewZrSignSignatureRequestResponse)
}
func (x fastReflection_MsgNewZrSignSignatureRequestResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNewZrSignSignatureRequestResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgNewZrSignSignatureRequestResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgNewZrSignSignatureRequestResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgNewZrSignSignatureRequestResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgNewZrSignSignatureRequestResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgNewZrSignSignatureRequestResponse) New() protoreflect.Message {
	return new(fastReflection_MsgNewZrSignSignatureRequestResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgNewZrSignSignatureRequestResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgNewZrSignSignatureRequestResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgNewZrSignSignatureRequestResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ReqId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ReqId)
		if !f(fd_MsgNewZrSignSignatureRequestResponse_req_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgNewZrSignSignatureRequestResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewZrSignSignatureRequestResponse.req_id":
		return x.ReqId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewZrSignSignatureRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewZrSignSignatureRequestResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewZrSignSignatureRequestResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewZrSignSignatureRequestResponse.req_id":
		x.ReqId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewZrSignSignatureRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewZrSignSignatureRequestResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgNewZrSignSignatureRequestResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "zrchain.treasury.MsgNewZrSignSignatureRequestResponse.req_id":
		value := x.ReqId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewZrSignSignatureRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewZrSignSignatureRequestResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewZrSignSignatureRequestResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewZrSignSignatureRequestResponse.req_id":
		x.ReqId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewZrSignSignatureRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewZrSignSignatureRequestResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewZrSignSignatureRequestResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewZrSignSignatureRequestResponse.req_id":
		panic(fmt.Errorf("field req_id of message zrchain.treasury.MsgNewZrSignSignatureRequestResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewZrSignSignatureRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewZrSignSignatureRequestResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgNewZrSignSignatureRequestResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgNewZrSignSignatureRequestResponse.req_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgNewZrSignSignatureRequestResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgNewZrSignSignatureRequestResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgNewZrSignSignatureRequestResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.treasury.MsgNewZrSignSignatureRequestResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgNewZrSignSignatureRequestResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgNewZrSignSignatureRequestResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgNewZrSignSignatureRequestResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgNewZrSignSignatureRequestResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgNewZrSignSignatureRequestResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ReqId != 0 {
			n += 1 + runtime.Sov(uint64(x.ReqId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgNewZrSignSignatureRequestResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.ReqId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ReqId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgNewZrSignSignatureRequestResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNewZrSignSignatureRequestResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgNewZrSignSignatureRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ReqId", wireType)
				}
				x.ReqId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ReqId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpdateKeyPolicy                protoreflect.MessageDescriptor
	fd_MsgUpdateKeyPolicy_creator        protoreflect.FieldDescriptor
	fd_MsgUpdateKeyPolicy_key_id         protoreflect.FieldDescriptor
	fd_MsgUpdateKeyPolicy_sign_policy_id protoreflect.FieldDescriptor
)

func init() {
	file_zrchain_treasury_tx_proto_init()
	md_MsgUpdateKeyPolicy = File_zrchain_treasury_tx_proto.Messages().ByName("MsgUpdateKeyPolicy")
	fd_MsgUpdateKeyPolicy_creator = md_MsgUpdateKeyPolicy.Fields().ByName("creator")
	fd_MsgUpdateKeyPolicy_key_id = md_MsgUpdateKeyPolicy.Fields().ByName("key_id")
	fd_MsgUpdateKeyPolicy_sign_policy_id = md_MsgUpdateKeyPolicy.Fields().ByName("sign_policy_id")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateKeyPolicy)(nil)

type fastReflection_MsgUpdateKeyPolicy MsgUpdateKeyPolicy

func (x *MsgUpdateKeyPolicy) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateKeyPolicy)(x)
}

func (x *MsgUpdateKeyPolicy) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_treasury_tx_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateKeyPolicy_messageType fastReflection_MsgUpdateKeyPolicy_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateKeyPolicy_messageType{}

type fastReflection_MsgUpdateKeyPolicy_messageType struct{}

func (x fastReflection_MsgUpdateKeyPolicy_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateKeyPolicy)(nil)
}
func (x fastReflection_MsgUpdateKeyPolicy_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateKeyPolicy)
}
func (x fastReflection_MsgUpdateKeyPolicy_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateKeyPolicy
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateKeyPolicy) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateKeyPolicy
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateKeyPolicy) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateKeyPolicy_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateKeyPolicy) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateKeyPolicy)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateKeyPolicy) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateKeyPolicy)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateKeyPolicy) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgUpdateKeyPolicy_creator, value) {
			return
		}
	}
	if x.KeyId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.KeyId)
		if !f(fd_MsgUpdateKeyPolicy_key_id, value) {
			return
		}
	}
	if x.SignPolicyId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.SignPolicyId)
		if !f(fd_MsgUpdateKeyPolicy_sign_policy_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateKeyPolicy) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "zrchain.treasury.MsgUpdateKeyPolicy.creator":
		return x.Creator != ""
	case "zrchain.treasury.MsgUpdateKeyPolicy.key_id":
		return x.KeyId != uint64(0)
	case "zrchain.treasury.MsgUpdateKeyPolicy.sign_policy_id":
		return x.SignPolicyId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgUpdateKeyPolicy"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgUpdateKeyPolicy does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateKeyPolicy) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgUpdateKeyPolicy.creator":
		x.Creator = ""
	case "zrchain.treasury.MsgUpdateKeyPolicy.key_id":
		x.KeyId = uint64(0)
	case "zrchain.treasury.MsgUpdateKeyPolicy.sign_policy_id":
		x.SignPolicyId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgUpdateKeyPolicy"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgUpdateKeyPolicy does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateKeyPolicy) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "zrchain.treasury.MsgUpdateKeyPolicy.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "zrchain.treasury.MsgUpdateKeyPolicy.key_id":
		value := x.KeyId
		return protoreflect.ValueOfUint64(value)
	case "zrchain.treasury.MsgUpdateKeyPolicy.sign_policy_id":
		value := x.SignPolicyId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgUpdateKeyPolicy"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgUpdateKeyPolicy does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateKeyPolicy) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "zrchain.treasury.MsgUpdateKeyPolicy.creator":
		x.Creator = value.Interface().(string)
	case "zrchain.treasury.MsgUpdateKeyPolicy.key_id":
		x.KeyId = value.Uint()
	case "zrchain.treasury.MsgUpdateKeyPolicy.sign_policy_id":
		x.SignPolicyId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgUpdateKeyPolicy"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgUpdateKeyPolicy does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateKeyPolicy) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgUpdateKeyPolicy.creator":
		panic(fmt.Errorf("field creator of message zrchain.treasury.MsgUpdateKeyPolicy is not mutable"))
	case "zrchain.treasury.MsgUpdateKeyPolicy.key_id":
		panic(fmt.Errorf("field key_id of message zrchain.treasury.MsgUpdateKeyPolicy is not mutable"))
	case "zrchain.treasury.MsgUpdateKeyPolicy.sign_policy_id":
		panic(fmt.Errorf("field sign_policy_id of message zrchain.treasury.MsgUpdateKeyPolicy is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgUpdateKeyPolicy"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgUpdateKeyPolicy does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateKeyPolicy) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "zrchain.treasury.MsgUpdateKeyPolicy.creator":
		return protoreflect.ValueOfString("")
	case "zrchain.treasury.MsgUpdateKeyPolicy.key_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "zrchain.treasury.MsgUpdateKeyPolicy.sign_policy_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgUpdateKeyPolicy"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgUpdateKeyPolicy does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateKeyPolicy) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.treasury.MsgUpdateKeyPolicy", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateKeyPolicy) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateKeyPolicy) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateKeyPolicy) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateKeyPolicy) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateKeyPolicy)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.KeyId != 0 {
			n += 1 + runtime.Sov(uint64(x.KeyId))
		}
		if x.SignPolicyId != 0 {
			n += 1 + runtime.Sov(uint64(x.SignPolicyId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateKeyPolicy)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.SignPolicyId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SignPolicyId))
			i--
			dAtA[i] = 0x18
		}
		if x.KeyId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.KeyId))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateKeyPolicy)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateKeyPolicy: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateKeyPolicy: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field KeyId", wireType)
				}
				x.KeyId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.KeyId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SignPolicyId", wireType)
				}
				x.SignPolicyId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SignPolicyId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpdateKeyPolicyResponse protoreflect.MessageDescriptor
)

func init() {
	file_zrchain_treasury_tx_proto_init()
	md_MsgUpdateKeyPolicyResponse = File_zrchain_treasury_tx_proto.Messages().ByName("MsgUpdateKeyPolicyResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateKeyPolicyResponse)(nil)

type fastReflection_MsgUpdateKeyPolicyResponse MsgUpdateKeyPolicyResponse

func (x *MsgUpdateKeyPolicyResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateKeyPolicyResponse)(x)
}

func (x *MsgUpdateKeyPolicyResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_zrchain_treasury_tx_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateKeyPolicyResponse_messageType fastReflection_MsgUpdateKeyPolicyResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateKeyPolicyResponse_messageType{}

type fastReflection_MsgUpdateKeyPolicyResponse_messageType struct{}

func (x fastReflection_MsgUpdateKeyPolicyResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateKeyPolicyResponse)(nil)
}
func (x fastReflection_MsgUpdateKeyPolicyResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateKeyPolicyResponse)
}
func (x fastReflection_MsgUpdateKeyPolicyResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateKeyPolicyResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateKeyPolicyResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateKeyPolicyResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateKeyPolicyResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateKeyPolicyResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateKeyPolicyResponse) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateKeyPolicyResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateKeyPolicyResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateKeyPolicyResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateKeyPolicyResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateKeyPolicyResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgUpdateKeyPolicyResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgUpdateKeyPolicyResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateKeyPolicyResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgUpdateKeyPolicyResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgUpdateKeyPolicyResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateKeyPolicyResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgUpdateKeyPolicyResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgUpdateKeyPolicyResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateKeyPolicyResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgUpdateKeyPolicyResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgUpdateKeyPolicyResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateKeyPolicyResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgUpdateKeyPolicyResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgUpdateKeyPolicyResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateKeyPolicyResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: zrchain.treasury.MsgUpdateKeyPolicyResponse"))
		}
		panic(fmt.Errorf("message zrchain.treasury.MsgUpdateKeyPolicyResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateKeyPolicyResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in zrchain.treasury.MsgUpdateKeyPolicyResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateKeyPolicyResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateKeyPolicyResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateKeyPolicyResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateKeyPolicyResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateKeyPolicyResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateKeyPolicyResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateKeyPolicyResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateKeyPolicyResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateKeyPolicyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: zrchain/treasury/tx.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Verification contains any data required to verify the incoming
// data_fop_signing 1st case is to check the sighashes generated from the
// supplied Bitcoin TX are correct
type VerificationVersion int32

const (
	VerificationVersion_UNKNOWN      VerificationVersion = 0
	VerificationVersion_BITCOIN_PLUS VerificationVersion = 1
)

// Enum value maps for VerificationVersion.
var (
	VerificationVersion_name = map[int32]string{
		0: "UNKNOWN",
		1: "BITCOIN_PLUS",
	}
	VerificationVersion_value = map[string]int32{
		"UNKNOWN":      0,
		"BITCOIN_PLUS": 1,
	}
)

func (x VerificationVersion) Enum() *VerificationVersion {
	p := new(VerificationVersion)
	*p = x
	return p
}

func (x VerificationVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VerificationVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_zrchain_treasury_tx_proto_enumTypes[0].Descriptor()
}

func (VerificationVersion) Type() protoreflect.EnumType {
	return &file_zrchain_treasury_tx_proto_enumTypes[0]
}

func (x VerificationVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VerificationVersion.Descriptor instead.
func (VerificationVersion) EnumDescriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{0}
}

// Define an enum for Solana network types
type SolanaNetworkType int32

const (
	SolanaNetworkType_UNDEFINED SolanaNetworkType = 0
	SolanaNetworkType_MAINNET   SolanaNetworkType = 1
	SolanaNetworkType_DEVNET    SolanaNetworkType = 2
	SolanaNetworkType_TESTNET   SolanaNetworkType = 3
)

// Enum value maps for SolanaNetworkType.
var (
	SolanaNetworkType_name = map[int32]string{
		0: "UNDEFINED",
		1: "MAINNET",
		2: "DEVNET",
		3: "TESTNET",
	}
	SolanaNetworkType_value = map[string]int32{
		"UNDEFINED": 0,
		"MAINNET":   1,
		"DEVNET":    2,
		"TESTNET":   3,
	}
)

func (x SolanaNetworkType) Enum() *SolanaNetworkType {
	p := new(SolanaNetworkType)
	*p = x
	return p
}

func (x SolanaNetworkType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SolanaNetworkType) Descriptor() protoreflect.EnumDescriptor {
	return file_zrchain_treasury_tx_proto_enumTypes[1].Descriptor()
}

func (SolanaNetworkType) Type() protoreflect.EnumType {
	return &file_zrchain_treasury_tx_proto_enumTypes[1]
}

func (x SolanaNetworkType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SolanaNetworkType.Descriptor instead.
func (SolanaNetworkType) EnumDescriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{1}
}

// MsgUpdateParams is the Msg/UpdateParams request type.
type MsgUpdateParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// authority is the address that controls the module (defaults to x/gov unless
	// overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// NOTE: All parameters must be supplied.
	Params *Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *MsgUpdateParams) Reset() {
	*x = MsgUpdateParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_treasury_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateParams) ProtoMessage() {}

// Deprecated: Use MsgUpdateParams.ProtoReflect.Descriptor instead.
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgUpdateParams) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

func (x *MsgUpdateParams) GetParams() *Params {
	if x != nil {
		return x.Params
	}
	return nil
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
type MsgUpdateParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateParamsResponse) Reset() {
	*x = MsgUpdateParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_treasury_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateParamsResponse) ProtoMessage() {}

// Deprecated: Use MsgUpdateParamsResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{1}
}

// MsgNewKeyRequest is the Msg/NewKeyRequest request type.
type MsgNewKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator        string          `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	WorkspaceAddr  string          `protobuf:"bytes,2,opt,name=workspace_addr,json=workspaceAddr,proto3" json:"workspace_addr,omitempty"`
	KeyringAddr    string          `protobuf:"bytes,3,opt,name=keyring_addr,json=keyringAddr,proto3" json:"keyring_addr,omitempty"`
	KeyType        string          `protobuf:"bytes,4,opt,name=key_type,json=keyType,proto3" json:"key_type,omitempty"`
	Btl            uint64          `protobuf:"varint,5,opt,name=btl,proto3" json:"btl,omitempty"`
	Index          uint64          `protobuf:"varint,6,opt,name=index,proto3" json:"index,omitempty"`
	ExtRequester   string          `protobuf:"bytes,7,opt,name=ext_requester,json=extRequester,proto3" json:"ext_requester,omitempty"`
	ExtKeyType     uint64          `protobuf:"varint,8,opt,name=ext_key_type,json=extKeyType,proto3" json:"ext_key_type,omitempty"`
	SignPolicyId   uint64          `protobuf:"varint,9,opt,name=sign_policy_id,json=signPolicyId,proto3" json:"sign_policy_id,omitempty"`
	ZenbtcMetadata *ZenBTCMetadata `protobuf:"bytes,10,opt,name=zenbtc_metadata,json=zenbtcMetadata,proto3" json:"zenbtc_metadata,omitempty"` // Optional
}

func (x *MsgNewKeyRequest) Reset() {
	*x = MsgNewKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_treasury_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgNewKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgNewKeyRequest) ProtoMessage() {}

// Deprecated: Use MsgNewKeyRequest.ProtoReflect.Descriptor instead.
func (*MsgNewKeyRequest) Descriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgNewKeyRequest) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgNewKeyRequest) GetWorkspaceAddr() string {
	if x != nil {
		return x.WorkspaceAddr
	}
	return ""
}

func (x *MsgNewKeyRequest) GetKeyringAddr() string {
	if x != nil {
		return x.KeyringAddr
	}
	return ""
}

func (x *MsgNewKeyRequest) GetKeyType() string {
	if x != nil {
		return x.KeyType
	}
	return ""
}

func (x *MsgNewKeyRequest) GetBtl() uint64 {
	if x != nil {
		return x.Btl
	}
	return 0
}

func (x *MsgNewKeyRequest) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *MsgNewKeyRequest) GetExtRequester() string {
	if x != nil {
		return x.ExtRequester
	}
	return ""
}

func (x *MsgNewKeyRequest) GetExtKeyType() uint64 {
	if x != nil {
		return x.ExtKeyType
	}
	return 0
}

func (x *MsgNewKeyRequest) GetSignPolicyId() uint64 {
	if x != nil {
		return x.SignPolicyId
	}
	return 0
}

func (x *MsgNewKeyRequest) GetZenbtcMetadata() *ZenBTCMetadata {
	if x != nil {
		return x.ZenbtcMetadata
	}
	return nil
}

// MsgNewKeyRequestResponse defines the response structure for executing a
// MsgNewKeyRequest message.
type MsgNewKeyRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyReqId uint64 `protobuf:"varint,1,opt,name=key_req_id,json=keyReqId,proto3" json:"key_req_id,omitempty"`
}

func (x *MsgNewKeyRequestResponse) Reset() {
	*x = MsgNewKeyRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_treasury_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgNewKeyRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgNewKeyRequestResponse) ProtoMessage() {}

// Deprecated: Use MsgNewKeyRequestResponse.ProtoReflect.Descriptor instead.
func (*MsgNewKeyRequestResponse) Descriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{3}
}

func (x *MsgNewKeyRequestResponse) GetKeyReqId() uint64 {
	if x != nil {
		return x.KeyReqId
	}
	return 0
}

// MsgFulfilKeyRequest is the Msg/FulfilKeyRequest request type.
type MsgFulfilKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator   string           `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RequestId uint64           `protobuf:"varint,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Status    KeyRequestStatus `protobuf:"varint,3,opt,name=status,proto3,enum=zrchain.treasury.KeyRequestStatus" json:"status,omitempty"`
	// Holds the result of the request. If status is approved, the result will
	// contain the requested key's public key that can be used for signing
	// payloads.
	// If status is rejected, the result will contain the reason.
	//
	// Types that are assignable to Result:
	//
	//	*MsgFulfilKeyRequest_Key
	//	*MsgFulfilKeyRequest_RejectReason
	Result                isMsgFulfilKeyRequest_Result `protobuf_oneof:"result"`
	KeyringPartySignature []byte                       `protobuf:"bytes,6,opt,name=keyring_party_signature,json=keyringPartySignature,proto3" json:"keyring_party_signature,omitempty"`
}

func (x *MsgFulfilKeyRequest) Reset() {
	*x = MsgFulfilKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_treasury_tx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgFulfilKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgFulfilKeyRequest) ProtoMessage() {}

// Deprecated: Use MsgFulfilKeyRequest.ProtoReflect.Descriptor instead.
func (*MsgFulfilKeyRequest) Descriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{4}
}

func (x *MsgFulfilKeyRequest) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgFulfilKeyRequest) GetRequestId() uint64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *MsgFulfilKeyRequest) GetStatus() KeyRequestStatus {
	if x != nil {
		return x.Status
	}
	return KeyRequestStatus_KEY_REQUEST_STATUS_UNSPECIFIED
}

func (x *MsgFulfilKeyRequest) GetResult() isMsgFulfilKeyRequest_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *MsgFulfilKeyRequest) GetKey() *MsgNewKey {
	if x, ok := x.GetResult().(*MsgFulfilKeyRequest_Key); ok {
		return x.Key
	}
	return nil
}

func (x *MsgFulfilKeyRequest) GetRejectReason() string {
	if x, ok := x.GetResult().(*MsgFulfilKeyRequest_RejectReason); ok {
		return x.RejectReason
	}
	return ""
}

func (x *MsgFulfilKeyRequest) GetKeyringPartySignature() []byte {
	if x != nil {
		return x.KeyringPartySignature
	}
	return nil
}

type isMsgFulfilKeyRequest_Result interface {
	isMsgFulfilKeyRequest_Result()
}

type MsgFulfilKeyRequest_Key struct {
	Key *MsgNewKey `protobuf:"bytes,4,opt,name=key,proto3,oneof"`
}

type MsgFulfilKeyRequest_RejectReason struct {
	RejectReason string `protobuf:"bytes,5,opt,name=reject_reason,json=rejectReason,proto3,oneof"`
}

func (*MsgFulfilKeyRequest_Key) isMsgFulfilKeyRequest_Result() {}

func (*MsgFulfilKeyRequest_RejectReason) isMsgFulfilKeyRequest_Result() {}

// MsgNewKey defines the attributes of a key
type MsgNewKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey []byte `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *MsgNewKey) Reset() {
	*x = MsgNewKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_treasury_tx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgNewKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgNewKey) ProtoMessage() {}

// Deprecated: Use MsgNewKey.ProtoReflect.Descriptor instead.
func (*MsgNewKey) Descriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{5}
}

func (x *MsgNewKey) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

// MsgNewKeyRequestResponse defines the response structure for executing a
// MsgNewKeyRequest message.
type MsgFulfilKeyRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgFulfilKeyRequestResponse) Reset() {
	*x = MsgFulfilKeyRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_treasury_tx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgFulfilKeyRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgFulfilKeyRequestResponse) ProtoMessage() {}

// Deprecated: Use MsgFulfilKeyRequestResponse.ProtoReflect.Descriptor instead.
func (*MsgFulfilKeyRequestResponse) Descriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{6}
}

// MsgNewSignatureRequest is the Msg/NewSignatureRequest request type.
type MsgNewSignatureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator                  string              `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	KeyIds                   []uint64            `protobuf:"varint,2,rep,packed,name=key_ids,json=keyIds,proto3" json:"key_ids,omitempty"`
	DataForSigning           string              `protobuf:"bytes,3,opt,name=data_for_signing,json=dataForSigning,proto3" json:"data_for_signing,omitempty"`
	Btl                      uint64              `protobuf:"varint,4,opt,name=btl,proto3" json:"btl,omitempty"`
	CacheId                  []byte              `protobuf:"bytes,5,opt,name=cache_id,json=cacheId,proto3" json:"cache_id,omitempty"`
	VerifySigningData        []byte              `protobuf:"bytes,6,opt,name=verify_signing_data,json=verifySigningData,proto3" json:"verify_signing_data,omitempty"`
	VerifySigningDataVersion VerificationVersion `protobuf:"varint,7,opt,name=verify_signing_data_version,json=verifySigningDataVersion,proto3,enum=zrchain.treasury.VerificationVersion" json:"verify_signing_data_version,omitempty"`
}

func (x *MsgNewSignatureRequest) Reset() {
	*x = MsgNewSignatureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_treasury_tx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgNewSignatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgNewSignatureRequest) ProtoMessage() {}

// Deprecated: Use MsgNewSignatureRequest.ProtoReflect.Descriptor instead.
func (*MsgNewSignatureRequest) Descriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{7}
}

func (x *MsgNewSignatureRequest) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgNewSignatureRequest) GetKeyIds() []uint64 {
	if x != nil {
		return x.KeyIds
	}
	return nil
}

func (x *MsgNewSignatureRequest) GetDataForSigning() string {
	if x != nil {
		return x.DataForSigning
	}
	return ""
}

func (x *MsgNewSignatureRequest) GetBtl() uint64 {
	if x != nil {
		return x.Btl
	}
	return 0
}

func (x *MsgNewSignatureRequest) GetCacheId() []byte {
	if x != nil {
		return x.CacheId
	}
	return nil
}

func (x *MsgNewSignatureRequest) GetVerifySigningData() []byte {
	if x != nil {
		return x.VerifySigningData
	}
	return nil
}

func (x *MsgNewSignatureRequest) GetVerifySigningDataVersion() VerificationVersion {
	if x != nil {
		return x.VerifySigningDataVersion
	}
	return VerificationVersion_UNKNOWN
}

// MsgNewKeyRequestResponse defines the response structure for executing a
// MsgNewKeyRequest message.
type MsgNewSignatureRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SigReqId uint64 `protobuf:"varint,1,opt,name=sig_req_id,json=sigReqId,proto3" json:"sig_req_id,omitempty"`
}

func (x *MsgNewSignatureRequestResponse) Reset() {
	*x = MsgNewSignatureRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_treasury_tx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgNewSignatureRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgNewSignatureRequestResponse) ProtoMessage() {}

// Deprecated: Use MsgNewSignatureRequestResponse.ProtoReflect.Descriptor instead.
func (*MsgNewSignatureRequestResponse) Descriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{8}
}

func (x *MsgNewSignatureRequestResponse) GetSigReqId() uint64 {
	if x != nil {
		return x.SigReqId
	}
	return 0
}

// MsgFulfilSignatureRequest is the Msg/NewSignatureRequest request type.
type MsgFulfilSignatureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator               string            `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RequestId             uint64            `protobuf:"varint,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Status                SignRequestStatus `protobuf:"varint,3,opt,name=status,proto3,enum=zrchain.treasury.SignRequestStatus" json:"status,omitempty"`
	KeyringPartySignature []byte            `protobuf:"bytes,4,opt,name=keyring_party_signature,json=keyringPartySignature,proto3" json:"keyring_party_signature,omitempty"`
	SignedData            []byte            `protobuf:"bytes,5,opt,name=signed_data,json=signedData,proto3" json:"signed_data,omitempty"`
	RejectReason          string            `protobuf:"bytes,6,opt,name=reject_reason,json=rejectReason,proto3" json:"reject_reason,omitempty"`
}

func (x *MsgFulfilSignatureRequest) Reset() {
	*x = MsgFulfilSignatureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_treasury_tx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgFulfilSignatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgFulfilSignatureRequest) ProtoMessage() {}

// Deprecated: Use MsgFulfilSignatureRequest.ProtoReflect.Descriptor instead.
func (*MsgFulfilSignatureRequest) Descriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{9}
}

func (x *MsgFulfilSignatureRequest) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgFulfilSignatureRequest) GetRequestId() uint64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *MsgFulfilSignatureRequest) GetStatus() SignRequestStatus {
	if x != nil {
		return x.Status
	}
	return SignRequestStatus_SIGN_REQUEST_STATUS_UNSPECIFIED
}

func (x *MsgFulfilSignatureRequest) GetKeyringPartySignature() []byte {
	if x != nil {
		return x.KeyringPartySignature
	}
	return nil
}

func (x *MsgFulfilSignatureRequest) GetSignedData() []byte {
	if x != nil {
		return x.SignedData
	}
	return nil
}

func (x *MsgFulfilSignatureRequest) GetRejectReason() string {
	if x != nil {
		return x.RejectReason
	}
	return ""
}

// MsgFulfilSignatureRequestResponse defines the response structure for
// executing a MsgFulfilSignatureRequest message.
type MsgFulfilSignatureRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgFulfilSignatureRequestResponse) Reset() {
	*x = MsgFulfilSignatureRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_treasury_tx_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgFulfilSignatureRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgFulfilSignatureRequestResponse) ProtoMessage() {}

// Deprecated: Use MsgFulfilSignatureRequestResponse.ProtoReflect.Descriptor instead.
func (*MsgFulfilSignatureRequestResponse) Descriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{10}
}

// MetadataEthereum defines the chain id
type MetadataEthereum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId uint64 `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
}

func (x *MetadataEthereum) Reset() {
	*x = MetadataEthereum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_treasury_tx_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataEthereum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataEthereum) ProtoMessage() {}

// Deprecated: Use MetadataEthereum.ProtoReflect.Descriptor instead.
func (*MetadataEthereum) Descriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{11}
}

func (x *MetadataEthereum) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

// MetadataSolana defines the network (i.e. mainnet, devnet, testnet) for a given transaction
type MetadataSolana struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network     SolanaNetworkType `protobuf:"varint,1,opt,name=network,proto3,enum=zrchain.treasury.SolanaNetworkType" json:"network,omitempty"`
	MintAddress string            `protobuf:"bytes,2,opt,name=mintAddress,proto3" json:"mintAddress,omitempty"`
}

func (x *MetadataSolana) Reset() {
	*x = MetadataSolana{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_treasury_tx_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataSolana) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataSolana) ProtoMessage() {}

// Deprecated: Use MetadataSolana.ProtoReflect.Descriptor instead.
func (*MetadataSolana) Descriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{12}
}

func (x *MetadataSolana) GetNetwork() SolanaNetworkType {
	if x != nil {
		return x.Network
	}
	return SolanaNetworkType_UNDEFINED
}

func (x *MetadataSolana) GetMintAddress() string {
	if x != nil {
		return x.MintAddress
	}
	return ""
}

// MsgNewSignTransactionRequest is the Msg/NewSignTransactionRequest request
// type.
type MsgNewSignTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator             string     `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	KeyId               uint64     `protobuf:"varint,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	WalletType          WalletType `protobuf:"varint,3,opt,name=wallet_type,json=walletType,proto3,enum=zrchain.treasury.WalletType" json:"wallet_type,omitempty"`
	UnsignedTransaction []byte     `protobuf:"bytes,4,opt,name=unsigned_transaction,json=unsignedTransaction,proto3" json:"unsigned_transaction,omitempty"`
	// Additional metadata required when parsing the unsigned transaction.
	Metadata    *anypb.Any `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Btl         uint64     `protobuf:"varint,6,opt,name=btl,proto3" json:"btl,omitempty"`
	CacheId     []byte     `protobuf:"bytes,7,opt,name=cache_id,json=cacheId,proto3" json:"cache_id,omitempty"`
	NoBroadcast bool       `protobuf:"varint,8,opt,name=no_broadcast,json=noBroadcast,proto3" json:"no_broadcast,omitempty"`
}

func (x *MsgNewSignTransactionRequest) Reset() {
	*x = MsgNewSignTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_treasury_tx_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgNewSignTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgNewSignTransactionRequest) ProtoMessage() {}

// Deprecated: Use MsgNewSignTransactionRequest.ProtoReflect.Descriptor instead.
func (*MsgNewSignTransactionRequest) Descriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{13}
}

func (x *MsgNewSignTransactionRequest) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgNewSignTransactionRequest) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *MsgNewSignTransactionRequest) GetWalletType() WalletType {
	if x != nil {
		return x.WalletType
	}
	return WalletType_WALLET_TYPE_UNSPECIFIED
}

func (x *MsgNewSignTransactionRequest) GetUnsignedTransaction() []byte {
	if x != nil {
		return x.UnsignedTransaction
	}
	return nil
}

func (x *MsgNewSignTransactionRequest) GetMetadata() *anypb.Any {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *MsgNewSignTransactionRequest) GetBtl() uint64 {
	if x != nil {
		return x.Btl
	}
	return 0
}

func (x *MsgNewSignTransactionRequest) GetCacheId() []byte {
	if x != nil {
		return x.CacheId
	}
	return nil
}

func (x *MsgNewSignTransactionRequest) GetNoBroadcast() bool {
	if x != nil {
		return x.NoBroadcast
	}
	return false
}

// MsgNewSignTransactionRequestResponse defines the response structure for
// executing a MsgNewSignTransactionRequest message.
type MsgNewSignTransactionRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SignatureRequestId uint64 `protobuf:"varint,2,opt,name=signature_request_id,json=signatureRequestId,proto3" json:"signature_request_id,omitempty"`
}

func (x *MsgNewSignTransactionRequestResponse) Reset() {
	*x = MsgNewSignTransactionRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_treasury_tx_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgNewSignTransactionRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgNewSignTransactionRequestResponse) ProtoMessage() {}

// Deprecated: Use MsgNewSignTransactionRequestResponse.ProtoReflect.Descriptor instead.
func (*MsgNewSignTransactionRequestResponse) Descriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{14}
}

func (x *MsgNewSignTransactionRequestResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MsgNewSignTransactionRequestResponse) GetSignatureRequestId() uint64 {
	if x != nil {
		return x.SignatureRequestId
	}
	return 0
}

// MsgTransferFromKeyring is the Msg/TransferFromKeyring request type.
type MsgTransferFromKeyring struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Keyring   string `protobuf:"bytes,2,opt,name=keyring,proto3" json:"keyring,omitempty"`
	Recipient string `protobuf:"bytes,3,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Amount    uint64 `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Denom     string `protobuf:"bytes,5,opt,name=denom,proto3" json:"denom,omitempty"`
}

func (x *MsgTransferFromKeyring) Reset() {
	*x = MsgTransferFromKeyring{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_treasury_tx_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgTransferFromKeyring) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgTransferFromKeyring) ProtoMessage() {}

// Deprecated: Use MsgTransferFromKeyring.ProtoReflect.Descriptor instead.
func (*MsgTransferFromKeyring) Descriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{15}
}

func (x *MsgTransferFromKeyring) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgTransferFromKeyring) GetKeyring() string {
	if x != nil {
		return x.Keyring
	}
	return ""
}

func (x *MsgTransferFromKeyring) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

func (x *MsgTransferFromKeyring) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *MsgTransferFromKeyring) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

// MsgTransferFromKeyringResponse defines the response structure for executing a
// MsgTransferFromKeyring message.
type MsgTransferFromKeyringResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgTransferFromKeyringResponse) Reset() {
	*x = MsgTransferFromKeyringResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_treasury_tx_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgTransferFromKeyringResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgTransferFromKeyringResponse) ProtoMessage() {}

// Deprecated: Use MsgTransferFromKeyringResponse.ProtoReflect.Descriptor instead.
func (*MsgTransferFromKeyringResponse) Descriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{16}
}

// ---------------------
//
//	INTERCHAIN ACCOUNTS
//
// ---------------------
//
// MsgNewICATransactionRequest is the Msg/NewIcaTransactionRequest request type.
type MsgNewICATransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator                  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	KeyId                    uint64 `protobuf:"varint,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	InputPayload             string `protobuf:"bytes,3,opt,name=input_payload,json=inputPayload,proto3" json:"input_payload,omitempty"`
	ConnectionId             string `protobuf:"bytes,4,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	RelativeTimeoutTimestamp uint64 `protobuf:"varint,5,opt,name=relative_timeout_timestamp,json=relativeTimeoutTimestamp,proto3" json:"relative_timeout_timestamp,omitempty"`
	Btl                      uint64 `protobuf:"varint,6,opt,name=btl,proto3" json:"btl,omitempty"`
}

func (x *MsgNewICATransactionRequest) Reset() {
	*x = MsgNewICATransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_treasury_tx_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgNewICATransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgNewICATransactionRequest) ProtoMessage() {}

// Deprecated: Use MsgNewICATransactionRequest.ProtoReflect.Descriptor instead.
func (*MsgNewICATransactionRequest) Descriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{17}
}

func (x *MsgNewICATransactionRequest) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgNewICATransactionRequest) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *MsgNewICATransactionRequest) GetInputPayload() string {
	if x != nil {
		return x.InputPayload
	}
	return ""
}

func (x *MsgNewICATransactionRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *MsgNewICATransactionRequest) GetRelativeTimeoutTimestamp() uint64 {
	if x != nil {
		return x.RelativeTimeoutTimestamp
	}
	return 0
}

func (x *MsgNewICATransactionRequest) GetBtl() uint64 {
	if x != nil {
		return x.Btl
	}
	return 0
}

// MsgNewICATransactionRequestResponse defines the response structure for
// executing a MsgNewICATransactionRequest message.
type MsgNewICATransactionRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SignatureRequestId uint64 `protobuf:"varint,2,opt,name=signature_request_id,json=signatureRequestId,proto3" json:"signature_request_id,omitempty"`
}

func (x *MsgNewICATransactionRequestResponse) Reset() {
	*x = MsgNewICATransactionRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_treasury_tx_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgNewICATransactionRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgNewICATransactionRequestResponse) ProtoMessage() {}

// Deprecated: Use MsgNewICATransactionRequestResponse.ProtoReflect.Descriptor instead.
func (*MsgNewICATransactionRequestResponse) Descriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{18}
}

func (x *MsgNewICATransactionRequestResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MsgNewICATransactionRequestResponse) GetSignatureRequestId() uint64 {
	if x != nil {
		return x.SignatureRequestId
	}
	return 0
}

// MsgFulfilICATransactionRequest is the Msg/FulfilICATransactionRequest request
// type.
type MsgFulfilICATransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator               string            `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RequestId             uint64            `protobuf:"varint,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Status                SignRequestStatus `protobuf:"varint,3,opt,name=status,proto3,enum=zrchain.treasury.SignRequestStatus" json:"status,omitempty"`
	KeyringPartySignature []byte            `protobuf:"bytes,4,opt,name=keyring_party_signature,json=keyringPartySignature,proto3" json:"keyring_party_signature,omitempty"`
	SignedData            []byte            `protobuf:"bytes,5,opt,name=signed_data,json=signedData,proto3" json:"signed_data,omitempty"`
	RejectReason          string            `protobuf:"bytes,6,opt,name=reject_reason,json=rejectReason,proto3" json:"reject_reason,omitempty"`
}

func (x *MsgFulfilICATransactionRequest) Reset() {
	*x = MsgFulfilICATransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_treasury_tx_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgFulfilICATransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgFulfilICATransactionRequest) ProtoMessage() {}

// Deprecated: Use MsgFulfilICATransactionRequest.ProtoReflect.Descriptor instead.
func (*MsgFulfilICATransactionRequest) Descriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{19}
}

func (x *MsgFulfilICATransactionRequest) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgFulfilICATransactionRequest) GetRequestId() uint64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *MsgFulfilICATransactionRequest) GetStatus() SignRequestStatus {
	if x != nil {
		return x.Status
	}
	return SignRequestStatus_SIGN_REQUEST_STATUS_UNSPECIFIED
}

func (x *MsgFulfilICATransactionRequest) GetKeyringPartySignature() []byte {
	if x != nil {
		return x.KeyringPartySignature
	}
	return nil
}

func (x *MsgFulfilICATransactionRequest) GetSignedData() []byte {
	if x != nil {
		return x.SignedData
	}
	return nil
}

func (x *MsgFulfilICATransactionRequest) GetRejectReason() string {
	if x != nil {
		return x.RejectReason
	}
	return ""
}

// MsgFulfilICATransactionRequestResponse defines the response structure for
// executing a MsgFulfilICATransactionRequest message.
type MsgFulfilICATransactionRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgFulfilICATransactionRequestResponse) Reset() {
	*x = MsgFulfilICATransactionRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_treasury_tx_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgFulfilICATransactionRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgFulfilICATransactionRequestResponse) ProtoMessage() {}

// Deprecated: Use MsgFulfilICATransactionRequestResponse.ProtoReflect.Descriptor instead.
func (*MsgFulfilICATransactionRequestResponse) Descriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{20}
}

type MsgNewZrSignSignatureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator                  string              `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Address                  string              `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	KeyType                  uint64              `protobuf:"varint,3,opt,name=key_type,json=keyType,proto3" json:"key_type,omitempty"`
	WalletIndex              uint64              `protobuf:"varint,4,opt,name=wallet_index,json=walletIndex,proto3" json:"wallet_index,omitempty"`
	CacheId                  []byte              `protobuf:"bytes,5,opt,name=cache_id,json=cacheId,proto3" json:"cache_id,omitempty"`
	Data                     string              `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	VerifySigningData        []byte              `protobuf:"bytes,7,opt,name=verify_signing_data,json=verifySigningData,proto3" json:"verify_signing_data,omitempty"`
	VerifySigningDataVersion VerificationVersion `protobuf:"varint,8,opt,name=verify_signing_data_version,json=verifySigningDataVersion,proto3,enum=zrchain.treasury.VerificationVersion" json:"verify_signing_data_version,omitempty"`
	WalletType               WalletType          `protobuf:"varint,9,opt,name=wallet_type,json=walletType,proto3,enum=zrchain.treasury.WalletType" json:"wallet_type,omitempty"`
	Metadata                 *anypb.Any          `protobuf:"bytes,10,opt,name=metadata,proto3" json:"metadata,omitempty"`
	NoBroadcast              bool                `protobuf:"varint,11,opt,name=no_broadcast,json=noBroadcast,proto3" json:"no_broadcast,omitempty"`
	Btl                      uint64              `protobuf:"varint,12,opt,name=btl,proto3" json:"btl,omitempty"`
	Tx                       bool                `protobuf:"varint,13,opt,name=tx,proto3" json:"tx,omitempty"`
}

func (x *MsgNewZrSignSignatureRequest) Reset() {
	*x = MsgNewZrSignSignatureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_treasury_tx_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgNewZrSignSignatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgNewZrSignSignatureRequest) ProtoMessage() {}

// Deprecated: Use MsgNewZrSignSignatureRequest.ProtoReflect.Descriptor instead.
func (*MsgNewZrSignSignatureRequest) Descriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{21}
}

func (x *MsgNewZrSignSignatureRequest) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgNewZrSignSignatureRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *MsgNewZrSignSignatureRequest) GetKeyType() uint64 {
	if x != nil {
		return x.KeyType
	}
	return 0
}

func (x *MsgNewZrSignSignatureRequest) GetWalletIndex() uint64 {
	if x != nil {
		return x.WalletIndex
	}
	return 0
}

func (x *MsgNewZrSignSignatureRequest) GetCacheId() []byte {
	if x != nil {
		return x.CacheId
	}
	return nil
}

func (x *MsgNewZrSignSignatureRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *MsgNewZrSignSignatureRequest) GetVerifySigningData() []byte {
	if x != nil {
		return x.VerifySigningData
	}
	return nil
}

func (x *MsgNewZrSignSignatureRequest) GetVerifySigningDataVersion() VerificationVersion {
	if x != nil {
		return x.VerifySigningDataVersion
	}
	return VerificationVersion_UNKNOWN
}

func (x *MsgNewZrSignSignatureRequest) GetWalletType() WalletType {
	if x != nil {
		return x.WalletType
	}
	return WalletType_WALLET_TYPE_UNSPECIFIED
}

func (x *MsgNewZrSignSignatureRequest) GetMetadata() *anypb.Any {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *MsgNewZrSignSignatureRequest) GetNoBroadcast() bool {
	if x != nil {
		return x.NoBroadcast
	}
	return false
}

func (x *MsgNewZrSignSignatureRequest) GetBtl() uint64 {
	if x != nil {
		return x.Btl
	}
	return 0
}

func (x *MsgNewZrSignSignatureRequest) GetTx() bool {
	if x != nil {
		return x.Tx
	}
	return false
}

type MsgNewZrSignSignatureRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqId uint64 `protobuf:"varint,1,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
}

func (x *MsgNewZrSignSignatureRequestResponse) Reset() {
	*x = MsgNewZrSignSignatureRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_treasury_tx_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgNewZrSignSignatureRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgNewZrSignSignatureRequestResponse) ProtoMessage() {}

// Deprecated: Use MsgNewZrSignSignatureRequestResponse.ProtoReflect.Descriptor instead.
func (*MsgNewZrSignSignatureRequestResponse) Descriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{22}
}

func (x *MsgNewZrSignSignatureRequestResponse) GetReqId() uint64 {
	if x != nil {
		return x.ReqId
	}
	return 0
}

type MsgUpdateKeyPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	KeyId        uint64 `protobuf:"varint,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	SignPolicyId uint64 `protobuf:"varint,3,opt,name=sign_policy_id,json=signPolicyId,proto3" json:"sign_policy_id,omitempty"`
}

func (x *MsgUpdateKeyPolicy) Reset() {
	*x = MsgUpdateKeyPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_treasury_tx_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateKeyPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateKeyPolicy) ProtoMessage() {}

// Deprecated: Use MsgUpdateKeyPolicy.ProtoReflect.Descriptor instead.
func (*MsgUpdateKeyPolicy) Descriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{23}
}

func (x *MsgUpdateKeyPolicy) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateKeyPolicy) GetKeyId() uint64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *MsgUpdateKeyPolicy) GetSignPolicyId() uint64 {
	if x != nil {
		return x.SignPolicyId
	}
	return 0
}

type MsgUpdateKeyPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateKeyPolicyResponse) Reset() {
	*x = MsgUpdateKeyPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zrchain_treasury_tx_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateKeyPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateKeyPolicyResponse) ProtoMessage() {}

// Deprecated: Use MsgUpdateKeyPolicyResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateKeyPolicyResponse) Descriptor() ([]byte, []int) {
	return file_zrchain_treasury_tx_proto_rawDescGZIP(), []int{24}
}

var File_zrchain_treasury_tx_proto protoreflect.FileDescriptor

var file_zrchain_treasury_tx_proto_rawDesc = []byte{
	0x0a, 0x19, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x79, 0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x7a, 0x72, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x1a, 0x11, 0x61,
	0x6d, 0x69, 0x6e, 0x6f, 0x2f, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x17, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x76, 0x31, 0x2f,
	0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x74,
	0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x2f, 0x6b, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x74, 0x72, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x79, 0x2f, 0x6d, 0x70, 0x63, 0x73, 0x69, 0x67, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1d, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x74, 0x72, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x79, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1d, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x79, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xde, 0x01, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x3b, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x7a, 0x72,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x2e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x42, 0x09, 0xc8, 0xde, 0x1f, 0x00, 0xa8, 0xe7, 0xb0, 0x2a, 0x01,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x3a, 0x56, 0x82, 0xe7, 0xb0, 0x2a, 0x09, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x8a, 0xe7, 0xb0, 0x2a, 0x43, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x5a, 0x65, 0x6e, 0x72, 0x6f, 0x63, 0x6b, 0x2d,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7a, 0x72, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2f, 0x76, 0x35, 0x2f, 0x78, 0x2f, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79,
	0x2f, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x22, 0x19, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xff, 0x02, 0x0a, 0x10,
	0x4d, 0x73, 0x67, 0x4e, 0x65, 0x77, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6b, 0x65, 0x79, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6b, 0x65, 0x79, 0x72, 0x69, 0x6e, 0x67,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x62, 0x74, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x62, 0x74,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0c,
	0x65, 0x78, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24,
	0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x0f, 0x7a, 0x65, 0x6e, 0x62, 0x74, 0x63, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79,
	0x2e, 0x5a, 0x65, 0x6e, 0x42, 0x54, 0x43, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x0e, 0x7a, 0x65, 0x6e, 0x62, 0x74, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x3a,
	0x0c, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x38, 0x0a,
	0x18, 0x4d, 0x73, 0x67, 0x4e, 0x65, 0x77, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x6b, 0x65, 0x79,
	0x5f, 0x72, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6b,
	0x65, 0x79, 0x52, 0x65, 0x71, 0x49, 0x64, 0x22, 0xb2, 0x02, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x46,
	0x75, 0x6c, 0x66, 0x69, 0x6c, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x2e, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x4e, 0x65, 0x77, 0x4b, 0x65, 0x79, 0x48, 0x00,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x0d, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c,
	0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x17,
	0x6b, 0x65, 0x79, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x15, 0x6b,
	0x65, 0x79, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x3a, 0x0c, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2a, 0x0a, 0x09,
	0x4d, 0x73, 0x67, 0x4e, 0x65, 0x77, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x1d, 0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x46,
	0x75, 0x6c, 0x66, 0x69, 0x6c, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc6, 0x02, 0x0a, 0x16, 0x4d, 0x73, 0x67, 0x4e,
	0x65, 0x77, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x17, 0x0a, 0x07,
	0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x6b,
	0x65, 0x79, 0x49, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x66, 0x6f,
	0x72, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x64, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x12,
	0x10, 0x0a, 0x03, 0x62, 0x74, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x62, 0x74,
	0x6c, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x61, 0x63, 0x68, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x64, 0x0a, 0x1b,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x25, 0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x79, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x18, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x3a, 0x0c, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x22, 0x3e, 0x0a, 0x1e, 0x4d, 0x73, 0x67, 0x4e, 0x65, 0x77, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x69, 0x67, 0x52, 0x65, 0x71, 0x49, 0x64,
	0x22, 0x9d, 0x02, 0x0a, 0x19, 0x4d, 0x73, 0x67, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x6b, 0x65, 0x79, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x15, 0x6b, 0x65, 0x79, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x3a, 0x0c, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x22, 0x23, 0x0a, 0x21, 0x4d, 0x73, 0x67, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x0a, 0x10, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x22, 0x71, 0x0a, 0x0e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x12, 0x3d, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x2e, 0x53, 0x6f, 0x6c, 0x61, 0x6e,
	0x61, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xd1, 0x02, 0x0a, 0x1c, 0x4d, 0x73, 0x67, 0x4e,
	0x65, 0x77, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0b, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c,
	0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x79, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x14, 0x75, 0x6e, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a,
	0x03, 0x62, 0x74, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x62, 0x74, 0x6c, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x63, 0x61, 0x63, 0x68, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f,
	0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x6e, 0x6f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x3a, 0x0c, 0x82,
	0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x68, 0x0a, 0x24, 0x4d,
	0x73, 0x67, 0x4e, 0x65, 0x77, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x12, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0xa6, 0x01, 0x0a, 0x16, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65,
	0x79, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79,
	0x72, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65,
	0x6e, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d,
	0x3a, 0x0c, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x20,
	0x0a, 0x1e, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x72, 0x6f,
	0x6d, 0x4b, 0x65, 0x79, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xf6, 0x01, 0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x4e, 0x65, 0x77, 0x49, 0x43, 0x41, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x1a, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x18, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x74, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x62, 0x74, 0x6c, 0x3a, 0x0c, 0x82, 0xe7, 0xb0,
	0x2a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x67, 0x0a, 0x23, 0x4d, 0x73, 0x67,
	0x4e, 0x65, 0x77, 0x49, 0x43, 0x41, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x30, 0x0a, 0x14, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x22, 0xa2, 0x02, 0x0a, 0x1e, 0x4d, 0x73, 0x67, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c,
	0x49, 0x43, 0x41, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x3b,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23,
	0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x79, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x6b,
	0x65, 0x79, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x15, 0x6b, 0x65,
	0x79, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x3a, 0x0c, 0x82, 0xe7, 0xb0, 0x2a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x28, 0x0a, 0x26, 0x4d, 0x73, 0x67, 0x46, 0x75,
	0x6c, 0x66, 0x69, 0x6c, 0x49, 0x43, 0x41, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x99, 0x04, 0x0a, 0x1c, 0x4d, 0x73, 0x67, 0x4e, 0x65, 0x77, 0x5a, 0x72, 0x53, 0x69,
	0x67, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x61, 0x63, 0x68, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x13, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x73, 0x69,
	0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x64, 0x0a, 0x1b, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x73, 0x69,
	0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x18, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0b, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c,
	0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x79, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f,
	0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x6e, 0x6f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x62, 0x74, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x62, 0x74, 0x6c, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x74, 0x78, 0x3a,
	0x0c, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x3d, 0x0a,
	0x24, 0x4d, 0x73, 0x67, 0x4e, 0x65, 0x77, 0x5a, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x12,
	0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x15, 0x0a, 0x06,
	0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6b, 0x65,
	0x79, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x73, 0x69, 0x67,
	0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x3a, 0x0c, 0x82, 0xe7, 0xb0, 0x2a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x1c, 0x0a, 0x1a, 0x4d, 0x73, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x34, 0x0a, 0x13, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x49, 0x54,
	0x43, 0x4f, 0x49, 0x4e, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x10, 0x01, 0x2a, 0x48, 0x0a, 0x11, 0x53,
	0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x4d, 0x41, 0x49, 0x4e, 0x4e, 0x45, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x44, 0x45, 0x56, 0x4e, 0x45, 0x54, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x45, 0x53, 0x54,
	0x4e, 0x45, 0x54, 0x10, 0x03, 0x32, 0x99, 0x0a, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x5c, 0x0a,
	0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x21, 0x2e,
	0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79,
	0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x1a, 0x29, 0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0d, 0x4e,
	0x65, 0x77, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x7a,
	0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x2e,
	0x4d, 0x73, 0x67, 0x4e, 0x65, 0x77, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x4e, 0x65, 0x77, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x10,
	0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x25, 0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x46, 0x75,
	0x6c, 0x66, 0x69, 0x6c, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x13, 0x4e, 0x65, 0x77, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x2e,
	0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79,
	0x2e, 0x4d, 0x73, 0x67, 0x4e, 0x65, 0x77, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x4e, 0x65,
	0x77, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x16, 0x46, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x33, 0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x19, 0x4e, 0x65, 0x77, 0x53, 0x69, 0x67,
	0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2e, 0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x4e, 0x65, 0x77, 0x53, 0x69, 0x67,
	0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x4e, 0x65, 0x77, 0x53, 0x69, 0x67,
	0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x13, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x72, 0x69,
	0x6e, 0x67, 0x12, 0x28, 0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x46, 0x72, 0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x30, 0x2e, 0x7a,
	0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x2e,
	0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x4b,
	0x65, 0x79, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80,
	0x01, 0x0a, 0x18, 0x4e, 0x65, 0x77, 0x49, 0x43, 0x41, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x7a, 0x72,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x2e, 0x4d,
	0x73, 0x67, 0x4e, 0x65, 0x77, 0x49, 0x43, 0x41, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x7a, 0x72, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x2e, 0x4d, 0x73,
	0x67, 0x4e, 0x65, 0x77, 0x49, 0x43, 0x41, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x89, 0x01, 0x0a, 0x1b, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x49, 0x43, 0x41, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x30, 0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x49, 0x43,
	0x41, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c,
	0x49, 0x43, 0x41, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01,
	0x0a, 0x19, 0x4e, 0x65, 0x77, 0x5a, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x2e, 0x7a, 0x72,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x2e, 0x4d,
	0x73, 0x67, 0x4e, 0x65, 0x77, 0x5a, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x7a, 0x72,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x2e, 0x4d,
	0x73, 0x67, 0x4e, 0x65, 0x77, 0x5a, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x24, 0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x1a, 0x2c, 0x2e, 0x7a,
	0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x2e,
	0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x05, 0x80, 0xe7, 0xb0, 0x2a,
	0x01, 0x42, 0xa3, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2e, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x42, 0x07, 0x54, 0x78, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x21, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b,
	0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f,
	0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0xa2, 0x02, 0x03, 0x5a, 0x54, 0x58, 0xaa, 0x02,
	0x10, 0x5a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x79, 0xca, 0x02, 0x10, 0x5a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5c, 0x54, 0x72, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x79, 0xe2, 0x02, 0x1c, 0x5a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5c, 0x54,
	0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x11, 0x5a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x3a, 0x3a, 0x54,
	0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_zrchain_treasury_tx_proto_rawDescOnce sync.Once
	file_zrchain_treasury_tx_proto_rawDescData = file_zrchain_treasury_tx_proto_rawDesc
)

func file_zrchain_treasury_tx_proto_rawDescGZIP() []byte {
	file_zrchain_treasury_tx_proto_rawDescOnce.Do(func() {
		file_zrchain_treasury_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_zrchain_treasury_tx_proto_rawDescData)
	})
	return file_zrchain_treasury_tx_proto_rawDescData
}

var file_zrchain_treasury_tx_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_zrchain_treasury_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_zrchain_treasury_tx_proto_goTypes = []interface{}{
	(VerificationVersion)(0),                       // 0: zrchain.treasury.VerificationVersion
	(SolanaNetworkType)(0),                         // 1: zrchain.treasury.SolanaNetworkType
	(*MsgUpdateParams)(nil),                        // 2: zrchain.treasury.MsgUpdateParams
	(*MsgUpdateParamsResponse)(nil),                // 3: zrchain.treasury.MsgUpdateParamsResponse
	(*MsgNewKeyRequest)(nil),                       // 4: zrchain.treasury.MsgNewKeyRequest
	(*MsgNewKeyRequestResponse)(nil),               // 5: zrchain.treasury.MsgNewKeyRequestResponse
	(*MsgFulfilKeyRequest)(nil),                    // 6: zrchain.treasury.MsgFulfilKeyRequest
	(*MsgNewKey)(nil),                              // 7: zrchain.treasury.MsgNewKey
	(*MsgFulfilKeyRequestResponse)(nil),            // 8: zrchain.treasury.MsgFulfilKeyRequestResponse
	(*MsgNewSignatureRequest)(nil),                 // 9: zrchain.treasury.MsgNewSignatureRequest
	(*MsgNewSignatureRequestResponse)(nil),         // 10: zrchain.treasury.MsgNewSignatureRequestResponse
	(*MsgFulfilSignatureRequest)(nil),              // 11: zrchain.treasury.MsgFulfilSignatureRequest
	(*MsgFulfilSignatureRequestResponse)(nil),      // 12: zrchain.treasury.MsgFulfilSignatureRequestResponse
	(*MetadataEthereum)(nil),                       // 13: zrchain.treasury.MetadataEthereum
	(*MetadataSolana)(nil),                         // 14: zrchain.treasury.MetadataSolana
	(*MsgNewSignTransactionRequest)(nil),           // 15: zrchain.treasury.MsgNewSignTransactionRequest
	(*MsgNewSignTransactionRequestResponse)(nil),   // 16: zrchain.treasury.MsgNewSignTransactionRequestResponse
	(*MsgTransferFromKeyring)(nil),                 // 17: zrchain.treasury.MsgTransferFromKeyring
	(*MsgTransferFromKeyringResponse)(nil),         // 18: zrchain.treasury.MsgTransferFromKeyringResponse
	(*MsgNewICATransactionRequest)(nil),            // 19: zrchain.treasury.MsgNewICATransactionRequest
	(*MsgNewICATransactionRequestResponse)(nil),    // 20: zrchain.treasury.MsgNewICATransactionRequestResponse
	(*MsgFulfilICATransactionRequest)(nil),         // 21: zrchain.treasury.MsgFulfilICATransactionRequest
	(*MsgFulfilICATransactionRequestResponse)(nil), // 22: zrchain.treasury.MsgFulfilICATransactionRequestResponse
	(*MsgNewZrSignSignatureRequest)(nil),           // 23: zrchain.treasury.MsgNewZrSignSignatureRequest
	(*MsgNewZrSignSignatureRequestResponse)(nil),   // 24: zrchain.treasury.MsgNewZrSignSignatureRequestResponse
	(*MsgUpdateKeyPolicy)(nil),                     // 25: zrchain.treasury.MsgUpdateKeyPolicy
	(*MsgUpdateKeyPolicyResponse)(nil),             // 26: zrchain.treasury.MsgUpdateKeyPolicyResponse
	(*Params)(nil),                                 // 27: zrchain.treasury.Params
	(*ZenBTCMetadata)(nil),                         // 28: zrchain.treasury.ZenBTCMetadata
	(KeyRequestStatus)(0),                          // 29: zrchain.treasury.KeyRequestStatus
	(SignRequestStatus)(0),                         // 30: zrchain.treasury.SignRequestStatus
	(WalletType)(0),                                // 31: zrchain.treasury.WalletType
	(*anypb.Any)(nil),                              // 32: google.protobuf.Any
}
var file_zrchain_treasury_tx_proto_depIdxs = []int32{
	27, // 0: zrchain.treasury.MsgUpdateParams.params:type_name -> zrchain.treasury.Params
	28, // 1: zrchain.treasury.MsgNewKeyRequest.zenbtc_metadata:type_name -> zrchain.treasury.ZenBTCMetadata
	29, // 2: zrchain.treasury.MsgFulfilKeyRequest.status:type_name -> zrchain.treasury.KeyRequestStatus
	7,  // 3: zrchain.treasury.MsgFulfilKeyRequest.key:type_name -> zrchain.treasury.MsgNewKey
	0,  // 4: zrchain.treasury.MsgNewSignatureRequest.verify_signing_data_version:type_name -> zrchain.treasury.VerificationVersion
	30, // 5: zrchain.treasury.MsgFulfilSignatureRequest.status:type_name -> zrchain.treasury.SignRequestStatus
	1,  // 6: zrchain.treasury.MetadataSolana.network:type_name -> zrchain.treasury.SolanaNetworkType
	31, // 7: zrchain.treasury.MsgNewSignTransactionRequest.wallet_type:type_name -> zrchain.treasury.WalletType
	32, // 8: zrchain.treasury.MsgNewSignTransactionRequest.metadata:type_name -> google.protobuf.Any
	30, // 9: zrchain.treasury.MsgFulfilICATransactionRequest.status:type_name -> zrchain.treasury.SignRequestStatus
	0,  // 10: zrchain.treasury.MsgNewZrSignSignatureRequest.verify_signing_data_version:type_name -> zrchain.treasury.VerificationVersion
	31, // 11: zrchain.treasury.MsgNewZrSignSignatureRequest.wallet_type:type_name -> zrchain.treasury.WalletType
	32, // 12: zrchain.treasury.MsgNewZrSignSignatureRequest.metadata:type_name -> google.protobuf.Any
	2,  // 13: zrchain.treasury.Msg.UpdateParams:input_type -> zrchain.treasury.MsgUpdateParams
	4,  // 14: zrchain.treasury.Msg.NewKeyRequest:input_type -> zrchain.treasury.MsgNewKeyRequest
	6,  // 15: zrchain.treasury.Msg.FulfilKeyRequest:input_type -> zrchain.treasury.MsgFulfilKeyRequest
	9,  // 16: zrchain.treasury.Msg.NewSignatureRequest:input_type -> zrchain.treasury.MsgNewSignatureRequest
	11, // 17: zrchain.treasury.Msg.FulfilSignatureRequest:input_type -> zrchain.treasury.MsgFulfilSignatureRequest
	15, // 18: zrchain.treasury.Msg.NewSignTransactionRequest:input_type -> zrchain.treasury.MsgNewSignTransactionRequest
	17, // 19: zrchain.treasury.Msg.TransferFromKeyring:input_type -> zrchain.treasury.MsgTransferFromKeyring
	19, // 20: zrchain.treasury.Msg.NewICATransactionRequest:input_type -> zrchain.treasury.MsgNewICATransactionRequest
	21, // 21: zrchain.treasury.Msg.FulfilICATransactionRequest:input_type -> zrchain.treasury.MsgFulfilICATransactionRequest
	23, // 22: zrchain.treasury.Msg.NewZrSignSignatureRequest:input_type -> zrchain.treasury.MsgNewZrSignSignatureRequest
	25, // 23: zrchain.treasury.Msg.UpdateKeyPolicy:input_type -> zrchain.treasury.MsgUpdateKeyPolicy
	3,  // 24: zrchain.treasury.Msg.UpdateParams:output_type -> zrchain.treasury.MsgUpdateParamsResponse
	5,  // 25: zrchain.treasury.Msg.NewKeyRequest:output_type -> zrchain.treasury.MsgNewKeyRequestResponse
	8,  // 26: zrchain.treasury.Msg.FulfilKeyRequest:output_type -> zrchain.treasury.MsgFulfilKeyRequestResponse
	10, // 27: zrchain.treasury.Msg.NewSignatureRequest:output_type -> zrchain.treasury.MsgNewSignatureRequestResponse
	12, // 28: zrchain.treasury.Msg.FulfilSignatureRequest:output_type -> zrchain.treasury.MsgFulfilSignatureRequestResponse
	16, // 29: zrchain.treasury.Msg.NewSignTransactionRequest:output_type -> zrchain.treasury.MsgNewSignTransactionRequestResponse
	18, // 30: zrchain.treasury.Msg.TransferFromKeyring:output_type -> zrchain.treasury.MsgTransferFromKeyringResponse
	20, // 31: zrchain.treasury.Msg.NewICATransactionRequest:output_type -> zrchain.treasury.MsgNewICATransactionRequestResponse
	22, // 32: zrchain.treasury.Msg.FulfilICATransactionRequest:output_type -> zrchain.treasury.MsgFulfilICATransactionRequestResponse
	24, // 33: zrchain.treasury.Msg.NewZrSignSignatureRequest:output_type -> zrchain.treasury.MsgNewZrSignSignatureRequestResponse
	26, // 34: zrchain.treasury.Msg.UpdateKeyPolicy:output_type -> zrchain.treasury.MsgUpdateKeyPolicyResponse
	24, // [24:35] is the sub-list for method output_type
	13, // [13:24] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_zrchain_treasury_tx_proto_init() }
func file_zrchain_treasury_tx_proto_init() {
	if File_zrchain_treasury_tx_proto != nil {
		return
	}
	file_zrchain_treasury_key_proto_init()
	file_zrchain_treasury_mpcsign_proto_init()
	file_zrchain_treasury_params_proto_init()
	file_zrchain_treasury_wallet_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_zrchain_treasury_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zrchain_treasury_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zrchain_treasury_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgNewKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zrchain_treasury_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgNewKeyRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zrchain_treasury_tx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgFulfilKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zrchain_treasury_tx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgNewKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zrchain_treasury_tx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgFulfilKeyRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zrchain_treasury_tx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgNewSignatureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zrchain_treasury_tx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgNewSignatureRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zrchain_treasury_tx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgFulfilSignatureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zrchain_treasury_tx_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgFulfilSignatureRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zrchain_treasury_tx_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataEthereum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zrchain_treasury_tx_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataSolana); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zrchain_treasury_tx_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgNewSignTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zrchain_treasury_tx_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgNewSignTransactionRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zrchain_treasury_tx_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgTransferFromKeyring); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zrchain_treasury_tx_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgTransferFromKeyringResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zrchain_treasury_tx_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgNewICATransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zrchain_treasury_tx_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgNewICATransactionRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zrchain_treasury_tx_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgFulfilICATransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zrchain_treasury_tx_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgFulfilICATransactionRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zrchain_treasury_tx_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgNewZrSignSignatureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zrchain_treasury_tx_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgNewZrSignSignatureRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zrchain_treasury_tx_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateKeyPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zrchain_treasury_tx_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateKeyPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_zrchain_treasury_tx_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*MsgFulfilKeyRequest_Key)(nil),
		(*MsgFulfilKeyRequest_RejectReason)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zrchain_treasury_tx_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_zrchain_treasury_tx_proto_goTypes,
		DependencyIndexes: file_zrchain_treasury_tx_proto_depIdxs,
		EnumInfos:         file_zrchain_treasury_tx_proto_enumTypes,
		MessageInfos:      file_zrchain_treasury_tx_proto_msgTypes,
	}.Build()
	File_zrchain_treasury_tx_proto = out.File
	file_zrchain_treasury_tx_proto_rawDesc = nil
	file_zrchain_treasury_tx_proto_goTypes = nil
	file_zrchain_treasury_tx_proto_depIdxs = nil
}
