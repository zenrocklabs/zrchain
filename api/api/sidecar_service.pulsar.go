// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package api

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_LatestBitcoinBlockHeaderRequest           protoreflect.MessageDescriptor
	fd_LatestBitcoinBlockHeaderRequest_ChainName protoreflect.FieldDescriptor
)

func init() {
	file_api_sidecar_service_proto_init()
	md_LatestBitcoinBlockHeaderRequest = File_api_sidecar_service_proto.Messages().ByName("LatestBitcoinBlockHeaderRequest")
	fd_LatestBitcoinBlockHeaderRequest_ChainName = md_LatestBitcoinBlockHeaderRequest.Fields().ByName("ChainName")
}

var _ protoreflect.Message = (*fastReflection_LatestBitcoinBlockHeaderRequest)(nil)

type fastReflection_LatestBitcoinBlockHeaderRequest LatestBitcoinBlockHeaderRequest

func (x *LatestBitcoinBlockHeaderRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_LatestBitcoinBlockHeaderRequest)(x)
}

func (x *LatestBitcoinBlockHeaderRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_api_sidecar_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_LatestBitcoinBlockHeaderRequest_messageType fastReflection_LatestBitcoinBlockHeaderRequest_messageType
var _ protoreflect.MessageType = fastReflection_LatestBitcoinBlockHeaderRequest_messageType{}

type fastReflection_LatestBitcoinBlockHeaderRequest_messageType struct{}

func (x fastReflection_LatestBitcoinBlockHeaderRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_LatestBitcoinBlockHeaderRequest)(nil)
}
func (x fastReflection_LatestBitcoinBlockHeaderRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_LatestBitcoinBlockHeaderRequest)
}
func (x fastReflection_LatestBitcoinBlockHeaderRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_LatestBitcoinBlockHeaderRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_LatestBitcoinBlockHeaderRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_LatestBitcoinBlockHeaderRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_LatestBitcoinBlockHeaderRequest) Type() protoreflect.MessageType {
	return _fastReflection_LatestBitcoinBlockHeaderRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_LatestBitcoinBlockHeaderRequest) New() protoreflect.Message {
	return new(fastReflection_LatestBitcoinBlockHeaderRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_LatestBitcoinBlockHeaderRequest) Interface() protoreflect.ProtoMessage {
	return (*LatestBitcoinBlockHeaderRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_LatestBitcoinBlockHeaderRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_LatestBitcoinBlockHeaderRequest_ChainName, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_LatestBitcoinBlockHeaderRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "api.LatestBitcoinBlockHeaderRequest.ChainName":
		return x.ChainName != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.LatestBitcoinBlockHeaderRequest"))
		}
		panic(fmt.Errorf("message api.LatestBitcoinBlockHeaderRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LatestBitcoinBlockHeaderRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "api.LatestBitcoinBlockHeaderRequest.ChainName":
		x.ChainName = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.LatestBitcoinBlockHeaderRequest"))
		}
		panic(fmt.Errorf("message api.LatestBitcoinBlockHeaderRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_LatestBitcoinBlockHeaderRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "api.LatestBitcoinBlockHeaderRequest.ChainName":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.LatestBitcoinBlockHeaderRequest"))
		}
		panic(fmt.Errorf("message api.LatestBitcoinBlockHeaderRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LatestBitcoinBlockHeaderRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "api.LatestBitcoinBlockHeaderRequest.ChainName":
		x.ChainName = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.LatestBitcoinBlockHeaderRequest"))
		}
		panic(fmt.Errorf("message api.LatestBitcoinBlockHeaderRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LatestBitcoinBlockHeaderRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "api.LatestBitcoinBlockHeaderRequest.ChainName":
		panic(fmt.Errorf("field ChainName of message api.LatestBitcoinBlockHeaderRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.LatestBitcoinBlockHeaderRequest"))
		}
		panic(fmt.Errorf("message api.LatestBitcoinBlockHeaderRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_LatestBitcoinBlockHeaderRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "api.LatestBitcoinBlockHeaderRequest.ChainName":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.LatestBitcoinBlockHeaderRequest"))
		}
		panic(fmt.Errorf("message api.LatestBitcoinBlockHeaderRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_LatestBitcoinBlockHeaderRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in api.LatestBitcoinBlockHeaderRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_LatestBitcoinBlockHeaderRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LatestBitcoinBlockHeaderRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_LatestBitcoinBlockHeaderRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_LatestBitcoinBlockHeaderRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*LatestBitcoinBlockHeaderRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*LatestBitcoinBlockHeaderRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*LatestBitcoinBlockHeaderRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: LatestBitcoinBlockHeaderRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: LatestBitcoinBlockHeaderRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_BitcoinBlockHeaderByHeightRequest             protoreflect.MessageDescriptor
	fd_BitcoinBlockHeaderByHeightRequest_BlockHeight protoreflect.FieldDescriptor
	fd_BitcoinBlockHeaderByHeightRequest_ChainName   protoreflect.FieldDescriptor
)

func init() {
	file_api_sidecar_service_proto_init()
	md_BitcoinBlockHeaderByHeightRequest = File_api_sidecar_service_proto.Messages().ByName("BitcoinBlockHeaderByHeightRequest")
	fd_BitcoinBlockHeaderByHeightRequest_BlockHeight = md_BitcoinBlockHeaderByHeightRequest.Fields().ByName("BlockHeight")
	fd_BitcoinBlockHeaderByHeightRequest_ChainName = md_BitcoinBlockHeaderByHeightRequest.Fields().ByName("ChainName")
}

var _ protoreflect.Message = (*fastReflection_BitcoinBlockHeaderByHeightRequest)(nil)

type fastReflection_BitcoinBlockHeaderByHeightRequest BitcoinBlockHeaderByHeightRequest

func (x *BitcoinBlockHeaderByHeightRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_BitcoinBlockHeaderByHeightRequest)(x)
}

func (x *BitcoinBlockHeaderByHeightRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_api_sidecar_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_BitcoinBlockHeaderByHeightRequest_messageType fastReflection_BitcoinBlockHeaderByHeightRequest_messageType
var _ protoreflect.MessageType = fastReflection_BitcoinBlockHeaderByHeightRequest_messageType{}

type fastReflection_BitcoinBlockHeaderByHeightRequest_messageType struct{}

func (x fastReflection_BitcoinBlockHeaderByHeightRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_BitcoinBlockHeaderByHeightRequest)(nil)
}
func (x fastReflection_BitcoinBlockHeaderByHeightRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_BitcoinBlockHeaderByHeightRequest)
}
func (x fastReflection_BitcoinBlockHeaderByHeightRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_BitcoinBlockHeaderByHeightRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_BitcoinBlockHeaderByHeightRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_BitcoinBlockHeaderByHeightRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_BitcoinBlockHeaderByHeightRequest) Type() protoreflect.MessageType {
	return _fastReflection_BitcoinBlockHeaderByHeightRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_BitcoinBlockHeaderByHeightRequest) New() protoreflect.Message {
	return new(fastReflection_BitcoinBlockHeaderByHeightRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_BitcoinBlockHeaderByHeightRequest) Interface() protoreflect.ProtoMessage {
	return (*BitcoinBlockHeaderByHeightRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_BitcoinBlockHeaderByHeightRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_BitcoinBlockHeaderByHeightRequest_BlockHeight, value) {
			return
		}
	}
	if x.ChainName != "" {
		value := protoreflect.ValueOfString(x.ChainName)
		if !f(fd_BitcoinBlockHeaderByHeightRequest_ChainName, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_BitcoinBlockHeaderByHeightRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "api.BitcoinBlockHeaderByHeightRequest.BlockHeight":
		return x.BlockHeight != int64(0)
	case "api.BitcoinBlockHeaderByHeightRequest.ChainName":
		return x.ChainName != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.BitcoinBlockHeaderByHeightRequest"))
		}
		panic(fmt.Errorf("message api.BitcoinBlockHeaderByHeightRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BitcoinBlockHeaderByHeightRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "api.BitcoinBlockHeaderByHeightRequest.BlockHeight":
		x.BlockHeight = int64(0)
	case "api.BitcoinBlockHeaderByHeightRequest.ChainName":
		x.ChainName = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.BitcoinBlockHeaderByHeightRequest"))
		}
		panic(fmt.Errorf("message api.BitcoinBlockHeaderByHeightRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_BitcoinBlockHeaderByHeightRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "api.BitcoinBlockHeaderByHeightRequest.BlockHeight":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	case "api.BitcoinBlockHeaderByHeightRequest.ChainName":
		value := x.ChainName
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.BitcoinBlockHeaderByHeightRequest"))
		}
		panic(fmt.Errorf("message api.BitcoinBlockHeaderByHeightRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BitcoinBlockHeaderByHeightRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "api.BitcoinBlockHeaderByHeightRequest.BlockHeight":
		x.BlockHeight = value.Int()
	case "api.BitcoinBlockHeaderByHeightRequest.ChainName":
		x.ChainName = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.BitcoinBlockHeaderByHeightRequest"))
		}
		panic(fmt.Errorf("message api.BitcoinBlockHeaderByHeightRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BitcoinBlockHeaderByHeightRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "api.BitcoinBlockHeaderByHeightRequest.BlockHeight":
		panic(fmt.Errorf("field BlockHeight of message api.BitcoinBlockHeaderByHeightRequest is not mutable"))
	case "api.BitcoinBlockHeaderByHeightRequest.ChainName":
		panic(fmt.Errorf("field ChainName of message api.BitcoinBlockHeaderByHeightRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.BitcoinBlockHeaderByHeightRequest"))
		}
		panic(fmt.Errorf("message api.BitcoinBlockHeaderByHeightRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_BitcoinBlockHeaderByHeightRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "api.BitcoinBlockHeaderByHeightRequest.BlockHeight":
		return protoreflect.ValueOfInt64(int64(0))
	case "api.BitcoinBlockHeaderByHeightRequest.ChainName":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.BitcoinBlockHeaderByHeightRequest"))
		}
		panic(fmt.Errorf("message api.BitcoinBlockHeaderByHeightRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_BitcoinBlockHeaderByHeightRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in api.BitcoinBlockHeaderByHeightRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_BitcoinBlockHeaderByHeightRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BitcoinBlockHeaderByHeightRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_BitcoinBlockHeaderByHeightRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_BitcoinBlockHeaderByHeightRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*BitcoinBlockHeaderByHeightRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		l = len(x.ChainName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*BitcoinBlockHeaderByHeightRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ChainName) > 0 {
			i -= len(x.ChainName)
			copy(dAtA[i:], x.ChainName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainName)))
			i--
			dAtA[i] = 0x12
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*BitcoinBlockHeaderByHeightRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BitcoinBlockHeaderByHeightRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BitcoinBlockHeaderByHeightRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_BitcoinBlockHeaderResponse             protoreflect.MessageDescriptor
	fd_BitcoinBlockHeaderResponse_blockHeader protoreflect.FieldDescriptor
	fd_BitcoinBlockHeaderResponse_BlockHeight protoreflect.FieldDescriptor
	fd_BitcoinBlockHeaderResponse_TipHeight   protoreflect.FieldDescriptor
)

func init() {
	file_api_sidecar_service_proto_init()
	md_BitcoinBlockHeaderResponse = File_api_sidecar_service_proto.Messages().ByName("BitcoinBlockHeaderResponse")
	fd_BitcoinBlockHeaderResponse_blockHeader = md_BitcoinBlockHeaderResponse.Fields().ByName("blockHeader")
	fd_BitcoinBlockHeaderResponse_BlockHeight = md_BitcoinBlockHeaderResponse.Fields().ByName("BlockHeight")
	fd_BitcoinBlockHeaderResponse_TipHeight = md_BitcoinBlockHeaderResponse.Fields().ByName("TipHeight")
}

var _ protoreflect.Message = (*fastReflection_BitcoinBlockHeaderResponse)(nil)

type fastReflection_BitcoinBlockHeaderResponse BitcoinBlockHeaderResponse

func (x *BitcoinBlockHeaderResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_BitcoinBlockHeaderResponse)(x)
}

func (x *BitcoinBlockHeaderResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_api_sidecar_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_BitcoinBlockHeaderResponse_messageType fastReflection_BitcoinBlockHeaderResponse_messageType
var _ protoreflect.MessageType = fastReflection_BitcoinBlockHeaderResponse_messageType{}

type fastReflection_BitcoinBlockHeaderResponse_messageType struct{}

func (x fastReflection_BitcoinBlockHeaderResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_BitcoinBlockHeaderResponse)(nil)
}
func (x fastReflection_BitcoinBlockHeaderResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_BitcoinBlockHeaderResponse)
}
func (x fastReflection_BitcoinBlockHeaderResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_BitcoinBlockHeaderResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_BitcoinBlockHeaderResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_BitcoinBlockHeaderResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_BitcoinBlockHeaderResponse) Type() protoreflect.MessageType {
	return _fastReflection_BitcoinBlockHeaderResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_BitcoinBlockHeaderResponse) New() protoreflect.Message {
	return new(fastReflection_BitcoinBlockHeaderResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_BitcoinBlockHeaderResponse) Interface() protoreflect.ProtoMessage {
	return (*BitcoinBlockHeaderResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_BitcoinBlockHeaderResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.BlockHeader != nil {
		value := protoreflect.ValueOfMessage(x.BlockHeader.ProtoReflect())
		if !f(fd_BitcoinBlockHeaderResponse_blockHeader, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_BitcoinBlockHeaderResponse_BlockHeight, value) {
			return
		}
	}
	if x.TipHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.TipHeight)
		if !f(fd_BitcoinBlockHeaderResponse_TipHeight, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_BitcoinBlockHeaderResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "api.BitcoinBlockHeaderResponse.blockHeader":
		return x.BlockHeader != nil
	case "api.BitcoinBlockHeaderResponse.BlockHeight":
		return x.BlockHeight != int64(0)
	case "api.BitcoinBlockHeaderResponse.TipHeight":
		return x.TipHeight != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.BitcoinBlockHeaderResponse"))
		}
		panic(fmt.Errorf("message api.BitcoinBlockHeaderResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BitcoinBlockHeaderResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "api.BitcoinBlockHeaderResponse.blockHeader":
		x.BlockHeader = nil
	case "api.BitcoinBlockHeaderResponse.BlockHeight":
		x.BlockHeight = int64(0)
	case "api.BitcoinBlockHeaderResponse.TipHeight":
		x.TipHeight = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.BitcoinBlockHeaderResponse"))
		}
		panic(fmt.Errorf("message api.BitcoinBlockHeaderResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_BitcoinBlockHeaderResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "api.BitcoinBlockHeaderResponse.blockHeader":
		value := x.BlockHeader
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "api.BitcoinBlockHeaderResponse.BlockHeight":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	case "api.BitcoinBlockHeaderResponse.TipHeight":
		value := x.TipHeight
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.BitcoinBlockHeaderResponse"))
		}
		panic(fmt.Errorf("message api.BitcoinBlockHeaderResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BitcoinBlockHeaderResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "api.BitcoinBlockHeaderResponse.blockHeader":
		x.BlockHeader = value.Message().Interface().(*BTCBlockHeader)
	case "api.BitcoinBlockHeaderResponse.BlockHeight":
		x.BlockHeight = value.Int()
	case "api.BitcoinBlockHeaderResponse.TipHeight":
		x.TipHeight = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.BitcoinBlockHeaderResponse"))
		}
		panic(fmt.Errorf("message api.BitcoinBlockHeaderResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BitcoinBlockHeaderResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "api.BitcoinBlockHeaderResponse.blockHeader":
		if x.BlockHeader == nil {
			x.BlockHeader = new(BTCBlockHeader)
		}
		return protoreflect.ValueOfMessage(x.BlockHeader.ProtoReflect())
	case "api.BitcoinBlockHeaderResponse.BlockHeight":
		panic(fmt.Errorf("field BlockHeight of message api.BitcoinBlockHeaderResponse is not mutable"))
	case "api.BitcoinBlockHeaderResponse.TipHeight":
		panic(fmt.Errorf("field TipHeight of message api.BitcoinBlockHeaderResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.BitcoinBlockHeaderResponse"))
		}
		panic(fmt.Errorf("message api.BitcoinBlockHeaderResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_BitcoinBlockHeaderResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "api.BitcoinBlockHeaderResponse.blockHeader":
		m := new(BTCBlockHeader)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "api.BitcoinBlockHeaderResponse.BlockHeight":
		return protoreflect.ValueOfInt64(int64(0))
	case "api.BitcoinBlockHeaderResponse.TipHeight":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.BitcoinBlockHeaderResponse"))
		}
		panic(fmt.Errorf("message api.BitcoinBlockHeaderResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_BitcoinBlockHeaderResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in api.BitcoinBlockHeaderResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_BitcoinBlockHeaderResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BitcoinBlockHeaderResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_BitcoinBlockHeaderResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_BitcoinBlockHeaderResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*BitcoinBlockHeaderResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.BlockHeader != nil {
			l = options.Size(x.BlockHeader)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.TipHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.TipHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*BitcoinBlockHeaderResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TipHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TipHeight))
			i--
			dAtA[i] = 0x18
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.BlockHeader != nil {
			encoded, err := options.Marshal(x.BlockHeader)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*BitcoinBlockHeaderResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BitcoinBlockHeaderResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BitcoinBlockHeaderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeader", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.BlockHeader == nil {
					x.BlockHeader = &BTCBlockHeader{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.BlockHeader); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TipHeight", wireType)
				}
				x.TipHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TipHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_BTCBlockHeader             protoreflect.MessageDescriptor
	fd_BTCBlockHeader_Version     protoreflect.FieldDescriptor
	fd_BTCBlockHeader_PrevBlock   protoreflect.FieldDescriptor
	fd_BTCBlockHeader_MerkleRoot  protoreflect.FieldDescriptor
	fd_BTCBlockHeader_TimeStamp   protoreflect.FieldDescriptor
	fd_BTCBlockHeader_Bits        protoreflect.FieldDescriptor
	fd_BTCBlockHeader_Nonce       protoreflect.FieldDescriptor
	fd_BTCBlockHeader_BlockHash   protoreflect.FieldDescriptor
	fd_BTCBlockHeader_BlockHeight protoreflect.FieldDescriptor
)

func init() {
	file_api_sidecar_service_proto_init()
	md_BTCBlockHeader = File_api_sidecar_service_proto.Messages().ByName("BTCBlockHeader")
	fd_BTCBlockHeader_Version = md_BTCBlockHeader.Fields().ByName("Version")
	fd_BTCBlockHeader_PrevBlock = md_BTCBlockHeader.Fields().ByName("PrevBlock")
	fd_BTCBlockHeader_MerkleRoot = md_BTCBlockHeader.Fields().ByName("MerkleRoot")
	fd_BTCBlockHeader_TimeStamp = md_BTCBlockHeader.Fields().ByName("TimeStamp")
	fd_BTCBlockHeader_Bits = md_BTCBlockHeader.Fields().ByName("Bits")
	fd_BTCBlockHeader_Nonce = md_BTCBlockHeader.Fields().ByName("Nonce")
	fd_BTCBlockHeader_BlockHash = md_BTCBlockHeader.Fields().ByName("BlockHash")
	fd_BTCBlockHeader_BlockHeight = md_BTCBlockHeader.Fields().ByName("BlockHeight")
}

var _ protoreflect.Message = (*fastReflection_BTCBlockHeader)(nil)

type fastReflection_BTCBlockHeader BTCBlockHeader

func (x *BTCBlockHeader) ProtoReflect() protoreflect.Message {
	return (*fastReflection_BTCBlockHeader)(x)
}

func (x *BTCBlockHeader) slowProtoReflect() protoreflect.Message {
	mi := &file_api_sidecar_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_BTCBlockHeader_messageType fastReflection_BTCBlockHeader_messageType
var _ protoreflect.MessageType = fastReflection_BTCBlockHeader_messageType{}

type fastReflection_BTCBlockHeader_messageType struct{}

func (x fastReflection_BTCBlockHeader_messageType) Zero() protoreflect.Message {
	return (*fastReflection_BTCBlockHeader)(nil)
}
func (x fastReflection_BTCBlockHeader_messageType) New() protoreflect.Message {
	return new(fastReflection_BTCBlockHeader)
}
func (x fastReflection_BTCBlockHeader_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_BTCBlockHeader
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_BTCBlockHeader) Descriptor() protoreflect.MessageDescriptor {
	return md_BTCBlockHeader
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_BTCBlockHeader) Type() protoreflect.MessageType {
	return _fastReflection_BTCBlockHeader_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_BTCBlockHeader) New() protoreflect.Message {
	return new(fastReflection_BTCBlockHeader)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_BTCBlockHeader) Interface() protoreflect.ProtoMessage {
	return (*BTCBlockHeader)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_BTCBlockHeader) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Version != int64(0) {
		value := protoreflect.ValueOfInt64(x.Version)
		if !f(fd_BTCBlockHeader_Version, value) {
			return
		}
	}
	if x.PrevBlock != "" {
		value := protoreflect.ValueOfString(x.PrevBlock)
		if !f(fd_BTCBlockHeader_PrevBlock, value) {
			return
		}
	}
	if x.MerkleRoot != "" {
		value := protoreflect.ValueOfString(x.MerkleRoot)
		if !f(fd_BTCBlockHeader_MerkleRoot, value) {
			return
		}
	}
	if x.TimeStamp != int64(0) {
		value := protoreflect.ValueOfInt64(x.TimeStamp)
		if !f(fd_BTCBlockHeader_TimeStamp, value) {
			return
		}
	}
	if x.Bits != int64(0) {
		value := protoreflect.ValueOfInt64(x.Bits)
		if !f(fd_BTCBlockHeader_Bits, value) {
			return
		}
	}
	if x.Nonce != int64(0) {
		value := protoreflect.ValueOfInt64(x.Nonce)
		if !f(fd_BTCBlockHeader_Nonce, value) {
			return
		}
	}
	if x.BlockHash != "" {
		value := protoreflect.ValueOfString(x.BlockHash)
		if !f(fd_BTCBlockHeader_BlockHash, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_BTCBlockHeader_BlockHeight, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_BTCBlockHeader) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "api.BTCBlockHeader.Version":
		return x.Version != int64(0)
	case "api.BTCBlockHeader.PrevBlock":
		return x.PrevBlock != ""
	case "api.BTCBlockHeader.MerkleRoot":
		return x.MerkleRoot != ""
	case "api.BTCBlockHeader.TimeStamp":
		return x.TimeStamp != int64(0)
	case "api.BTCBlockHeader.Bits":
		return x.Bits != int64(0)
	case "api.BTCBlockHeader.Nonce":
		return x.Nonce != int64(0)
	case "api.BTCBlockHeader.BlockHash":
		return x.BlockHash != ""
	case "api.BTCBlockHeader.BlockHeight":
		return x.BlockHeight != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.BTCBlockHeader"))
		}
		panic(fmt.Errorf("message api.BTCBlockHeader does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BTCBlockHeader) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "api.BTCBlockHeader.Version":
		x.Version = int64(0)
	case "api.BTCBlockHeader.PrevBlock":
		x.PrevBlock = ""
	case "api.BTCBlockHeader.MerkleRoot":
		x.MerkleRoot = ""
	case "api.BTCBlockHeader.TimeStamp":
		x.TimeStamp = int64(0)
	case "api.BTCBlockHeader.Bits":
		x.Bits = int64(0)
	case "api.BTCBlockHeader.Nonce":
		x.Nonce = int64(0)
	case "api.BTCBlockHeader.BlockHash":
		x.BlockHash = ""
	case "api.BTCBlockHeader.BlockHeight":
		x.BlockHeight = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.BTCBlockHeader"))
		}
		panic(fmt.Errorf("message api.BTCBlockHeader does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_BTCBlockHeader) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "api.BTCBlockHeader.Version":
		value := x.Version
		return protoreflect.ValueOfInt64(value)
	case "api.BTCBlockHeader.PrevBlock":
		value := x.PrevBlock
		return protoreflect.ValueOfString(value)
	case "api.BTCBlockHeader.MerkleRoot":
		value := x.MerkleRoot
		return protoreflect.ValueOfString(value)
	case "api.BTCBlockHeader.TimeStamp":
		value := x.TimeStamp
		return protoreflect.ValueOfInt64(value)
	case "api.BTCBlockHeader.Bits":
		value := x.Bits
		return protoreflect.ValueOfInt64(value)
	case "api.BTCBlockHeader.Nonce":
		value := x.Nonce
		return protoreflect.ValueOfInt64(value)
	case "api.BTCBlockHeader.BlockHash":
		value := x.BlockHash
		return protoreflect.ValueOfString(value)
	case "api.BTCBlockHeader.BlockHeight":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.BTCBlockHeader"))
		}
		panic(fmt.Errorf("message api.BTCBlockHeader does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BTCBlockHeader) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "api.BTCBlockHeader.Version":
		x.Version = value.Int()
	case "api.BTCBlockHeader.PrevBlock":
		x.PrevBlock = value.Interface().(string)
	case "api.BTCBlockHeader.MerkleRoot":
		x.MerkleRoot = value.Interface().(string)
	case "api.BTCBlockHeader.TimeStamp":
		x.TimeStamp = value.Int()
	case "api.BTCBlockHeader.Bits":
		x.Bits = value.Int()
	case "api.BTCBlockHeader.Nonce":
		x.Nonce = value.Int()
	case "api.BTCBlockHeader.BlockHash":
		x.BlockHash = value.Interface().(string)
	case "api.BTCBlockHeader.BlockHeight":
		x.BlockHeight = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.BTCBlockHeader"))
		}
		panic(fmt.Errorf("message api.BTCBlockHeader does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BTCBlockHeader) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "api.BTCBlockHeader.Version":
		panic(fmt.Errorf("field Version of message api.BTCBlockHeader is not mutable"))
	case "api.BTCBlockHeader.PrevBlock":
		panic(fmt.Errorf("field PrevBlock of message api.BTCBlockHeader is not mutable"))
	case "api.BTCBlockHeader.MerkleRoot":
		panic(fmt.Errorf("field MerkleRoot of message api.BTCBlockHeader is not mutable"))
	case "api.BTCBlockHeader.TimeStamp":
		panic(fmt.Errorf("field TimeStamp of message api.BTCBlockHeader is not mutable"))
	case "api.BTCBlockHeader.Bits":
		panic(fmt.Errorf("field Bits of message api.BTCBlockHeader is not mutable"))
	case "api.BTCBlockHeader.Nonce":
		panic(fmt.Errorf("field Nonce of message api.BTCBlockHeader is not mutable"))
	case "api.BTCBlockHeader.BlockHash":
		panic(fmt.Errorf("field BlockHash of message api.BTCBlockHeader is not mutable"))
	case "api.BTCBlockHeader.BlockHeight":
		panic(fmt.Errorf("field BlockHeight of message api.BTCBlockHeader is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.BTCBlockHeader"))
		}
		panic(fmt.Errorf("message api.BTCBlockHeader does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_BTCBlockHeader) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "api.BTCBlockHeader.Version":
		return protoreflect.ValueOfInt64(int64(0))
	case "api.BTCBlockHeader.PrevBlock":
		return protoreflect.ValueOfString("")
	case "api.BTCBlockHeader.MerkleRoot":
		return protoreflect.ValueOfString("")
	case "api.BTCBlockHeader.TimeStamp":
		return protoreflect.ValueOfInt64(int64(0))
	case "api.BTCBlockHeader.Bits":
		return protoreflect.ValueOfInt64(int64(0))
	case "api.BTCBlockHeader.Nonce":
		return protoreflect.ValueOfInt64(int64(0))
	case "api.BTCBlockHeader.BlockHash":
		return protoreflect.ValueOfString("")
	case "api.BTCBlockHeader.BlockHeight":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.BTCBlockHeader"))
		}
		panic(fmt.Errorf("message api.BTCBlockHeader does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_BTCBlockHeader) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in api.BTCBlockHeader", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_BTCBlockHeader) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BTCBlockHeader) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_BTCBlockHeader) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_BTCBlockHeader) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*BTCBlockHeader)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Version != 0 {
			n += 1 + runtime.Sov(uint64(x.Version))
		}
		l = len(x.PrevBlock)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.MerkleRoot)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TimeStamp != 0 {
			n += 1 + runtime.Sov(uint64(x.TimeStamp))
		}
		if x.Bits != 0 {
			n += 1 + runtime.Sov(uint64(x.Bits))
		}
		if x.Nonce != 0 {
			n += 1 + runtime.Sov(uint64(x.Nonce))
		}
		l = len(x.BlockHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*BTCBlockHeader)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x40
		}
		if len(x.BlockHash) > 0 {
			i -= len(x.BlockHash)
			copy(dAtA[i:], x.BlockHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BlockHash)))
			i--
			dAtA[i] = 0x3a
		}
		if x.Nonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Nonce))
			i--
			dAtA[i] = 0x30
		}
		if x.Bits != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Bits))
			i--
			dAtA[i] = 0x28
		}
		if x.TimeStamp != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TimeStamp))
			i--
			dAtA[i] = 0x20
		}
		if len(x.MerkleRoot) > 0 {
			i -= len(x.MerkleRoot)
			copy(dAtA[i:], x.MerkleRoot)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MerkleRoot)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.PrevBlock) > 0 {
			i -= len(x.PrevBlock)
			copy(dAtA[i:], x.PrevBlock)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PrevBlock)))
			i--
			dAtA[i] = 0x12
		}
		if x.Version != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Version))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*BTCBlockHeader)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BTCBlockHeader: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BTCBlockHeader: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
				}
				x.Version = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Version |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PrevBlock", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PrevBlock = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MerkleRoot", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MerkleRoot = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TimeStamp", wireType)
				}
				x.TimeStamp = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TimeStamp |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Bits", wireType)
				}
				x.Bits = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Bits |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
				}
				x.Nonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Nonce |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BlockHash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_Redemption                     protoreflect.MessageDescriptor
	fd_Redemption_id                  protoreflect.FieldDescriptor
	fd_Redemption_destination_address protoreflect.FieldDescriptor
	fd_Redemption_amount              protoreflect.FieldDescriptor
)

func init() {
	file_api_sidecar_service_proto_init()
	md_Redemption = File_api_sidecar_service_proto.Messages().ByName("Redemption")
	fd_Redemption_id = md_Redemption.Fields().ByName("id")
	fd_Redemption_destination_address = md_Redemption.Fields().ByName("destination_address")
	fd_Redemption_amount = md_Redemption.Fields().ByName("amount")
}

var _ protoreflect.Message = (*fastReflection_Redemption)(nil)

type fastReflection_Redemption Redemption

func (x *Redemption) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Redemption)(x)
}

func (x *Redemption) slowProtoReflect() protoreflect.Message {
	mi := &file_api_sidecar_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Redemption_messageType fastReflection_Redemption_messageType
var _ protoreflect.MessageType = fastReflection_Redemption_messageType{}

type fastReflection_Redemption_messageType struct{}

func (x fastReflection_Redemption_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Redemption)(nil)
}
func (x fastReflection_Redemption_messageType) New() protoreflect.Message {
	return new(fastReflection_Redemption)
}
func (x fastReflection_Redemption_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Redemption
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Redemption) Descriptor() protoreflect.MessageDescriptor {
	return md_Redemption
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Redemption) Type() protoreflect.MessageType {
	return _fastReflection_Redemption_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Redemption) New() protoreflect.Message {
	return new(fastReflection_Redemption)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Redemption) Interface() protoreflect.ProtoMessage {
	return (*Redemption)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Redemption) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_Redemption_id, value) {
			return
		}
	}
	if len(x.DestinationAddress) != 0 {
		value := protoreflect.ValueOfBytes(x.DestinationAddress)
		if !f(fd_Redemption_destination_address, value) {
			return
		}
	}
	if x.Amount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Amount)
		if !f(fd_Redemption_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Redemption) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "api.Redemption.id":
		return x.Id != uint64(0)
	case "api.Redemption.destination_address":
		return len(x.DestinationAddress) != 0
	case "api.Redemption.amount":
		return x.Amount != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.Redemption"))
		}
		panic(fmt.Errorf("message api.Redemption does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Redemption) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "api.Redemption.id":
		x.Id = uint64(0)
	case "api.Redemption.destination_address":
		x.DestinationAddress = nil
	case "api.Redemption.amount":
		x.Amount = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.Redemption"))
		}
		panic(fmt.Errorf("message api.Redemption does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Redemption) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "api.Redemption.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "api.Redemption.destination_address":
		value := x.DestinationAddress
		return protoreflect.ValueOfBytes(value)
	case "api.Redemption.amount":
		value := x.Amount
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.Redemption"))
		}
		panic(fmt.Errorf("message api.Redemption does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Redemption) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "api.Redemption.id":
		x.Id = value.Uint()
	case "api.Redemption.destination_address":
		x.DestinationAddress = value.Bytes()
	case "api.Redemption.amount":
		x.Amount = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.Redemption"))
		}
		panic(fmt.Errorf("message api.Redemption does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Redemption) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "api.Redemption.id":
		panic(fmt.Errorf("field id of message api.Redemption is not mutable"))
	case "api.Redemption.destination_address":
		panic(fmt.Errorf("field destination_address of message api.Redemption is not mutable"))
	case "api.Redemption.amount":
		panic(fmt.Errorf("field amount of message api.Redemption is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.Redemption"))
		}
		panic(fmt.Errorf("message api.Redemption does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Redemption) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "api.Redemption.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "api.Redemption.destination_address":
		return protoreflect.ValueOfBytes(nil)
	case "api.Redemption.amount":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.Redemption"))
		}
		panic(fmt.Errorf("message api.Redemption does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Redemption) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in api.Redemption", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Redemption) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Redemption) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Redemption) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Redemption) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Redemption)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		l = len(x.DestinationAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Amount != 0 {
			n += 1 + runtime.Sov(uint64(x.Amount))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Redemption)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Amount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Amount))
			i--
			dAtA[i] = 0x18
		}
		if len(x.DestinationAddress) > 0 {
			i -= len(x.DestinationAddress)
			copy(dAtA[i:], x.DestinationAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DestinationAddress)))
			i--
			dAtA[i] = 0x12
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Redemption)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Redemption: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Redemption: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DestinationAddress", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DestinationAddress = append(x.DestinationAddress[:0], dAtA[iNdEx:postIndex]...)
				if x.DestinationAddress == nil {
					x.DestinationAddress = []byte{}
				}
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				x.Amount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Amount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_BurnEvent                 protoreflect.MessageDescriptor
	fd_BurnEvent_txID            protoreflect.FieldDescriptor
	fd_BurnEvent_logIndex        protoreflect.FieldDescriptor
	fd_BurnEvent_chainID         protoreflect.FieldDescriptor
	fd_BurnEvent_destinationAddr protoreflect.FieldDescriptor
	fd_BurnEvent_amount          protoreflect.FieldDescriptor
	fd_BurnEvent_IsZenBTC        protoreflect.FieldDescriptor
	fd_BurnEvent_height          protoreflect.FieldDescriptor
)

func init() {
	file_api_sidecar_service_proto_init()
	md_BurnEvent = File_api_sidecar_service_proto.Messages().ByName("BurnEvent")
	fd_BurnEvent_txID = md_BurnEvent.Fields().ByName("txID")
	fd_BurnEvent_logIndex = md_BurnEvent.Fields().ByName("logIndex")
	fd_BurnEvent_chainID = md_BurnEvent.Fields().ByName("chainID")
	fd_BurnEvent_destinationAddr = md_BurnEvent.Fields().ByName("destinationAddr")
	fd_BurnEvent_amount = md_BurnEvent.Fields().ByName("amount")
	fd_BurnEvent_IsZenBTC = md_BurnEvent.Fields().ByName("IsZenBTC")
	fd_BurnEvent_height = md_BurnEvent.Fields().ByName("height")
}

var _ protoreflect.Message = (*fastReflection_BurnEvent)(nil)

type fastReflection_BurnEvent BurnEvent

func (x *BurnEvent) ProtoReflect() protoreflect.Message {
	return (*fastReflection_BurnEvent)(x)
}

func (x *BurnEvent) slowProtoReflect() protoreflect.Message {
	mi := &file_api_sidecar_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_BurnEvent_messageType fastReflection_BurnEvent_messageType
var _ protoreflect.MessageType = fastReflection_BurnEvent_messageType{}

type fastReflection_BurnEvent_messageType struct{}

func (x fastReflection_BurnEvent_messageType) Zero() protoreflect.Message {
	return (*fastReflection_BurnEvent)(nil)
}
func (x fastReflection_BurnEvent_messageType) New() protoreflect.Message {
	return new(fastReflection_BurnEvent)
}
func (x fastReflection_BurnEvent_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_BurnEvent
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_BurnEvent) Descriptor() protoreflect.MessageDescriptor {
	return md_BurnEvent
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_BurnEvent) Type() protoreflect.MessageType {
	return _fastReflection_BurnEvent_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_BurnEvent) New() protoreflect.Message {
	return new(fastReflection_BurnEvent)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_BurnEvent) Interface() protoreflect.ProtoMessage {
	return (*BurnEvent)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_BurnEvent) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TxID != "" {
		value := protoreflect.ValueOfString(x.TxID)
		if !f(fd_BurnEvent_txID, value) {
			return
		}
	}
	if x.LogIndex != uint64(0) {
		value := protoreflect.ValueOfUint64(x.LogIndex)
		if !f(fd_BurnEvent_logIndex, value) {
			return
		}
	}
	if x.ChainID != "" {
		value := protoreflect.ValueOfString(x.ChainID)
		if !f(fd_BurnEvent_chainID, value) {
			return
		}
	}
	if len(x.DestinationAddr) != 0 {
		value := protoreflect.ValueOfBytes(x.DestinationAddr)
		if !f(fd_BurnEvent_destinationAddr, value) {
			return
		}
	}
	if x.Amount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Amount)
		if !f(fd_BurnEvent_amount, value) {
			return
		}
	}
	if x.IsZenBTC != false {
		value := protoreflect.ValueOfBool(x.IsZenBTC)
		if !f(fd_BurnEvent_IsZenBTC, value) {
			return
		}
	}
	if x.Height != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Height)
		if !f(fd_BurnEvent_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_BurnEvent) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "api.BurnEvent.txID":
		return x.TxID != ""
	case "api.BurnEvent.logIndex":
		return x.LogIndex != uint64(0)
	case "api.BurnEvent.chainID":
		return x.ChainID != ""
	case "api.BurnEvent.destinationAddr":
		return len(x.DestinationAddr) != 0
	case "api.BurnEvent.amount":
		return x.Amount != uint64(0)
	case "api.BurnEvent.IsZenBTC":
		return x.IsZenBTC != false
	case "api.BurnEvent.height":
		return x.Height != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.BurnEvent"))
		}
		panic(fmt.Errorf("message api.BurnEvent does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BurnEvent) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "api.BurnEvent.txID":
		x.TxID = ""
	case "api.BurnEvent.logIndex":
		x.LogIndex = uint64(0)
	case "api.BurnEvent.chainID":
		x.ChainID = ""
	case "api.BurnEvent.destinationAddr":
		x.DestinationAddr = nil
	case "api.BurnEvent.amount":
		x.Amount = uint64(0)
	case "api.BurnEvent.IsZenBTC":
		x.IsZenBTC = false
	case "api.BurnEvent.height":
		x.Height = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.BurnEvent"))
		}
		panic(fmt.Errorf("message api.BurnEvent does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_BurnEvent) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "api.BurnEvent.txID":
		value := x.TxID
		return protoreflect.ValueOfString(value)
	case "api.BurnEvent.logIndex":
		value := x.LogIndex
		return protoreflect.ValueOfUint64(value)
	case "api.BurnEvent.chainID":
		value := x.ChainID
		return protoreflect.ValueOfString(value)
	case "api.BurnEvent.destinationAddr":
		value := x.DestinationAddr
		return protoreflect.ValueOfBytes(value)
	case "api.BurnEvent.amount":
		value := x.Amount
		return protoreflect.ValueOfUint64(value)
	case "api.BurnEvent.IsZenBTC":
		value := x.IsZenBTC
		return protoreflect.ValueOfBool(value)
	case "api.BurnEvent.height":
		value := x.Height
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.BurnEvent"))
		}
		panic(fmt.Errorf("message api.BurnEvent does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BurnEvent) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "api.BurnEvent.txID":
		x.TxID = value.Interface().(string)
	case "api.BurnEvent.logIndex":
		x.LogIndex = value.Uint()
	case "api.BurnEvent.chainID":
		x.ChainID = value.Interface().(string)
	case "api.BurnEvent.destinationAddr":
		x.DestinationAddr = value.Bytes()
	case "api.BurnEvent.amount":
		x.Amount = value.Uint()
	case "api.BurnEvent.IsZenBTC":
		x.IsZenBTC = value.Bool()
	case "api.BurnEvent.height":
		x.Height = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.BurnEvent"))
		}
		panic(fmt.Errorf("message api.BurnEvent does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BurnEvent) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "api.BurnEvent.txID":
		panic(fmt.Errorf("field txID of message api.BurnEvent is not mutable"))
	case "api.BurnEvent.logIndex":
		panic(fmt.Errorf("field logIndex of message api.BurnEvent is not mutable"))
	case "api.BurnEvent.chainID":
		panic(fmt.Errorf("field chainID of message api.BurnEvent is not mutable"))
	case "api.BurnEvent.destinationAddr":
		panic(fmt.Errorf("field destinationAddr of message api.BurnEvent is not mutable"))
	case "api.BurnEvent.amount":
		panic(fmt.Errorf("field amount of message api.BurnEvent is not mutable"))
	case "api.BurnEvent.IsZenBTC":
		panic(fmt.Errorf("field IsZenBTC of message api.BurnEvent is not mutable"))
	case "api.BurnEvent.height":
		panic(fmt.Errorf("field height of message api.BurnEvent is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.BurnEvent"))
		}
		panic(fmt.Errorf("message api.BurnEvent does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_BurnEvent) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "api.BurnEvent.txID":
		return protoreflect.ValueOfString("")
	case "api.BurnEvent.logIndex":
		return protoreflect.ValueOfUint64(uint64(0))
	case "api.BurnEvent.chainID":
		return protoreflect.ValueOfString("")
	case "api.BurnEvent.destinationAddr":
		return protoreflect.ValueOfBytes(nil)
	case "api.BurnEvent.amount":
		return protoreflect.ValueOfUint64(uint64(0))
	case "api.BurnEvent.IsZenBTC":
		return protoreflect.ValueOfBool(false)
	case "api.BurnEvent.height":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.BurnEvent"))
		}
		panic(fmt.Errorf("message api.BurnEvent does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_BurnEvent) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in api.BurnEvent", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_BurnEvent) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BurnEvent) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_BurnEvent) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_BurnEvent) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*BurnEvent)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.TxID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.LogIndex != 0 {
			n += 1 + runtime.Sov(uint64(x.LogIndex))
		}
		l = len(x.ChainID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.DestinationAddr)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Amount != 0 {
			n += 1 + runtime.Sov(uint64(x.Amount))
		}
		if x.IsZenBTC {
			n += 2
		}
		if x.Height != 0 {
			n += 1 + runtime.Sov(uint64(x.Height))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*BurnEvent)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Height != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Height))
			i--
			dAtA[i] = 0x38
		}
		if x.IsZenBTC {
			i--
			if x.IsZenBTC {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x30
		}
		if x.Amount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Amount))
			i--
			dAtA[i] = 0x28
		}
		if len(x.DestinationAddr) > 0 {
			i -= len(x.DestinationAddr)
			copy(dAtA[i:], x.DestinationAddr)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DestinationAddr)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ChainID) > 0 {
			i -= len(x.ChainID)
			copy(dAtA[i:], x.ChainID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainID)))
			i--
			dAtA[i] = 0x1a
		}
		if x.LogIndex != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.LogIndex))
			i--
			dAtA[i] = 0x10
		}
		if len(x.TxID) > 0 {
			i -= len(x.TxID)
			copy(dAtA[i:], x.TxID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TxID)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*BurnEvent)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BurnEvent: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BurnEvent: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TxID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TxID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LogIndex", wireType)
				}
				x.LogIndex = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.LogIndex |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DestinationAddr", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DestinationAddr = append(x.DestinationAddr[:0], dAtA[iNdEx:postIndex]...)
				if x.DestinationAddr == nil {
					x.DestinationAddr = []byte{}
				}
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				x.Amount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Amount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IsZenBTC", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.IsZenBTC = bool(v != 0)
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				x.Height = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Height |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_SidecarStateRequest protoreflect.MessageDescriptor
)

func init() {
	file_api_sidecar_service_proto_init()
	md_SidecarStateRequest = File_api_sidecar_service_proto.Messages().ByName("SidecarStateRequest")
}

var _ protoreflect.Message = (*fastReflection_SidecarStateRequest)(nil)

type fastReflection_SidecarStateRequest SidecarStateRequest

func (x *SidecarStateRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SidecarStateRequest)(x)
}

func (x *SidecarStateRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_api_sidecar_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SidecarStateRequest_messageType fastReflection_SidecarStateRequest_messageType
var _ protoreflect.MessageType = fastReflection_SidecarStateRequest_messageType{}

type fastReflection_SidecarStateRequest_messageType struct{}

func (x fastReflection_SidecarStateRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SidecarStateRequest)(nil)
}
func (x fastReflection_SidecarStateRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_SidecarStateRequest)
}
func (x fastReflection_SidecarStateRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SidecarStateRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SidecarStateRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_SidecarStateRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SidecarStateRequest) Type() protoreflect.MessageType {
	return _fastReflection_SidecarStateRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SidecarStateRequest) New() protoreflect.Message {
	return new(fastReflection_SidecarStateRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SidecarStateRequest) Interface() protoreflect.ProtoMessage {
	return (*SidecarStateRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SidecarStateRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SidecarStateRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SidecarStateRequest"))
		}
		panic(fmt.Errorf("message api.SidecarStateRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SidecarStateRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SidecarStateRequest"))
		}
		panic(fmt.Errorf("message api.SidecarStateRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SidecarStateRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SidecarStateRequest"))
		}
		panic(fmt.Errorf("message api.SidecarStateRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SidecarStateRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SidecarStateRequest"))
		}
		panic(fmt.Errorf("message api.SidecarStateRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SidecarStateRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SidecarStateRequest"))
		}
		panic(fmt.Errorf("message api.SidecarStateRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SidecarStateRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SidecarStateRequest"))
		}
		panic(fmt.Errorf("message api.SidecarStateRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SidecarStateRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in api.SidecarStateRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SidecarStateRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SidecarStateRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SidecarStateRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SidecarStateRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SidecarStateRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SidecarStateRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SidecarStateRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SidecarStateRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SidecarStateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_SidecarStateResponse_7_list)(nil)

type _SidecarStateResponse_7_list struct {
	list *[]*BurnEvent
}

func (x *_SidecarStateResponse_7_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_SidecarStateResponse_7_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_SidecarStateResponse_7_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BurnEvent)
	(*x.list)[i] = concreteValue
}

func (x *_SidecarStateResponse_7_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BurnEvent)
	*x.list = append(*x.list, concreteValue)
}

func (x *_SidecarStateResponse_7_list) AppendMutable() protoreflect.Value {
	v := new(BurnEvent)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_SidecarStateResponse_7_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_SidecarStateResponse_7_list) NewElement() protoreflect.Value {
	v := new(BurnEvent)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_SidecarStateResponse_7_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_SidecarStateResponse_8_list)(nil)

type _SidecarStateResponse_8_list struct {
	list *[]*Redemption
}

func (x *_SidecarStateResponse_8_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_SidecarStateResponse_8_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_SidecarStateResponse_8_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Redemption)
	(*x.list)[i] = concreteValue
}

func (x *_SidecarStateResponse_8_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Redemption)
	*x.list = append(*x.list, concreteValue)
}

func (x *_SidecarStateResponse_8_list) AppendMutable() protoreflect.Value {
	v := new(Redemption)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_SidecarStateResponse_8_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_SidecarStateResponse_8_list) NewElement() protoreflect.Value {
	v := new(Redemption)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_SidecarStateResponse_8_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_SidecarStateResponse_12_list)(nil)

type _SidecarStateResponse_12_list struct {
	list *[]*SolanaMintEvent
}

func (x *_SidecarStateResponse_12_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_SidecarStateResponse_12_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_SidecarStateResponse_12_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*SolanaMintEvent)
	(*x.list)[i] = concreteValue
}

func (x *_SidecarStateResponse_12_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*SolanaMintEvent)
	*x.list = append(*x.list, concreteValue)
}

func (x *_SidecarStateResponse_12_list) AppendMutable() protoreflect.Value {
	v := new(SolanaMintEvent)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_SidecarStateResponse_12_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_SidecarStateResponse_12_list) NewElement() protoreflect.Value {
	v := new(SolanaMintEvent)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_SidecarStateResponse_12_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_SidecarStateResponse_13_list)(nil)

type _SidecarStateResponse_13_list struct {
	list *[]*BurnEvent
}

func (x *_SidecarStateResponse_13_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_SidecarStateResponse_13_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_SidecarStateResponse_13_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BurnEvent)
	(*x.list)[i] = concreteValue
}

func (x *_SidecarStateResponse_13_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*BurnEvent)
	*x.list = append(*x.list, concreteValue)
}

func (x *_SidecarStateResponse_13_list) AppendMutable() protoreflect.Value {
	v := new(BurnEvent)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_SidecarStateResponse_13_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_SidecarStateResponse_13_list) NewElement() protoreflect.Value {
	v := new(BurnEvent)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_SidecarStateResponse_13_list) IsValid() bool {
	return x.list != nil
}

var (
	md_SidecarStateResponse                            protoreflect.MessageDescriptor
	fd_SidecarStateResponse_EigenDelegations           protoreflect.FieldDescriptor
	fd_SidecarStateResponse_EthBlockHeight             protoreflect.FieldDescriptor
	fd_SidecarStateResponse_EthGasLimit                protoreflect.FieldDescriptor
	fd_SidecarStateResponse_EthBaseFee                 protoreflect.FieldDescriptor
	fd_SidecarStateResponse_EthTipCap                  protoreflect.FieldDescriptor
	fd_SidecarStateResponse_SolanaLamportsPerSignature protoreflect.FieldDescriptor
	fd_SidecarStateResponse_EthBurnEvents              protoreflect.FieldDescriptor
	fd_SidecarStateResponse_Redemptions                protoreflect.FieldDescriptor
	fd_SidecarStateResponse_ROCKUSDPrice               protoreflect.FieldDescriptor
	fd_SidecarStateResponse_BTCUSDPrice                protoreflect.FieldDescriptor
	fd_SidecarStateResponse_ETHUSDPrice                protoreflect.FieldDescriptor
	fd_SidecarStateResponse_SolanaMintEvents           protoreflect.FieldDescriptor
	fd_SidecarStateResponse_SolanaBurnEvents           protoreflect.FieldDescriptor
	fd_SidecarStateResponse_SidecarVersionName         protoreflect.FieldDescriptor
)

func init() {
	file_api_sidecar_service_proto_init()
	md_SidecarStateResponse = File_api_sidecar_service_proto.Messages().ByName("SidecarStateResponse")
	fd_SidecarStateResponse_EigenDelegations = md_SidecarStateResponse.Fields().ByName("EigenDelegations")
	fd_SidecarStateResponse_EthBlockHeight = md_SidecarStateResponse.Fields().ByName("EthBlockHeight")
	fd_SidecarStateResponse_EthGasLimit = md_SidecarStateResponse.Fields().ByName("EthGasLimit")
	fd_SidecarStateResponse_EthBaseFee = md_SidecarStateResponse.Fields().ByName("EthBaseFee")
	fd_SidecarStateResponse_EthTipCap = md_SidecarStateResponse.Fields().ByName("EthTipCap")
	fd_SidecarStateResponse_SolanaLamportsPerSignature = md_SidecarStateResponse.Fields().ByName("SolanaLamportsPerSignature")
	fd_SidecarStateResponse_EthBurnEvents = md_SidecarStateResponse.Fields().ByName("EthBurnEvents")
	fd_SidecarStateResponse_Redemptions = md_SidecarStateResponse.Fields().ByName("Redemptions")
	fd_SidecarStateResponse_ROCKUSDPrice = md_SidecarStateResponse.Fields().ByName("ROCKUSDPrice")
	fd_SidecarStateResponse_BTCUSDPrice = md_SidecarStateResponse.Fields().ByName("BTCUSDPrice")
	fd_SidecarStateResponse_ETHUSDPrice = md_SidecarStateResponse.Fields().ByName("ETHUSDPrice")
	fd_SidecarStateResponse_SolanaMintEvents = md_SidecarStateResponse.Fields().ByName("SolanaMintEvents")
	fd_SidecarStateResponse_SolanaBurnEvents = md_SidecarStateResponse.Fields().ByName("SolanaBurnEvents")
	fd_SidecarStateResponse_SidecarVersionName = md_SidecarStateResponse.Fields().ByName("SidecarVersionName")
}

var _ protoreflect.Message = (*fastReflection_SidecarStateResponse)(nil)

type fastReflection_SidecarStateResponse SidecarStateResponse

func (x *SidecarStateResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SidecarStateResponse)(x)
}

func (x *SidecarStateResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_api_sidecar_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SidecarStateResponse_messageType fastReflection_SidecarStateResponse_messageType
var _ protoreflect.MessageType = fastReflection_SidecarStateResponse_messageType{}

type fastReflection_SidecarStateResponse_messageType struct{}

func (x fastReflection_SidecarStateResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SidecarStateResponse)(nil)
}
func (x fastReflection_SidecarStateResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_SidecarStateResponse)
}
func (x fastReflection_SidecarStateResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SidecarStateResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SidecarStateResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_SidecarStateResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SidecarStateResponse) Type() protoreflect.MessageType {
	return _fastReflection_SidecarStateResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SidecarStateResponse) New() protoreflect.Message {
	return new(fastReflection_SidecarStateResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SidecarStateResponse) Interface() protoreflect.ProtoMessage {
	return (*SidecarStateResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SidecarStateResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.EigenDelegations) != 0 {
		value := protoreflect.ValueOfBytes(x.EigenDelegations)
		if !f(fd_SidecarStateResponse_EigenDelegations, value) {
			return
		}
	}
	if x.EthBlockHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EthBlockHeight)
		if !f(fd_SidecarStateResponse_EthBlockHeight, value) {
			return
		}
	}
	if x.EthGasLimit != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EthGasLimit)
		if !f(fd_SidecarStateResponse_EthGasLimit, value) {
			return
		}
	}
	if x.EthBaseFee != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EthBaseFee)
		if !f(fd_SidecarStateResponse_EthBaseFee, value) {
			return
		}
	}
	if x.EthTipCap != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EthTipCap)
		if !f(fd_SidecarStateResponse_EthTipCap, value) {
			return
		}
	}
	if x.SolanaLamportsPerSignature != uint64(0) {
		value := protoreflect.ValueOfUint64(x.SolanaLamportsPerSignature)
		if !f(fd_SidecarStateResponse_SolanaLamportsPerSignature, value) {
			return
		}
	}
	if len(x.EthBurnEvents) != 0 {
		value := protoreflect.ValueOfList(&_SidecarStateResponse_7_list{list: &x.EthBurnEvents})
		if !f(fd_SidecarStateResponse_EthBurnEvents, value) {
			return
		}
	}
	if len(x.Redemptions) != 0 {
		value := protoreflect.ValueOfList(&_SidecarStateResponse_8_list{list: &x.Redemptions})
		if !f(fd_SidecarStateResponse_Redemptions, value) {
			return
		}
	}
	if x.ROCKUSDPrice != "" {
		value := protoreflect.ValueOfString(x.ROCKUSDPrice)
		if !f(fd_SidecarStateResponse_ROCKUSDPrice, value) {
			return
		}
	}
	if x.BTCUSDPrice != "" {
		value := protoreflect.ValueOfString(x.BTCUSDPrice)
		if !f(fd_SidecarStateResponse_BTCUSDPrice, value) {
			return
		}
	}
	if x.ETHUSDPrice != "" {
		value := protoreflect.ValueOfString(x.ETHUSDPrice)
		if !f(fd_SidecarStateResponse_ETHUSDPrice, value) {
			return
		}
	}
	if len(x.SolanaMintEvents) != 0 {
		value := protoreflect.ValueOfList(&_SidecarStateResponse_12_list{list: &x.SolanaMintEvents})
		if !f(fd_SidecarStateResponse_SolanaMintEvents, value) {
			return
		}
	}
	if len(x.SolanaBurnEvents) != 0 {
		value := protoreflect.ValueOfList(&_SidecarStateResponse_13_list{list: &x.SolanaBurnEvents})
		if !f(fd_SidecarStateResponse_SolanaBurnEvents, value) {
			return
		}
	}
	if x.SidecarVersionName != "" {
		value := protoreflect.ValueOfString(x.SidecarVersionName)
		if !f(fd_SidecarStateResponse_SidecarVersionName, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SidecarStateResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "api.SidecarStateResponse.EigenDelegations":
		return len(x.EigenDelegations) != 0
	case "api.SidecarStateResponse.EthBlockHeight":
		return x.EthBlockHeight != uint64(0)
	case "api.SidecarStateResponse.EthGasLimit":
		return x.EthGasLimit != uint64(0)
	case "api.SidecarStateResponse.EthBaseFee":
		return x.EthBaseFee != uint64(0)
	case "api.SidecarStateResponse.EthTipCap":
		return x.EthTipCap != uint64(0)
	case "api.SidecarStateResponse.SolanaLamportsPerSignature":
		return x.SolanaLamportsPerSignature != uint64(0)
	case "api.SidecarStateResponse.EthBurnEvents":
		return len(x.EthBurnEvents) != 0
	case "api.SidecarStateResponse.Redemptions":
		return len(x.Redemptions) != 0
	case "api.SidecarStateResponse.ROCKUSDPrice":
		return x.ROCKUSDPrice != ""
	case "api.SidecarStateResponse.BTCUSDPrice":
		return x.BTCUSDPrice != ""
	case "api.SidecarStateResponse.ETHUSDPrice":
		return x.ETHUSDPrice != ""
	case "api.SidecarStateResponse.SolanaMintEvents":
		return len(x.SolanaMintEvents) != 0
	case "api.SidecarStateResponse.SolanaBurnEvents":
		return len(x.SolanaBurnEvents) != 0
	case "api.SidecarStateResponse.SidecarVersionName":
		return x.SidecarVersionName != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SidecarStateResponse"))
		}
		panic(fmt.Errorf("message api.SidecarStateResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SidecarStateResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "api.SidecarStateResponse.EigenDelegations":
		x.EigenDelegations = nil
	case "api.SidecarStateResponse.EthBlockHeight":
		x.EthBlockHeight = uint64(0)
	case "api.SidecarStateResponse.EthGasLimit":
		x.EthGasLimit = uint64(0)
	case "api.SidecarStateResponse.EthBaseFee":
		x.EthBaseFee = uint64(0)
	case "api.SidecarStateResponse.EthTipCap":
		x.EthTipCap = uint64(0)
	case "api.SidecarStateResponse.SolanaLamportsPerSignature":
		x.SolanaLamportsPerSignature = uint64(0)
	case "api.SidecarStateResponse.EthBurnEvents":
		x.EthBurnEvents = nil
	case "api.SidecarStateResponse.Redemptions":
		x.Redemptions = nil
	case "api.SidecarStateResponse.ROCKUSDPrice":
		x.ROCKUSDPrice = ""
	case "api.SidecarStateResponse.BTCUSDPrice":
		x.BTCUSDPrice = ""
	case "api.SidecarStateResponse.ETHUSDPrice":
		x.ETHUSDPrice = ""
	case "api.SidecarStateResponse.SolanaMintEvents":
		x.SolanaMintEvents = nil
	case "api.SidecarStateResponse.SolanaBurnEvents":
		x.SolanaBurnEvents = nil
	case "api.SidecarStateResponse.SidecarVersionName":
		x.SidecarVersionName = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SidecarStateResponse"))
		}
		panic(fmt.Errorf("message api.SidecarStateResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SidecarStateResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "api.SidecarStateResponse.EigenDelegations":
		value := x.EigenDelegations
		return protoreflect.ValueOfBytes(value)
	case "api.SidecarStateResponse.EthBlockHeight":
		value := x.EthBlockHeight
		return protoreflect.ValueOfUint64(value)
	case "api.SidecarStateResponse.EthGasLimit":
		value := x.EthGasLimit
		return protoreflect.ValueOfUint64(value)
	case "api.SidecarStateResponse.EthBaseFee":
		value := x.EthBaseFee
		return protoreflect.ValueOfUint64(value)
	case "api.SidecarStateResponse.EthTipCap":
		value := x.EthTipCap
		return protoreflect.ValueOfUint64(value)
	case "api.SidecarStateResponse.SolanaLamportsPerSignature":
		value := x.SolanaLamportsPerSignature
		return protoreflect.ValueOfUint64(value)
	case "api.SidecarStateResponse.EthBurnEvents":
		if len(x.EthBurnEvents) == 0 {
			return protoreflect.ValueOfList(&_SidecarStateResponse_7_list{})
		}
		listValue := &_SidecarStateResponse_7_list{list: &x.EthBurnEvents}
		return protoreflect.ValueOfList(listValue)
	case "api.SidecarStateResponse.Redemptions":
		if len(x.Redemptions) == 0 {
			return protoreflect.ValueOfList(&_SidecarStateResponse_8_list{})
		}
		listValue := &_SidecarStateResponse_8_list{list: &x.Redemptions}
		return protoreflect.ValueOfList(listValue)
	case "api.SidecarStateResponse.ROCKUSDPrice":
		value := x.ROCKUSDPrice
		return protoreflect.ValueOfString(value)
	case "api.SidecarStateResponse.BTCUSDPrice":
		value := x.BTCUSDPrice
		return protoreflect.ValueOfString(value)
	case "api.SidecarStateResponse.ETHUSDPrice":
		value := x.ETHUSDPrice
		return protoreflect.ValueOfString(value)
	case "api.SidecarStateResponse.SolanaMintEvents":
		if len(x.SolanaMintEvents) == 0 {
			return protoreflect.ValueOfList(&_SidecarStateResponse_12_list{})
		}
		listValue := &_SidecarStateResponse_12_list{list: &x.SolanaMintEvents}
		return protoreflect.ValueOfList(listValue)
	case "api.SidecarStateResponse.SolanaBurnEvents":
		if len(x.SolanaBurnEvents) == 0 {
			return protoreflect.ValueOfList(&_SidecarStateResponse_13_list{})
		}
		listValue := &_SidecarStateResponse_13_list{list: &x.SolanaBurnEvents}
		return protoreflect.ValueOfList(listValue)
	case "api.SidecarStateResponse.SidecarVersionName":
		value := x.SidecarVersionName
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SidecarStateResponse"))
		}
		panic(fmt.Errorf("message api.SidecarStateResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SidecarStateResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "api.SidecarStateResponse.EigenDelegations":
		x.EigenDelegations = value.Bytes()
	case "api.SidecarStateResponse.EthBlockHeight":
		x.EthBlockHeight = value.Uint()
	case "api.SidecarStateResponse.EthGasLimit":
		x.EthGasLimit = value.Uint()
	case "api.SidecarStateResponse.EthBaseFee":
		x.EthBaseFee = value.Uint()
	case "api.SidecarStateResponse.EthTipCap":
		x.EthTipCap = value.Uint()
	case "api.SidecarStateResponse.SolanaLamportsPerSignature":
		x.SolanaLamportsPerSignature = value.Uint()
	case "api.SidecarStateResponse.EthBurnEvents":
		lv := value.List()
		clv := lv.(*_SidecarStateResponse_7_list)
		x.EthBurnEvents = *clv.list
	case "api.SidecarStateResponse.Redemptions":
		lv := value.List()
		clv := lv.(*_SidecarStateResponse_8_list)
		x.Redemptions = *clv.list
	case "api.SidecarStateResponse.ROCKUSDPrice":
		x.ROCKUSDPrice = value.Interface().(string)
	case "api.SidecarStateResponse.BTCUSDPrice":
		x.BTCUSDPrice = value.Interface().(string)
	case "api.SidecarStateResponse.ETHUSDPrice":
		x.ETHUSDPrice = value.Interface().(string)
	case "api.SidecarStateResponse.SolanaMintEvents":
		lv := value.List()
		clv := lv.(*_SidecarStateResponse_12_list)
		x.SolanaMintEvents = *clv.list
	case "api.SidecarStateResponse.SolanaBurnEvents":
		lv := value.List()
		clv := lv.(*_SidecarStateResponse_13_list)
		x.SolanaBurnEvents = *clv.list
	case "api.SidecarStateResponse.SidecarVersionName":
		x.SidecarVersionName = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SidecarStateResponse"))
		}
		panic(fmt.Errorf("message api.SidecarStateResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SidecarStateResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "api.SidecarStateResponse.EthBurnEvents":
		if x.EthBurnEvents == nil {
			x.EthBurnEvents = []*BurnEvent{}
		}
		value := &_SidecarStateResponse_7_list{list: &x.EthBurnEvents}
		return protoreflect.ValueOfList(value)
	case "api.SidecarStateResponse.Redemptions":
		if x.Redemptions == nil {
			x.Redemptions = []*Redemption{}
		}
		value := &_SidecarStateResponse_8_list{list: &x.Redemptions}
		return protoreflect.ValueOfList(value)
	case "api.SidecarStateResponse.SolanaMintEvents":
		if x.SolanaMintEvents == nil {
			x.SolanaMintEvents = []*SolanaMintEvent{}
		}
		value := &_SidecarStateResponse_12_list{list: &x.SolanaMintEvents}
		return protoreflect.ValueOfList(value)
	case "api.SidecarStateResponse.SolanaBurnEvents":
		if x.SolanaBurnEvents == nil {
			x.SolanaBurnEvents = []*BurnEvent{}
		}
		value := &_SidecarStateResponse_13_list{list: &x.SolanaBurnEvents}
		return protoreflect.ValueOfList(value)
	case "api.SidecarStateResponse.EigenDelegations":
		panic(fmt.Errorf("field EigenDelegations of message api.SidecarStateResponse is not mutable"))
	case "api.SidecarStateResponse.EthBlockHeight":
		panic(fmt.Errorf("field EthBlockHeight of message api.SidecarStateResponse is not mutable"))
	case "api.SidecarStateResponse.EthGasLimit":
		panic(fmt.Errorf("field EthGasLimit of message api.SidecarStateResponse is not mutable"))
	case "api.SidecarStateResponse.EthBaseFee":
		panic(fmt.Errorf("field EthBaseFee of message api.SidecarStateResponse is not mutable"))
	case "api.SidecarStateResponse.EthTipCap":
		panic(fmt.Errorf("field EthTipCap of message api.SidecarStateResponse is not mutable"))
	case "api.SidecarStateResponse.SolanaLamportsPerSignature":
		panic(fmt.Errorf("field SolanaLamportsPerSignature of message api.SidecarStateResponse is not mutable"))
	case "api.SidecarStateResponse.ROCKUSDPrice":
		panic(fmt.Errorf("field ROCKUSDPrice of message api.SidecarStateResponse is not mutable"))
	case "api.SidecarStateResponse.BTCUSDPrice":
		panic(fmt.Errorf("field BTCUSDPrice of message api.SidecarStateResponse is not mutable"))
	case "api.SidecarStateResponse.ETHUSDPrice":
		panic(fmt.Errorf("field ETHUSDPrice of message api.SidecarStateResponse is not mutable"))
	case "api.SidecarStateResponse.SidecarVersionName":
		panic(fmt.Errorf("field SidecarVersionName of message api.SidecarStateResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SidecarStateResponse"))
		}
		panic(fmt.Errorf("message api.SidecarStateResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SidecarStateResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "api.SidecarStateResponse.EigenDelegations":
		return protoreflect.ValueOfBytes(nil)
	case "api.SidecarStateResponse.EthBlockHeight":
		return protoreflect.ValueOfUint64(uint64(0))
	case "api.SidecarStateResponse.EthGasLimit":
		return protoreflect.ValueOfUint64(uint64(0))
	case "api.SidecarStateResponse.EthBaseFee":
		return protoreflect.ValueOfUint64(uint64(0))
	case "api.SidecarStateResponse.EthTipCap":
		return protoreflect.ValueOfUint64(uint64(0))
	case "api.SidecarStateResponse.SolanaLamportsPerSignature":
		return protoreflect.ValueOfUint64(uint64(0))
	case "api.SidecarStateResponse.EthBurnEvents":
		list := []*BurnEvent{}
		return protoreflect.ValueOfList(&_SidecarStateResponse_7_list{list: &list})
	case "api.SidecarStateResponse.Redemptions":
		list := []*Redemption{}
		return protoreflect.ValueOfList(&_SidecarStateResponse_8_list{list: &list})
	case "api.SidecarStateResponse.ROCKUSDPrice":
		return protoreflect.ValueOfString("")
	case "api.SidecarStateResponse.BTCUSDPrice":
		return protoreflect.ValueOfString("")
	case "api.SidecarStateResponse.ETHUSDPrice":
		return protoreflect.ValueOfString("")
	case "api.SidecarStateResponse.SolanaMintEvents":
		list := []*SolanaMintEvent{}
		return protoreflect.ValueOfList(&_SidecarStateResponse_12_list{list: &list})
	case "api.SidecarStateResponse.SolanaBurnEvents":
		list := []*BurnEvent{}
		return protoreflect.ValueOfList(&_SidecarStateResponse_13_list{list: &list})
	case "api.SidecarStateResponse.SidecarVersionName":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SidecarStateResponse"))
		}
		panic(fmt.Errorf("message api.SidecarStateResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SidecarStateResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in api.SidecarStateResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SidecarStateResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SidecarStateResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SidecarStateResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SidecarStateResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SidecarStateResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.EigenDelegations)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.EthBlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.EthBlockHeight))
		}
		if x.EthGasLimit != 0 {
			n += 1 + runtime.Sov(uint64(x.EthGasLimit))
		}
		if x.EthBaseFee != 0 {
			n += 1 + runtime.Sov(uint64(x.EthBaseFee))
		}
		if x.EthTipCap != 0 {
			n += 1 + runtime.Sov(uint64(x.EthTipCap))
		}
		if x.SolanaLamportsPerSignature != 0 {
			n += 1 + runtime.Sov(uint64(x.SolanaLamportsPerSignature))
		}
		if len(x.EthBurnEvents) > 0 {
			for _, e := range x.EthBurnEvents {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Redemptions) > 0 {
			for _, e := range x.Redemptions {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.ROCKUSDPrice)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BTCUSDPrice)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ETHUSDPrice)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.SolanaMintEvents) > 0 {
			for _, e := range x.SolanaMintEvents {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.SolanaBurnEvents) > 0 {
			for _, e := range x.SolanaBurnEvents {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.SidecarVersionName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SidecarStateResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.SidecarVersionName) > 0 {
			i -= len(x.SidecarVersionName)
			copy(dAtA[i:], x.SidecarVersionName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SidecarVersionName)))
			i--
			dAtA[i] = 0x72
		}
		if len(x.SolanaBurnEvents) > 0 {
			for iNdEx := len(x.SolanaBurnEvents) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.SolanaBurnEvents[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x6a
			}
		}
		if len(x.SolanaMintEvents) > 0 {
			for iNdEx := len(x.SolanaMintEvents) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.SolanaMintEvents[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x62
			}
		}
		if len(x.ETHUSDPrice) > 0 {
			i -= len(x.ETHUSDPrice)
			copy(dAtA[i:], x.ETHUSDPrice)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ETHUSDPrice)))
			i--
			dAtA[i] = 0x5a
		}
		if len(x.BTCUSDPrice) > 0 {
			i -= len(x.BTCUSDPrice)
			copy(dAtA[i:], x.BTCUSDPrice)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BTCUSDPrice)))
			i--
			dAtA[i] = 0x52
		}
		if len(x.ROCKUSDPrice) > 0 {
			i -= len(x.ROCKUSDPrice)
			copy(dAtA[i:], x.ROCKUSDPrice)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ROCKUSDPrice)))
			i--
			dAtA[i] = 0x4a
		}
		if len(x.Redemptions) > 0 {
			for iNdEx := len(x.Redemptions) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Redemptions[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x42
			}
		}
		if len(x.EthBurnEvents) > 0 {
			for iNdEx := len(x.EthBurnEvents) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.EthBurnEvents[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3a
			}
		}
		if x.SolanaLamportsPerSignature != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SolanaLamportsPerSignature))
			i--
			dAtA[i] = 0x30
		}
		if x.EthTipCap != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EthTipCap))
			i--
			dAtA[i] = 0x28
		}
		if x.EthBaseFee != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EthBaseFee))
			i--
			dAtA[i] = 0x20
		}
		if x.EthGasLimit != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EthGasLimit))
			i--
			dAtA[i] = 0x18
		}
		if x.EthBlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EthBlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if len(x.EigenDelegations) > 0 {
			i -= len(x.EigenDelegations)
			copy(dAtA[i:], x.EigenDelegations)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EigenDelegations)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SidecarStateResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SidecarStateResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SidecarStateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EigenDelegations", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EigenDelegations = append(x.EigenDelegations[:0], dAtA[iNdEx:postIndex]...)
				if x.EigenDelegations == nil {
					x.EigenDelegations = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EthBlockHeight", wireType)
				}
				x.EthBlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EthBlockHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EthGasLimit", wireType)
				}
				x.EthGasLimit = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EthGasLimit |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EthBaseFee", wireType)
				}
				x.EthBaseFee = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EthBaseFee |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EthTipCap", wireType)
				}
				x.EthTipCap = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EthTipCap |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SolanaLamportsPerSignature", wireType)
				}
				x.SolanaLamportsPerSignature = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SolanaLamportsPerSignature |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EthBurnEvents", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EthBurnEvents = append(x.EthBurnEvents, &BurnEvent{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.EthBurnEvents[len(x.EthBurnEvents)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Redemptions", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Redemptions = append(x.Redemptions, &Redemption{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Redemptions[len(x.Redemptions)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ROCKUSDPrice", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ROCKUSDPrice = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BTCUSDPrice", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BTCUSDPrice = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ETHUSDPrice", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ETHUSDPrice = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SolanaMintEvents", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SolanaMintEvents = append(x.SolanaMintEvents, &SolanaMintEvent{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.SolanaMintEvents[len(x.SolanaMintEvents)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 13:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SolanaBurnEvents", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SolanaBurnEvents = append(x.SolanaBurnEvents, &BurnEvent{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.SolanaBurnEvents[len(x.SolanaBurnEvents)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 14:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SidecarVersionName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SidecarVersionName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_SidecarStateByEthHeightRequest                protoreflect.MessageDescriptor
	fd_SidecarStateByEthHeightRequest_EthBlockHeight protoreflect.FieldDescriptor
)

func init() {
	file_api_sidecar_service_proto_init()
	md_SidecarStateByEthHeightRequest = File_api_sidecar_service_proto.Messages().ByName("SidecarStateByEthHeightRequest")
	fd_SidecarStateByEthHeightRequest_EthBlockHeight = md_SidecarStateByEthHeightRequest.Fields().ByName("EthBlockHeight")
}

var _ protoreflect.Message = (*fastReflection_SidecarStateByEthHeightRequest)(nil)

type fastReflection_SidecarStateByEthHeightRequest SidecarStateByEthHeightRequest

func (x *SidecarStateByEthHeightRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SidecarStateByEthHeightRequest)(x)
}

func (x *SidecarStateByEthHeightRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_api_sidecar_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SidecarStateByEthHeightRequest_messageType fastReflection_SidecarStateByEthHeightRequest_messageType
var _ protoreflect.MessageType = fastReflection_SidecarStateByEthHeightRequest_messageType{}

type fastReflection_SidecarStateByEthHeightRequest_messageType struct{}

func (x fastReflection_SidecarStateByEthHeightRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SidecarStateByEthHeightRequest)(nil)
}
func (x fastReflection_SidecarStateByEthHeightRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_SidecarStateByEthHeightRequest)
}
func (x fastReflection_SidecarStateByEthHeightRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SidecarStateByEthHeightRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SidecarStateByEthHeightRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_SidecarStateByEthHeightRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SidecarStateByEthHeightRequest) Type() protoreflect.MessageType {
	return _fastReflection_SidecarStateByEthHeightRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SidecarStateByEthHeightRequest) New() protoreflect.Message {
	return new(fastReflection_SidecarStateByEthHeightRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SidecarStateByEthHeightRequest) Interface() protoreflect.ProtoMessage {
	return (*SidecarStateByEthHeightRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SidecarStateByEthHeightRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.EthBlockHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EthBlockHeight)
		if !f(fd_SidecarStateByEthHeightRequest_EthBlockHeight, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SidecarStateByEthHeightRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "api.SidecarStateByEthHeightRequest.EthBlockHeight":
		return x.EthBlockHeight != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SidecarStateByEthHeightRequest"))
		}
		panic(fmt.Errorf("message api.SidecarStateByEthHeightRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SidecarStateByEthHeightRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "api.SidecarStateByEthHeightRequest.EthBlockHeight":
		x.EthBlockHeight = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SidecarStateByEthHeightRequest"))
		}
		panic(fmt.Errorf("message api.SidecarStateByEthHeightRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SidecarStateByEthHeightRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "api.SidecarStateByEthHeightRequest.EthBlockHeight":
		value := x.EthBlockHeight
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SidecarStateByEthHeightRequest"))
		}
		panic(fmt.Errorf("message api.SidecarStateByEthHeightRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SidecarStateByEthHeightRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "api.SidecarStateByEthHeightRequest.EthBlockHeight":
		x.EthBlockHeight = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SidecarStateByEthHeightRequest"))
		}
		panic(fmt.Errorf("message api.SidecarStateByEthHeightRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SidecarStateByEthHeightRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "api.SidecarStateByEthHeightRequest.EthBlockHeight":
		panic(fmt.Errorf("field EthBlockHeight of message api.SidecarStateByEthHeightRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SidecarStateByEthHeightRequest"))
		}
		panic(fmt.Errorf("message api.SidecarStateByEthHeightRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SidecarStateByEthHeightRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "api.SidecarStateByEthHeightRequest.EthBlockHeight":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SidecarStateByEthHeightRequest"))
		}
		panic(fmt.Errorf("message api.SidecarStateByEthHeightRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SidecarStateByEthHeightRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in api.SidecarStateByEthHeightRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SidecarStateByEthHeightRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SidecarStateByEthHeightRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SidecarStateByEthHeightRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SidecarStateByEthHeightRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SidecarStateByEthHeightRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.EthBlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.EthBlockHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SidecarStateByEthHeightRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.EthBlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EthBlockHeight))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SidecarStateByEthHeightRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SidecarStateByEthHeightRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SidecarStateByEthHeightRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EthBlockHeight", wireType)
				}
				x.EthBlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EthBlockHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_LatestEthereumNonceForAccountRequest         protoreflect.MessageDescriptor
	fd_LatestEthereumNonceForAccountRequest_Address protoreflect.FieldDescriptor
)

func init() {
	file_api_sidecar_service_proto_init()
	md_LatestEthereumNonceForAccountRequest = File_api_sidecar_service_proto.Messages().ByName("LatestEthereumNonceForAccountRequest")
	fd_LatestEthereumNonceForAccountRequest_Address = md_LatestEthereumNonceForAccountRequest.Fields().ByName("Address")
}

var _ protoreflect.Message = (*fastReflection_LatestEthereumNonceForAccountRequest)(nil)

type fastReflection_LatestEthereumNonceForAccountRequest LatestEthereumNonceForAccountRequest

func (x *LatestEthereumNonceForAccountRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_LatestEthereumNonceForAccountRequest)(x)
}

func (x *LatestEthereumNonceForAccountRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_api_sidecar_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_LatestEthereumNonceForAccountRequest_messageType fastReflection_LatestEthereumNonceForAccountRequest_messageType
var _ protoreflect.MessageType = fastReflection_LatestEthereumNonceForAccountRequest_messageType{}

type fastReflection_LatestEthereumNonceForAccountRequest_messageType struct{}

func (x fastReflection_LatestEthereumNonceForAccountRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_LatestEthereumNonceForAccountRequest)(nil)
}
func (x fastReflection_LatestEthereumNonceForAccountRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_LatestEthereumNonceForAccountRequest)
}
func (x fastReflection_LatestEthereumNonceForAccountRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_LatestEthereumNonceForAccountRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_LatestEthereumNonceForAccountRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_LatestEthereumNonceForAccountRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_LatestEthereumNonceForAccountRequest) Type() protoreflect.MessageType {
	return _fastReflection_LatestEthereumNonceForAccountRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_LatestEthereumNonceForAccountRequest) New() protoreflect.Message {
	return new(fastReflection_LatestEthereumNonceForAccountRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_LatestEthereumNonceForAccountRequest) Interface() protoreflect.ProtoMessage {
	return (*LatestEthereumNonceForAccountRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_LatestEthereumNonceForAccountRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_LatestEthereumNonceForAccountRequest_Address, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_LatestEthereumNonceForAccountRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "api.LatestEthereumNonceForAccountRequest.Address":
		return x.Address != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.LatestEthereumNonceForAccountRequest"))
		}
		panic(fmt.Errorf("message api.LatestEthereumNonceForAccountRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LatestEthereumNonceForAccountRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "api.LatestEthereumNonceForAccountRequest.Address":
		x.Address = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.LatestEthereumNonceForAccountRequest"))
		}
		panic(fmt.Errorf("message api.LatestEthereumNonceForAccountRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_LatestEthereumNonceForAccountRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "api.LatestEthereumNonceForAccountRequest.Address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.LatestEthereumNonceForAccountRequest"))
		}
		panic(fmt.Errorf("message api.LatestEthereumNonceForAccountRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LatestEthereumNonceForAccountRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "api.LatestEthereumNonceForAccountRequest.Address":
		x.Address = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.LatestEthereumNonceForAccountRequest"))
		}
		panic(fmt.Errorf("message api.LatestEthereumNonceForAccountRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LatestEthereumNonceForAccountRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "api.LatestEthereumNonceForAccountRequest.Address":
		panic(fmt.Errorf("field Address of message api.LatestEthereumNonceForAccountRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.LatestEthereumNonceForAccountRequest"))
		}
		panic(fmt.Errorf("message api.LatestEthereumNonceForAccountRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_LatestEthereumNonceForAccountRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "api.LatestEthereumNonceForAccountRequest.Address":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.LatestEthereumNonceForAccountRequest"))
		}
		panic(fmt.Errorf("message api.LatestEthereumNonceForAccountRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_LatestEthereumNonceForAccountRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in api.LatestEthereumNonceForAccountRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_LatestEthereumNonceForAccountRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LatestEthereumNonceForAccountRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_LatestEthereumNonceForAccountRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_LatestEthereumNonceForAccountRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*LatestEthereumNonceForAccountRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*LatestEthereumNonceForAccountRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*LatestEthereumNonceForAccountRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: LatestEthereumNonceForAccountRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: LatestEthereumNonceForAccountRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_LatestEthereumNonceForAccountResponse       protoreflect.MessageDescriptor
	fd_LatestEthereumNonceForAccountResponse_Nonce protoreflect.FieldDescriptor
)

func init() {
	file_api_sidecar_service_proto_init()
	md_LatestEthereumNonceForAccountResponse = File_api_sidecar_service_proto.Messages().ByName("LatestEthereumNonceForAccountResponse")
	fd_LatestEthereumNonceForAccountResponse_Nonce = md_LatestEthereumNonceForAccountResponse.Fields().ByName("Nonce")
}

var _ protoreflect.Message = (*fastReflection_LatestEthereumNonceForAccountResponse)(nil)

type fastReflection_LatestEthereumNonceForAccountResponse LatestEthereumNonceForAccountResponse

func (x *LatestEthereumNonceForAccountResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_LatestEthereumNonceForAccountResponse)(x)
}

func (x *LatestEthereumNonceForAccountResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_api_sidecar_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_LatestEthereumNonceForAccountResponse_messageType fastReflection_LatestEthereumNonceForAccountResponse_messageType
var _ protoreflect.MessageType = fastReflection_LatestEthereumNonceForAccountResponse_messageType{}

type fastReflection_LatestEthereumNonceForAccountResponse_messageType struct{}

func (x fastReflection_LatestEthereumNonceForAccountResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_LatestEthereumNonceForAccountResponse)(nil)
}
func (x fastReflection_LatestEthereumNonceForAccountResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_LatestEthereumNonceForAccountResponse)
}
func (x fastReflection_LatestEthereumNonceForAccountResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_LatestEthereumNonceForAccountResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_LatestEthereumNonceForAccountResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_LatestEthereumNonceForAccountResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_LatestEthereumNonceForAccountResponse) Type() protoreflect.MessageType {
	return _fastReflection_LatestEthereumNonceForAccountResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_LatestEthereumNonceForAccountResponse) New() protoreflect.Message {
	return new(fastReflection_LatestEthereumNonceForAccountResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_LatestEthereumNonceForAccountResponse) Interface() protoreflect.ProtoMessage {
	return (*LatestEthereumNonceForAccountResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_LatestEthereumNonceForAccountResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Nonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Nonce)
		if !f(fd_LatestEthereumNonceForAccountResponse_Nonce, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_LatestEthereumNonceForAccountResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "api.LatestEthereumNonceForAccountResponse.Nonce":
		return x.Nonce != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.LatestEthereumNonceForAccountResponse"))
		}
		panic(fmt.Errorf("message api.LatestEthereumNonceForAccountResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LatestEthereumNonceForAccountResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "api.LatestEthereumNonceForAccountResponse.Nonce":
		x.Nonce = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.LatestEthereumNonceForAccountResponse"))
		}
		panic(fmt.Errorf("message api.LatestEthereumNonceForAccountResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_LatestEthereumNonceForAccountResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "api.LatestEthereumNonceForAccountResponse.Nonce":
		value := x.Nonce
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.LatestEthereumNonceForAccountResponse"))
		}
		panic(fmt.Errorf("message api.LatestEthereumNonceForAccountResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LatestEthereumNonceForAccountResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "api.LatestEthereumNonceForAccountResponse.Nonce":
		x.Nonce = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.LatestEthereumNonceForAccountResponse"))
		}
		panic(fmt.Errorf("message api.LatestEthereumNonceForAccountResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LatestEthereumNonceForAccountResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "api.LatestEthereumNonceForAccountResponse.Nonce":
		panic(fmt.Errorf("field Nonce of message api.LatestEthereumNonceForAccountResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.LatestEthereumNonceForAccountResponse"))
		}
		panic(fmt.Errorf("message api.LatestEthereumNonceForAccountResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_LatestEthereumNonceForAccountResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "api.LatestEthereumNonceForAccountResponse.Nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.LatestEthereumNonceForAccountResponse"))
		}
		panic(fmt.Errorf("message api.LatestEthereumNonceForAccountResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_LatestEthereumNonceForAccountResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in api.LatestEthereumNonceForAccountResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_LatestEthereumNonceForAccountResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LatestEthereumNonceForAccountResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_LatestEthereumNonceForAccountResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_LatestEthereumNonceForAccountResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*LatestEthereumNonceForAccountResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Nonce != 0 {
			n += 1 + runtime.Sov(uint64(x.Nonce))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*LatestEthereumNonceForAccountResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Nonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Nonce))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*LatestEthereumNonceForAccountResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: LatestEthereumNonceForAccountResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: LatestEthereumNonceForAccountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
				}
				x.Nonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Nonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_SolanaAccountInfoRequest        protoreflect.MessageDescriptor
	fd_SolanaAccountInfoRequest_PubKey protoreflect.FieldDescriptor
)

func init() {
	file_api_sidecar_service_proto_init()
	md_SolanaAccountInfoRequest = File_api_sidecar_service_proto.Messages().ByName("SolanaAccountInfoRequest")
	fd_SolanaAccountInfoRequest_PubKey = md_SolanaAccountInfoRequest.Fields().ByName("PubKey")
}

var _ protoreflect.Message = (*fastReflection_SolanaAccountInfoRequest)(nil)

type fastReflection_SolanaAccountInfoRequest SolanaAccountInfoRequest

func (x *SolanaAccountInfoRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SolanaAccountInfoRequest)(x)
}

func (x *SolanaAccountInfoRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_api_sidecar_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SolanaAccountInfoRequest_messageType fastReflection_SolanaAccountInfoRequest_messageType
var _ protoreflect.MessageType = fastReflection_SolanaAccountInfoRequest_messageType{}

type fastReflection_SolanaAccountInfoRequest_messageType struct{}

func (x fastReflection_SolanaAccountInfoRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SolanaAccountInfoRequest)(nil)
}
func (x fastReflection_SolanaAccountInfoRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_SolanaAccountInfoRequest)
}
func (x fastReflection_SolanaAccountInfoRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SolanaAccountInfoRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SolanaAccountInfoRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_SolanaAccountInfoRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SolanaAccountInfoRequest) Type() protoreflect.MessageType {
	return _fastReflection_SolanaAccountInfoRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SolanaAccountInfoRequest) New() protoreflect.Message {
	return new(fastReflection_SolanaAccountInfoRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SolanaAccountInfoRequest) Interface() protoreflect.ProtoMessage {
	return (*SolanaAccountInfoRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SolanaAccountInfoRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PubKey != "" {
		value := protoreflect.ValueOfString(x.PubKey)
		if !f(fd_SolanaAccountInfoRequest_PubKey, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SolanaAccountInfoRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "api.SolanaAccountInfoRequest.PubKey":
		return x.PubKey != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SolanaAccountInfoRequest"))
		}
		panic(fmt.Errorf("message api.SolanaAccountInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SolanaAccountInfoRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "api.SolanaAccountInfoRequest.PubKey":
		x.PubKey = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SolanaAccountInfoRequest"))
		}
		panic(fmt.Errorf("message api.SolanaAccountInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SolanaAccountInfoRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "api.SolanaAccountInfoRequest.PubKey":
		value := x.PubKey
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SolanaAccountInfoRequest"))
		}
		panic(fmt.Errorf("message api.SolanaAccountInfoRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SolanaAccountInfoRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "api.SolanaAccountInfoRequest.PubKey":
		x.PubKey = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SolanaAccountInfoRequest"))
		}
		panic(fmt.Errorf("message api.SolanaAccountInfoRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SolanaAccountInfoRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "api.SolanaAccountInfoRequest.PubKey":
		panic(fmt.Errorf("field PubKey of message api.SolanaAccountInfoRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SolanaAccountInfoRequest"))
		}
		panic(fmt.Errorf("message api.SolanaAccountInfoRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SolanaAccountInfoRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "api.SolanaAccountInfoRequest.PubKey":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SolanaAccountInfoRequest"))
		}
		panic(fmt.Errorf("message api.SolanaAccountInfoRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SolanaAccountInfoRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in api.SolanaAccountInfoRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SolanaAccountInfoRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SolanaAccountInfoRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SolanaAccountInfoRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SolanaAccountInfoRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SolanaAccountInfoRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PubKey)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SolanaAccountInfoRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.PubKey) > 0 {
			i -= len(x.PubKey)
			copy(dAtA[i:], x.PubKey)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PubKey)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SolanaAccountInfoRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SolanaAccountInfoRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SolanaAccountInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PubKey", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PubKey = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_SolanaAccountInfoResponse         protoreflect.MessageDescriptor
	fd_SolanaAccountInfoResponse_Account protoreflect.FieldDescriptor
)

func init() {
	file_api_sidecar_service_proto_init()
	md_SolanaAccountInfoResponse = File_api_sidecar_service_proto.Messages().ByName("SolanaAccountInfoResponse")
	fd_SolanaAccountInfoResponse_Account = md_SolanaAccountInfoResponse.Fields().ByName("Account")
}

var _ protoreflect.Message = (*fastReflection_SolanaAccountInfoResponse)(nil)

type fastReflection_SolanaAccountInfoResponse SolanaAccountInfoResponse

func (x *SolanaAccountInfoResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SolanaAccountInfoResponse)(x)
}

func (x *SolanaAccountInfoResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_api_sidecar_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SolanaAccountInfoResponse_messageType fastReflection_SolanaAccountInfoResponse_messageType
var _ protoreflect.MessageType = fastReflection_SolanaAccountInfoResponse_messageType{}

type fastReflection_SolanaAccountInfoResponse_messageType struct{}

func (x fastReflection_SolanaAccountInfoResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SolanaAccountInfoResponse)(nil)
}
func (x fastReflection_SolanaAccountInfoResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_SolanaAccountInfoResponse)
}
func (x fastReflection_SolanaAccountInfoResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SolanaAccountInfoResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SolanaAccountInfoResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_SolanaAccountInfoResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SolanaAccountInfoResponse) Type() protoreflect.MessageType {
	return _fastReflection_SolanaAccountInfoResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SolanaAccountInfoResponse) New() protoreflect.Message {
	return new(fastReflection_SolanaAccountInfoResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SolanaAccountInfoResponse) Interface() protoreflect.ProtoMessage {
	return (*SolanaAccountInfoResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SolanaAccountInfoResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Account) != 0 {
		value := protoreflect.ValueOfBytes(x.Account)
		if !f(fd_SolanaAccountInfoResponse_Account, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SolanaAccountInfoResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "api.SolanaAccountInfoResponse.Account":
		return len(x.Account) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SolanaAccountInfoResponse"))
		}
		panic(fmt.Errorf("message api.SolanaAccountInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SolanaAccountInfoResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "api.SolanaAccountInfoResponse.Account":
		x.Account = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SolanaAccountInfoResponse"))
		}
		panic(fmt.Errorf("message api.SolanaAccountInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SolanaAccountInfoResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "api.SolanaAccountInfoResponse.Account":
		value := x.Account
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SolanaAccountInfoResponse"))
		}
		panic(fmt.Errorf("message api.SolanaAccountInfoResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SolanaAccountInfoResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "api.SolanaAccountInfoResponse.Account":
		x.Account = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SolanaAccountInfoResponse"))
		}
		panic(fmt.Errorf("message api.SolanaAccountInfoResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SolanaAccountInfoResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "api.SolanaAccountInfoResponse.Account":
		panic(fmt.Errorf("field Account of message api.SolanaAccountInfoResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SolanaAccountInfoResponse"))
		}
		panic(fmt.Errorf("message api.SolanaAccountInfoResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SolanaAccountInfoResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "api.SolanaAccountInfoResponse.Account":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SolanaAccountInfoResponse"))
		}
		panic(fmt.Errorf("message api.SolanaAccountInfoResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SolanaAccountInfoResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in api.SolanaAccountInfoResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SolanaAccountInfoResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SolanaAccountInfoResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SolanaAccountInfoResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SolanaAccountInfoResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SolanaAccountInfoResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Account)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SolanaAccountInfoResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Account) > 0 {
			i -= len(x.Account)
			copy(dAtA[i:], x.Account)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Account)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SolanaAccountInfoResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SolanaAccountInfoResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SolanaAccountInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Account = append(x.Account[:0], dAtA[iNdEx:postIndex]...)
				if x.Account == nil {
					x.Account = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_SolanaMintEvent           protoreflect.MessageDescriptor
	fd_SolanaMintEvent_Coint     protoreflect.FieldDescriptor
	fd_SolanaMintEvent_SigHash   protoreflect.FieldDescriptor
	fd_SolanaMintEvent_Recipient protoreflect.FieldDescriptor
	fd_SolanaMintEvent_Height    protoreflect.FieldDescriptor
	fd_SolanaMintEvent_Value     protoreflect.FieldDescriptor
	fd_SolanaMintEvent_Fee       protoreflect.FieldDescriptor
	fd_SolanaMintEvent_Mint      protoreflect.FieldDescriptor
	fd_SolanaMintEvent_TxSig     protoreflect.FieldDescriptor
)

func init() {
	file_api_sidecar_service_proto_init()
	md_SolanaMintEvent = File_api_sidecar_service_proto.Messages().ByName("SolanaMintEvent")
	fd_SolanaMintEvent_Coint = md_SolanaMintEvent.Fields().ByName("Coint")
	fd_SolanaMintEvent_SigHash = md_SolanaMintEvent.Fields().ByName("SigHash")
	fd_SolanaMintEvent_Recipient = md_SolanaMintEvent.Fields().ByName("Recipient")
	fd_SolanaMintEvent_Height = md_SolanaMintEvent.Fields().ByName("Height")
	fd_SolanaMintEvent_Value = md_SolanaMintEvent.Fields().ByName("Value")
	fd_SolanaMintEvent_Fee = md_SolanaMintEvent.Fields().ByName("Fee")
	fd_SolanaMintEvent_Mint = md_SolanaMintEvent.Fields().ByName("Mint")
	fd_SolanaMintEvent_TxSig = md_SolanaMintEvent.Fields().ByName("TxSig")
}

var _ protoreflect.Message = (*fastReflection_SolanaMintEvent)(nil)

type fastReflection_SolanaMintEvent SolanaMintEvent

func (x *SolanaMintEvent) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SolanaMintEvent)(x)
}

func (x *SolanaMintEvent) slowProtoReflect() protoreflect.Message {
	mi := &file_api_sidecar_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SolanaMintEvent_messageType fastReflection_SolanaMintEvent_messageType
var _ protoreflect.MessageType = fastReflection_SolanaMintEvent_messageType{}

type fastReflection_SolanaMintEvent_messageType struct{}

func (x fastReflection_SolanaMintEvent_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SolanaMintEvent)(nil)
}
func (x fastReflection_SolanaMintEvent_messageType) New() protoreflect.Message {
	return new(fastReflection_SolanaMintEvent)
}
func (x fastReflection_SolanaMintEvent_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SolanaMintEvent
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SolanaMintEvent) Descriptor() protoreflect.MessageDescriptor {
	return md_SolanaMintEvent
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SolanaMintEvent) Type() protoreflect.MessageType {
	return _fastReflection_SolanaMintEvent_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SolanaMintEvent) New() protoreflect.Message {
	return new(fastReflection_SolanaMintEvent)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SolanaMintEvent) Interface() protoreflect.ProtoMessage {
	return (*SolanaMintEvent)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SolanaMintEvent) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Coint != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Coint))
		if !f(fd_SolanaMintEvent_Coint, value) {
			return
		}
	}
	if len(x.SigHash) != 0 {
		value := protoreflect.ValueOfBytes(x.SigHash)
		if !f(fd_SolanaMintEvent_SigHash, value) {
			return
		}
	}
	if len(x.Recipient) != 0 {
		value := protoreflect.ValueOfBytes(x.Recipient)
		if !f(fd_SolanaMintEvent_Recipient, value) {
			return
		}
	}
	if x.Height != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Height)
		if !f(fd_SolanaMintEvent_Height, value) {
			return
		}
	}
	if x.Value != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Value)
		if !f(fd_SolanaMintEvent_Value, value) {
			return
		}
	}
	if x.Fee != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Fee)
		if !f(fd_SolanaMintEvent_Fee, value) {
			return
		}
	}
	if len(x.Mint) != 0 {
		value := protoreflect.ValueOfBytes(x.Mint)
		if !f(fd_SolanaMintEvent_Mint, value) {
			return
		}
	}
	if x.TxSig != "" {
		value := protoreflect.ValueOfString(x.TxSig)
		if !f(fd_SolanaMintEvent_TxSig, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SolanaMintEvent) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "api.SolanaMintEvent.Coint":
		return x.Coint != 0
	case "api.SolanaMintEvent.SigHash":
		return len(x.SigHash) != 0
	case "api.SolanaMintEvent.Recipient":
		return len(x.Recipient) != 0
	case "api.SolanaMintEvent.Height":
		return x.Height != uint64(0)
	case "api.SolanaMintEvent.Value":
		return x.Value != uint64(0)
	case "api.SolanaMintEvent.Fee":
		return x.Fee != uint64(0)
	case "api.SolanaMintEvent.Mint":
		return len(x.Mint) != 0
	case "api.SolanaMintEvent.TxSig":
		return x.TxSig != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SolanaMintEvent"))
		}
		panic(fmt.Errorf("message api.SolanaMintEvent does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SolanaMintEvent) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "api.SolanaMintEvent.Coint":
		x.Coint = 0
	case "api.SolanaMintEvent.SigHash":
		x.SigHash = nil
	case "api.SolanaMintEvent.Recipient":
		x.Recipient = nil
	case "api.SolanaMintEvent.Height":
		x.Height = uint64(0)
	case "api.SolanaMintEvent.Value":
		x.Value = uint64(0)
	case "api.SolanaMintEvent.Fee":
		x.Fee = uint64(0)
	case "api.SolanaMintEvent.Mint":
		x.Mint = nil
	case "api.SolanaMintEvent.TxSig":
		x.TxSig = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SolanaMintEvent"))
		}
		panic(fmt.Errorf("message api.SolanaMintEvent does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SolanaMintEvent) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "api.SolanaMintEvent.Coint":
		value := x.Coint
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "api.SolanaMintEvent.SigHash":
		value := x.SigHash
		return protoreflect.ValueOfBytes(value)
	case "api.SolanaMintEvent.Recipient":
		value := x.Recipient
		return protoreflect.ValueOfBytes(value)
	case "api.SolanaMintEvent.Height":
		value := x.Height
		return protoreflect.ValueOfUint64(value)
	case "api.SolanaMintEvent.Value":
		value := x.Value
		return protoreflect.ValueOfUint64(value)
	case "api.SolanaMintEvent.Fee":
		value := x.Fee
		return protoreflect.ValueOfUint64(value)
	case "api.SolanaMintEvent.Mint":
		value := x.Mint
		return protoreflect.ValueOfBytes(value)
	case "api.SolanaMintEvent.TxSig":
		value := x.TxSig
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SolanaMintEvent"))
		}
		panic(fmt.Errorf("message api.SolanaMintEvent does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SolanaMintEvent) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "api.SolanaMintEvent.Coint":
		x.Coint = (Coin)(value.Enum())
	case "api.SolanaMintEvent.SigHash":
		x.SigHash = value.Bytes()
	case "api.SolanaMintEvent.Recipient":
		x.Recipient = value.Bytes()
	case "api.SolanaMintEvent.Height":
		x.Height = value.Uint()
	case "api.SolanaMintEvent.Value":
		x.Value = value.Uint()
	case "api.SolanaMintEvent.Fee":
		x.Fee = value.Uint()
	case "api.SolanaMintEvent.Mint":
		x.Mint = value.Bytes()
	case "api.SolanaMintEvent.TxSig":
		x.TxSig = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SolanaMintEvent"))
		}
		panic(fmt.Errorf("message api.SolanaMintEvent does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SolanaMintEvent) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "api.SolanaMintEvent.Coint":
		panic(fmt.Errorf("field Coint of message api.SolanaMintEvent is not mutable"))
	case "api.SolanaMintEvent.SigHash":
		panic(fmt.Errorf("field SigHash of message api.SolanaMintEvent is not mutable"))
	case "api.SolanaMintEvent.Recipient":
		panic(fmt.Errorf("field Recipient of message api.SolanaMintEvent is not mutable"))
	case "api.SolanaMintEvent.Height":
		panic(fmt.Errorf("field Height of message api.SolanaMintEvent is not mutable"))
	case "api.SolanaMintEvent.Value":
		panic(fmt.Errorf("field Value of message api.SolanaMintEvent is not mutable"))
	case "api.SolanaMintEvent.Fee":
		panic(fmt.Errorf("field Fee of message api.SolanaMintEvent is not mutable"))
	case "api.SolanaMintEvent.Mint":
		panic(fmt.Errorf("field Mint of message api.SolanaMintEvent is not mutable"))
	case "api.SolanaMintEvent.TxSig":
		panic(fmt.Errorf("field TxSig of message api.SolanaMintEvent is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SolanaMintEvent"))
		}
		panic(fmt.Errorf("message api.SolanaMintEvent does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SolanaMintEvent) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "api.SolanaMintEvent.Coint":
		return protoreflect.ValueOfEnum(0)
	case "api.SolanaMintEvent.SigHash":
		return protoreflect.ValueOfBytes(nil)
	case "api.SolanaMintEvent.Recipient":
		return protoreflect.ValueOfBytes(nil)
	case "api.SolanaMintEvent.Height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "api.SolanaMintEvent.Value":
		return protoreflect.ValueOfUint64(uint64(0))
	case "api.SolanaMintEvent.Fee":
		return protoreflect.ValueOfUint64(uint64(0))
	case "api.SolanaMintEvent.Mint":
		return protoreflect.ValueOfBytes(nil)
	case "api.SolanaMintEvent.TxSig":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: api.SolanaMintEvent"))
		}
		panic(fmt.Errorf("message api.SolanaMintEvent does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SolanaMintEvent) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in api.SolanaMintEvent", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SolanaMintEvent) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SolanaMintEvent) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SolanaMintEvent) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SolanaMintEvent) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SolanaMintEvent)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Coint != 0 {
			n += 1 + runtime.Sov(uint64(x.Coint))
		}
		l = len(x.SigHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Recipient)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Height != 0 {
			n += 1 + runtime.Sov(uint64(x.Height))
		}
		if x.Value != 0 {
			n += 1 + runtime.Sov(uint64(x.Value))
		}
		if x.Fee != 0 {
			n += 1 + runtime.Sov(uint64(x.Fee))
		}
		l = len(x.Mint)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TxSig)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SolanaMintEvent)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TxSig) > 0 {
			i -= len(x.TxSig)
			copy(dAtA[i:], x.TxSig)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TxSig)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.Mint) > 0 {
			i -= len(x.Mint)
			copy(dAtA[i:], x.Mint)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Mint)))
			i--
			dAtA[i] = 0x3a
		}
		if x.Fee != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Fee))
			i--
			dAtA[i] = 0x30
		}
		if x.Value != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Value))
			i--
			dAtA[i] = 0x28
		}
		if x.Height != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Height))
			i--
			dAtA[i] = 0x20
		}
		if len(x.Recipient) > 0 {
			i -= len(x.Recipient)
			copy(dAtA[i:], x.Recipient)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Recipient)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.SigHash) > 0 {
			i -= len(x.SigHash)
			copy(dAtA[i:], x.SigHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SigHash)))
			i--
			dAtA[i] = 0x12
		}
		if x.Coint != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Coint))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SolanaMintEvent)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SolanaMintEvent: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SolanaMintEvent: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Coint", wireType)
				}
				x.Coint = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Coint |= Coin(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SigHash", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SigHash = append(x.SigHash[:0], dAtA[iNdEx:postIndex]...)
				if x.SigHash == nil {
					x.SigHash = []byte{}
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Recipient", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Recipient = append(x.Recipient[:0], dAtA[iNdEx:postIndex]...)
				if x.Recipient == nil {
					x.Recipient = []byte{}
				}
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				x.Height = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Height |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
				}
				x.Value = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Value |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Fee", wireType)
				}
				x.Fee = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Fee |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Mint", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Mint = append(x.Mint[:0], dAtA[iNdEx:postIndex]...)
				if x.Mint == nil {
					x.Mint = []byte{}
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TxSig", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TxSig = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: api/sidecar_service.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Coin int32

const (
	Coin_UNSPECIFIED Coin = 0
	Coin_ZENBTC      Coin = 1
	Coin_ROCK        Coin = 2
)

// Enum value maps for Coin.
var (
	Coin_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "ZENBTC",
		2: "ROCK",
	}
	Coin_value = map[string]int32{
		"UNSPECIFIED": 0,
		"ZENBTC":      1,
		"ROCK":        2,
	}
)

func (x Coin) Enum() *Coin {
	p := new(Coin)
	*p = x
	return p
}

func (x Coin) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Coin) Descriptor() protoreflect.EnumDescriptor {
	return file_api_sidecar_service_proto_enumTypes[0].Descriptor()
}

func (Coin) Type() protoreflect.EnumType {
	return &file_api_sidecar_service_proto_enumTypes[0]
}

func (x Coin) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Coin.Descriptor instead.
func (Coin) EnumDescriptor() ([]byte, []int) {
	return file_api_sidecar_service_proto_rawDescGZIP(), []int{0}
}

type LatestBitcoinBlockHeaderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainName string `protobuf:"bytes,1,opt,name=ChainName,proto3" json:"ChainName,omitempty"`
}

func (x *LatestBitcoinBlockHeaderRequest) Reset() {
	*x = LatestBitcoinBlockHeaderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sidecar_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatestBitcoinBlockHeaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestBitcoinBlockHeaderRequest) ProtoMessage() {}

// Deprecated: Use LatestBitcoinBlockHeaderRequest.ProtoReflect.Descriptor instead.
func (*LatestBitcoinBlockHeaderRequest) Descriptor() ([]byte, []int) {
	return file_api_sidecar_service_proto_rawDescGZIP(), []int{0}
}

func (x *LatestBitcoinBlockHeaderRequest) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

type BitcoinBlockHeaderByHeightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHeight int64  `protobuf:"varint,1,opt,name=BlockHeight,proto3" json:"BlockHeight,omitempty"`
	ChainName   string `protobuf:"bytes,2,opt,name=ChainName,proto3" json:"ChainName,omitempty"`
}

func (x *BitcoinBlockHeaderByHeightRequest) Reset() {
	*x = BitcoinBlockHeaderByHeightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sidecar_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BitcoinBlockHeaderByHeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BitcoinBlockHeaderByHeightRequest) ProtoMessage() {}

// Deprecated: Use BitcoinBlockHeaderByHeightRequest.ProtoReflect.Descriptor instead.
func (*BitcoinBlockHeaderByHeightRequest) Descriptor() ([]byte, []int) {
	return file_api_sidecar_service_proto_rawDescGZIP(), []int{1}
}

func (x *BitcoinBlockHeaderByHeightRequest) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *BitcoinBlockHeaderByHeightRequest) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

type BitcoinBlockHeaderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHeader *BTCBlockHeader `protobuf:"bytes,1,opt,name=blockHeader,proto3" json:"blockHeader,omitempty"`
	BlockHeight int64           `protobuf:"varint,2,opt,name=BlockHeight,proto3" json:"BlockHeight,omitempty"`
	TipHeight   int64           `protobuf:"varint,3,opt,name=TipHeight,proto3" json:"TipHeight,omitempty"`
}

func (x *BitcoinBlockHeaderResponse) Reset() {
	*x = BitcoinBlockHeaderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sidecar_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BitcoinBlockHeaderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BitcoinBlockHeaderResponse) ProtoMessage() {}

// Deprecated: Use BitcoinBlockHeaderResponse.ProtoReflect.Descriptor instead.
func (*BitcoinBlockHeaderResponse) Descriptor() ([]byte, []int) {
	return file_api_sidecar_service_proto_rawDescGZIP(), []int{2}
}

func (x *BitcoinBlockHeaderResponse) GetBlockHeader() *BTCBlockHeader {
	if x != nil {
		return x.BlockHeader
	}
	return nil
}

func (x *BitcoinBlockHeaderResponse) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *BitcoinBlockHeaderResponse) GetTipHeight() int64 {
	if x != nil {
		return x.TipHeight
	}
	return 0
}

type BTCBlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version     int64  `protobuf:"varint,1,opt,name=Version,proto3" json:"Version,omitempty"`
	PrevBlock   string `protobuf:"bytes,2,opt,name=PrevBlock,proto3" json:"PrevBlock,omitempty"`
	MerkleRoot  string `protobuf:"bytes,3,opt,name=MerkleRoot,proto3" json:"MerkleRoot,omitempty"`
	TimeStamp   int64  `protobuf:"varint,4,opt,name=TimeStamp,proto3" json:"TimeStamp,omitempty"`
	Bits        int64  `protobuf:"varint,5,opt,name=Bits,proto3" json:"Bits,omitempty"`
	Nonce       int64  `protobuf:"varint,6,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	BlockHash   string `protobuf:"bytes,7,opt,name=BlockHash,proto3" json:"BlockHash,omitempty"`
	BlockHeight int64  `protobuf:"varint,8,opt,name=BlockHeight,proto3" json:"BlockHeight,omitempty"`
}

func (x *BTCBlockHeader) Reset() {
	*x = BTCBlockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sidecar_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BTCBlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BTCBlockHeader) ProtoMessage() {}

// Deprecated: Use BTCBlockHeader.ProtoReflect.Descriptor instead.
func (*BTCBlockHeader) Descriptor() ([]byte, []int) {
	return file_api_sidecar_service_proto_rawDescGZIP(), []int{3}
}

func (x *BTCBlockHeader) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *BTCBlockHeader) GetPrevBlock() string {
	if x != nil {
		return x.PrevBlock
	}
	return ""
}

func (x *BTCBlockHeader) GetMerkleRoot() string {
	if x != nil {
		return x.MerkleRoot
	}
	return ""
}

func (x *BTCBlockHeader) GetTimeStamp() int64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

func (x *BTCBlockHeader) GetBits() int64 {
	if x != nil {
		return x.Bits
	}
	return 0
}

func (x *BTCBlockHeader) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *BTCBlockHeader) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *BTCBlockHeader) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type Redemption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DestinationAddress []byte `protobuf:"bytes,2,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
	Amount             uint64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Redemption) Reset() {
	*x = Redemption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sidecar_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Redemption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Redemption) ProtoMessage() {}

// Deprecated: Use Redemption.ProtoReflect.Descriptor instead.
func (*Redemption) Descriptor() ([]byte, []int) {
	return file_api_sidecar_service_proto_rawDescGZIP(), []int{4}
}

func (x *Redemption) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Redemption) GetDestinationAddress() []byte {
	if x != nil {
		return x.DestinationAddress
	}
	return nil
}

func (x *Redemption) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type BurnEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxID            string `protobuf:"bytes,1,opt,name=txID,proto3" json:"txID,omitempty"`
	LogIndex        uint64 `protobuf:"varint,2,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	ChainID         string `protobuf:"bytes,3,opt,name=chainID,proto3" json:"chainID,omitempty"`
	DestinationAddr []byte `protobuf:"bytes,4,opt,name=destinationAddr,proto3" json:"destinationAddr,omitempty"`
	Amount          uint64 `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	IsZenBTC        bool   `protobuf:"varint,6,opt,name=IsZenBTC,proto3" json:"IsZenBTC,omitempty"`
	Height          uint64 `protobuf:"varint,7,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *BurnEvent) Reset() {
	*x = BurnEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sidecar_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BurnEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BurnEvent) ProtoMessage() {}

// Deprecated: Use BurnEvent.ProtoReflect.Descriptor instead.
func (*BurnEvent) Descriptor() ([]byte, []int) {
	return file_api_sidecar_service_proto_rawDescGZIP(), []int{5}
}

func (x *BurnEvent) GetTxID() string {
	if x != nil {
		return x.TxID
	}
	return ""
}

func (x *BurnEvent) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *BurnEvent) GetChainID() string {
	if x != nil {
		return x.ChainID
	}
	return ""
}

func (x *BurnEvent) GetDestinationAddr() []byte {
	if x != nil {
		return x.DestinationAddr
	}
	return nil
}

func (x *BurnEvent) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *BurnEvent) GetIsZenBTC() bool {
	if x != nil {
		return x.IsZenBTC
	}
	return false
}

func (x *BurnEvent) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type SidecarStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SidecarStateRequest) Reset() {
	*x = SidecarStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sidecar_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SidecarStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SidecarStateRequest) ProtoMessage() {}

// Deprecated: Use SidecarStateRequest.ProtoReflect.Descriptor instead.
func (*SidecarStateRequest) Descriptor() ([]byte, []int) {
	return file_api_sidecar_service_proto_rawDescGZIP(), []int{6}
}

type SidecarStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EigenDelegations []byte `protobuf:"bytes,1,opt,name=EigenDelegations,proto3" json:"EigenDelegations,omitempty"`
	EthBlockHeight   uint64 `protobuf:"varint,2,opt,name=EthBlockHeight,proto3" json:"EthBlockHeight,omitempty"`
	EthGasLimit      uint64 `protobuf:"varint,3,opt,name=EthGasLimit,proto3" json:"EthGasLimit,omitempty"`
	EthBaseFee       uint64 `protobuf:"varint,4,opt,name=EthBaseFee,proto3" json:"EthBaseFee,omitempty"`
	EthTipCap        uint64 `protobuf:"varint,5,opt,name=EthTipCap,proto3" json:"EthTipCap,omitempty"`
	// Deprecated: Do not use.
	SolanaLamportsPerSignature uint64             `protobuf:"varint,6,opt,name=SolanaLamportsPerSignature,proto3" json:"SolanaLamportsPerSignature,omitempty"`
	EthBurnEvents              []*BurnEvent       `protobuf:"bytes,7,rep,name=EthBurnEvents,proto3" json:"EthBurnEvents,omitempty"`
	Redemptions                []*Redemption      `protobuf:"bytes,8,rep,name=Redemptions,proto3" json:"Redemptions,omitempty"`
	ROCKUSDPrice               string             `protobuf:"bytes,9,opt,name=ROCKUSDPrice,proto3" json:"ROCKUSDPrice,omitempty"`
	BTCUSDPrice                string             `protobuf:"bytes,10,opt,name=BTCUSDPrice,proto3" json:"BTCUSDPrice,omitempty"`
	ETHUSDPrice                string             `protobuf:"bytes,11,opt,name=ETHUSDPrice,proto3" json:"ETHUSDPrice,omitempty"`
	SolanaMintEvents           []*SolanaMintEvent `protobuf:"bytes,12,rep,name=SolanaMintEvents,proto3" json:"SolanaMintEvents,omitempty"`
	SolanaBurnEvents           []*BurnEvent       `protobuf:"bytes,13,rep,name=SolanaBurnEvents,proto3" json:"SolanaBurnEvents,omitempty"`
	SidecarVersionName         string             `protobuf:"bytes,14,opt,name=SidecarVersionName,proto3" json:"SidecarVersionName,omitempty"`
}

func (x *SidecarStateResponse) Reset() {
	*x = SidecarStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sidecar_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SidecarStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SidecarStateResponse) ProtoMessage() {}

// Deprecated: Use SidecarStateResponse.ProtoReflect.Descriptor instead.
func (*SidecarStateResponse) Descriptor() ([]byte, []int) {
	return file_api_sidecar_service_proto_rawDescGZIP(), []int{7}
}

func (x *SidecarStateResponse) GetEigenDelegations() []byte {
	if x != nil {
		return x.EigenDelegations
	}
	return nil
}

func (x *SidecarStateResponse) GetEthBlockHeight() uint64 {
	if x != nil {
		return x.EthBlockHeight
	}
	return 0
}

func (x *SidecarStateResponse) GetEthGasLimit() uint64 {
	if x != nil {
		return x.EthGasLimit
	}
	return 0
}

func (x *SidecarStateResponse) GetEthBaseFee() uint64 {
	if x != nil {
		return x.EthBaseFee
	}
	return 0
}

func (x *SidecarStateResponse) GetEthTipCap() uint64 {
	if x != nil {
		return x.EthTipCap
	}
	return 0
}

// Deprecated: Do not use.
func (x *SidecarStateResponse) GetSolanaLamportsPerSignature() uint64 {
	if x != nil {
		return x.SolanaLamportsPerSignature
	}
	return 0
}

func (x *SidecarStateResponse) GetEthBurnEvents() []*BurnEvent {
	if x != nil {
		return x.EthBurnEvents
	}
	return nil
}

func (x *SidecarStateResponse) GetRedemptions() []*Redemption {
	if x != nil {
		return x.Redemptions
	}
	return nil
}

func (x *SidecarStateResponse) GetROCKUSDPrice() string {
	if x != nil {
		return x.ROCKUSDPrice
	}
	return ""
}

func (x *SidecarStateResponse) GetBTCUSDPrice() string {
	if x != nil {
		return x.BTCUSDPrice
	}
	return ""
}

func (x *SidecarStateResponse) GetETHUSDPrice() string {
	if x != nil {
		return x.ETHUSDPrice
	}
	return ""
}

func (x *SidecarStateResponse) GetSolanaMintEvents() []*SolanaMintEvent {
	if x != nil {
		return x.SolanaMintEvents
	}
	return nil
}

func (x *SidecarStateResponse) GetSolanaBurnEvents() []*BurnEvent {
	if x != nil {
		return x.SolanaBurnEvents
	}
	return nil
}

func (x *SidecarStateResponse) GetSidecarVersionName() string {
	if x != nil {
		return x.SidecarVersionName
	}
	return ""
}

type SidecarStateByEthHeightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EthBlockHeight uint64 `protobuf:"varint,1,opt,name=EthBlockHeight,proto3" json:"EthBlockHeight,omitempty"`
}

func (x *SidecarStateByEthHeightRequest) Reset() {
	*x = SidecarStateByEthHeightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sidecar_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SidecarStateByEthHeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SidecarStateByEthHeightRequest) ProtoMessage() {}

// Deprecated: Use SidecarStateByEthHeightRequest.ProtoReflect.Descriptor instead.
func (*SidecarStateByEthHeightRequest) Descriptor() ([]byte, []int) {
	return file_api_sidecar_service_proto_rawDescGZIP(), []int{8}
}

func (x *SidecarStateByEthHeightRequest) GetEthBlockHeight() uint64 {
	if x != nil {
		return x.EthBlockHeight
	}
	return 0
}

type LatestEthereumNonceForAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
}

func (x *LatestEthereumNonceForAccountRequest) Reset() {
	*x = LatestEthereumNonceForAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sidecar_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatestEthereumNonceForAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestEthereumNonceForAccountRequest) ProtoMessage() {}

// Deprecated: Use LatestEthereumNonceForAccountRequest.ProtoReflect.Descriptor instead.
func (*LatestEthereumNonceForAccountRequest) Descriptor() ([]byte, []int) {
	return file_api_sidecar_service_proto_rawDescGZIP(), []int{9}
}

func (x *LatestEthereumNonceForAccountRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type LatestEthereumNonceForAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint64 `protobuf:"varint,1,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
}

func (x *LatestEthereumNonceForAccountResponse) Reset() {
	*x = LatestEthereumNonceForAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sidecar_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatestEthereumNonceForAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestEthereumNonceForAccountResponse) ProtoMessage() {}

// Deprecated: Use LatestEthereumNonceForAccountResponse.ProtoReflect.Descriptor instead.
func (*LatestEthereumNonceForAccountResponse) Descriptor() ([]byte, []int) {
	return file_api_sidecar_service_proto_rawDescGZIP(), []int{10}
}

func (x *LatestEthereumNonceForAccountResponse) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

type SolanaAccountInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKey string `protobuf:"bytes,1,opt,name=PubKey,proto3" json:"PubKey,omitempty"`
}

func (x *SolanaAccountInfoRequest) Reset() {
	*x = SolanaAccountInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sidecar_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolanaAccountInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolanaAccountInfoRequest) ProtoMessage() {}

// Deprecated: Use SolanaAccountInfoRequest.ProtoReflect.Descriptor instead.
func (*SolanaAccountInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_sidecar_service_proto_rawDescGZIP(), []int{11}
}

func (x *SolanaAccountInfoRequest) GetPubKey() string {
	if x != nil {
		return x.PubKey
	}
	return ""
}

type SolanaAccountInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account []byte `protobuf:"bytes,1,opt,name=Account,proto3" json:"Account,omitempty"`
}

func (x *SolanaAccountInfoResponse) Reset() {
	*x = SolanaAccountInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sidecar_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolanaAccountInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolanaAccountInfoResponse) ProtoMessage() {}

// Deprecated: Use SolanaAccountInfoResponse.ProtoReflect.Descriptor instead.
func (*SolanaAccountInfoResponse) Descriptor() ([]byte, []int) {
	return file_api_sidecar_service_proto_rawDescGZIP(), []int{12}
}

func (x *SolanaAccountInfoResponse) GetAccount() []byte {
	if x != nil {
		return x.Account
	}
	return nil
}

type SolanaMintEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coint     Coin   `protobuf:"varint,1,opt,name=Coint,proto3,enum=api.Coin" json:"Coint,omitempty"`
	SigHash   []byte `protobuf:"bytes,2,opt,name=SigHash,proto3" json:"SigHash,omitempty"`
	Recipient []byte `protobuf:"bytes,3,opt,name=Recipient,proto3" json:"Recipient,omitempty"`
	Height    uint64 `protobuf:"varint,4,opt,name=Height,proto3" json:"Height,omitempty"`
	Value     uint64 `protobuf:"varint,5,opt,name=Value,proto3" json:"Value,omitempty"`
	Fee       uint64 `protobuf:"varint,6,opt,name=Fee,proto3" json:"Fee,omitempty"`
	Mint      []byte `protobuf:"bytes,7,opt,name=Mint,proto3" json:"Mint,omitempty"`
	TxSig     string `protobuf:"bytes,8,opt,name=TxSig,proto3" json:"TxSig,omitempty"`
}

func (x *SolanaMintEvent) Reset() {
	*x = SolanaMintEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sidecar_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolanaMintEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolanaMintEvent) ProtoMessage() {}

// Deprecated: Use SolanaMintEvent.ProtoReflect.Descriptor instead.
func (*SolanaMintEvent) Descriptor() ([]byte, []int) {
	return file_api_sidecar_service_proto_rawDescGZIP(), []int{13}
}

func (x *SolanaMintEvent) GetCoint() Coin {
	if x != nil {
		return x.Coint
	}
	return Coin_UNSPECIFIED
}

func (x *SolanaMintEvent) GetSigHash() []byte {
	if x != nil {
		return x.SigHash
	}
	return nil
}

func (x *SolanaMintEvent) GetRecipient() []byte {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *SolanaMintEvent) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *SolanaMintEvent) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *SolanaMintEvent) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *SolanaMintEvent) GetMint() []byte {
	if x != nil {
		return x.Mint
	}
	return nil
}

func (x *SolanaMintEvent) GetTxSig() string {
	if x != nil {
		return x.TxSig
	}
	return ""
}

var File_api_sidecar_service_proto protoreflect.FileDescriptor

var file_api_sidecar_service_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69,
	0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x3f, 0x0a, 0x1f, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x69, 0x74, 0x63, 0x6f,
	0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x63, 0x0a, 0x21, 0x42, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x42, 0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x1a, 0x42, 0x69, 0x74, 0x63,
	0x6f, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x42, 0x54, 0x43, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x20, 0x0a,
	0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x54, 0x69, 0x70, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x70, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xf0, 0x01,
	0x0a, 0x0e, 0x42, 0x54, 0x43, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72,
	0x65, 0x76, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50,
	0x72, 0x65, 0x76, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x72, 0x6b,
	0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x65,
	0x72, 0x6b, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x69, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x42, 0x69, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20,
	0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x22, 0x65, 0x0a, 0x0a, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2f,
	0x0a, 0x13, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x64, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xcb, 0x01, 0x0a, 0x09, 0x42, 0x75, 0x72, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x67,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x12,
	0x28, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64,
	0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x5a, 0x65, 0x6e, 0x42, 0x54, 0x43, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x5a, 0x65, 0x6e, 0x42, 0x54, 0x43, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa5, 0x05, 0x0a,
	0x14, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x44, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x10, 0x45, 0x69, 0x67, 0x65, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x26, 0x0a, 0x0e, 0x45, 0x74, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x45, 0x74, 0x68, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x74, 0x68,
	0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x45, 0x74, 0x68, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x45,
	0x74, 0x68, 0x42, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x45, 0x74, 0x68, 0x42, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x45,
	0x74, 0x68, 0x54, 0x69, 0x70, 0x43, 0x61, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x45, 0x74, 0x68, 0x54, 0x69, 0x70, 0x43, 0x61, 0x70, 0x12, 0x42, 0x0a, 0x1a, 0x53, 0x6f, 0x6c,
	0x61, 0x6e, 0x61, 0x4c, 0x61, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x50, 0x65, 0x72, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x18,
	0x01, 0x52, 0x1a, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x4c, 0x61, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x50, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x3a, 0x0a,
	0x0d, 0x45, 0x74, 0x68, 0x42, 0x75, 0x72, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x75, 0x72, 0x6e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0d, 0x45, 0x74, 0x68, 0x42,
	0x75, 0x72, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x37, 0x0a, 0x0b, 0x52, 0x65, 0x64,
	0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0b, 0x52, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x4f, 0x43, 0x4b, 0x55, 0x53, 0x44, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x4f, 0x43, 0x4b, 0x55, 0x53,
	0x44, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x54, 0x43, 0x55, 0x53, 0x44,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x42, 0x54, 0x43,
	0x55, 0x53, 0x44, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x54, 0x48, 0x55,
	0x53, 0x44, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x45,
	0x54, 0x48, 0x55, 0x53, 0x44, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x53, 0x6f,
	0x6c, 0x61, 0x6e, 0x61, 0x4d, 0x69, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6f, 0x6c, 0x61, 0x6e,
	0x61, 0x4d, 0x69, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00,
	0x52, 0x10, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x4d, 0x69, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x40, 0x0a, 0x10, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x42, 0x75, 0x72, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x42, 0x75, 0x72, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x04, 0xc8, 0xde,
	0x1f, 0x00, 0x52, 0x10, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x42, 0x75, 0x72, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x1e, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x42, 0x79, 0x45, 0x74, 0x68, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x45, 0x74, 0x68, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e,
	0x45, 0x74, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x40,
	0x0a, 0x24, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d,
	0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x3d, 0x0a, 0x25, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65,
	0x75, 0x6d, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x22,
	0x32, 0x0a, 0x18, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50,
	0x75, 0x62, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x75, 0x62,
	0x4b, 0x65, 0x79, 0x22, 0x35, 0x0a, 0x19, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd4, 0x01, 0x0a, 0x0f, 0x53,
	0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x4d, 0x69, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x05, 0x43, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x05, 0x43, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x53, 0x69, 0x67, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x53, 0x69, 0x67, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x52, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x46, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x46, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x69, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x4d, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x78, 0x53, 0x69, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x78, 0x53, 0x69,
	0x67, 0x2a, 0x2d, 0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x5a, 0x45,
	0x4e, 0x42, 0x54, 0x43, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x4f, 0x43, 0x4b, 0x10, 0x02,
	0x32, 0xe4, 0x04, 0x0a, 0x0e, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x69, 0x64,
	0x65, 0x63, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x45, 0x74, 0x68, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x23, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x45, 0x74, 0x68, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a,
	0x1d, 0x47, 0x65, 0x74, 0x42, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x42, 0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x26,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x42, 0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x69, 0x74,
	0x63, 0x6f, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x7b, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x45, 0x74,
	0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x46,
	0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x45, 0x74, 0x68,
	0x65, 0x72, 0x65, 0x75, 0x6d, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6f, 0x6c,
	0x61, 0x6e, 0x61, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6f, 0x6c, 0x61,
	0x6e, 0x61, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x7c, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x70, 0x69, 0x42, 0x13, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x5a, 0x65, 0x6e, 0x72, 0x6f, 0x63, 0x6b, 0x2d, 0x46, 0x6f,
	0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7a, 0x72, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2f, 0x76, 0x36, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0xa2, 0x02, 0x03, 0x41, 0x58,
	0x58, 0xaa, 0x02, 0x03, 0x41, 0x70, 0x69, 0xca, 0x02, 0x03, 0x41, 0x70, 0x69, 0xe2, 0x02, 0x0f,
	0x41, 0x70, 0x69, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x03, 0x41, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_sidecar_service_proto_rawDescOnce sync.Once
	file_api_sidecar_service_proto_rawDescData = file_api_sidecar_service_proto_rawDesc
)

func file_api_sidecar_service_proto_rawDescGZIP() []byte {
	file_api_sidecar_service_proto_rawDescOnce.Do(func() {
		file_api_sidecar_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_sidecar_service_proto_rawDescData)
	})
	return file_api_sidecar_service_proto_rawDescData
}

var file_api_sidecar_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_sidecar_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_api_sidecar_service_proto_goTypes = []interface{}{
	(Coin)(0),                                     // 0: api.Coin
	(*LatestBitcoinBlockHeaderRequest)(nil),       // 1: api.LatestBitcoinBlockHeaderRequest
	(*BitcoinBlockHeaderByHeightRequest)(nil),     // 2: api.BitcoinBlockHeaderByHeightRequest
	(*BitcoinBlockHeaderResponse)(nil),            // 3: api.BitcoinBlockHeaderResponse
	(*BTCBlockHeader)(nil),                        // 4: api.BTCBlockHeader
	(*Redemption)(nil),                            // 5: api.Redemption
	(*BurnEvent)(nil),                             // 6: api.BurnEvent
	(*SidecarStateRequest)(nil),                   // 7: api.SidecarStateRequest
	(*SidecarStateResponse)(nil),                  // 8: api.SidecarStateResponse
	(*SidecarStateByEthHeightRequest)(nil),        // 9: api.SidecarStateByEthHeightRequest
	(*LatestEthereumNonceForAccountRequest)(nil),  // 10: api.LatestEthereumNonceForAccountRequest
	(*LatestEthereumNonceForAccountResponse)(nil), // 11: api.LatestEthereumNonceForAccountResponse
	(*SolanaAccountInfoRequest)(nil),              // 12: api.SolanaAccountInfoRequest
	(*SolanaAccountInfoResponse)(nil),             // 13: api.SolanaAccountInfoResponse
	(*SolanaMintEvent)(nil),                       // 14: api.SolanaMintEvent
}
var file_api_sidecar_service_proto_depIdxs = []int32{
	4,  // 0: api.BitcoinBlockHeaderResponse.blockHeader:type_name -> api.BTCBlockHeader
	6,  // 1: api.SidecarStateResponse.EthBurnEvents:type_name -> api.BurnEvent
	5,  // 2: api.SidecarStateResponse.Redemptions:type_name -> api.Redemption
	14, // 3: api.SidecarStateResponse.SolanaMintEvents:type_name -> api.SolanaMintEvent
	6,  // 4: api.SidecarStateResponse.SolanaBurnEvents:type_name -> api.BurnEvent
	0,  // 5: api.SolanaMintEvent.Coint:type_name -> api.Coin
	7,  // 6: api.SidecarService.GetSidecarState:input_type -> api.SidecarStateRequest
	9,  // 7: api.SidecarService.GetSidecarStateByEthHeight:input_type -> api.SidecarStateByEthHeightRequest
	2,  // 8: api.SidecarService.GetBitcoinBlockHeaderByHeight:input_type -> api.BitcoinBlockHeaderByHeightRequest
	1,  // 9: api.SidecarService.GetLatestBitcoinBlockHeader:input_type -> api.LatestBitcoinBlockHeaderRequest
	10, // 10: api.SidecarService.GetLatestEthereumNonceForAccount:input_type -> api.LatestEthereumNonceForAccountRequest
	12, // 11: api.SidecarService.GetSolanaAccountInfo:input_type -> api.SolanaAccountInfoRequest
	8,  // 12: api.SidecarService.GetSidecarState:output_type -> api.SidecarStateResponse
	8,  // 13: api.SidecarService.GetSidecarStateByEthHeight:output_type -> api.SidecarStateResponse
	3,  // 14: api.SidecarService.GetBitcoinBlockHeaderByHeight:output_type -> api.BitcoinBlockHeaderResponse
	3,  // 15: api.SidecarService.GetLatestBitcoinBlockHeader:output_type -> api.BitcoinBlockHeaderResponse
	11, // 16: api.SidecarService.GetLatestEthereumNonceForAccount:output_type -> api.LatestEthereumNonceForAccountResponse
	13, // 17: api.SidecarService.GetSolanaAccountInfo:output_type -> api.SolanaAccountInfoResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_api_sidecar_service_proto_init() }
func file_api_sidecar_service_proto_init() {
	if File_api_sidecar_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_sidecar_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatestBitcoinBlockHeaderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sidecar_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BitcoinBlockHeaderByHeightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sidecar_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BitcoinBlockHeaderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sidecar_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BTCBlockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sidecar_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Redemption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sidecar_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BurnEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sidecar_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SidecarStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sidecar_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SidecarStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sidecar_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SidecarStateByEthHeightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sidecar_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatestEthereumNonceForAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sidecar_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatestEthereumNonceForAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sidecar_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SolanaAccountInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sidecar_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SolanaAccountInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sidecar_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SolanaMintEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_sidecar_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_sidecar_service_proto_goTypes,
		DependencyIndexes: file_api_sidecar_service_proto_depIdxs,
		EnumInfos:         file_api_sidecar_service_proto_enumTypes,
		MessageInfos:      file_api_sidecar_service_proto_msgTypes,
	}.Build()
	File_api_sidecar_service_proto = out.File
	file_api_sidecar_service_proto_rawDesc = nil
	file_api_sidecar_service_proto_goTypes = nil
	file_api_sidecar_service_proto_depIdxs = nil
}
